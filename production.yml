version: "3"

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_staticfiles: {}
  production_data: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    image: ghostwriter_production_django
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    labels:
      name: ghostwriter_django
    environment:
      - USE_DOCKER=${USE_DOCKER}
      - IPYTHONDIR=${IPYTHONDIR}
      - DJANGO_ACCOUNT_ALLOW_REGISTRATION=${DJANGO_ACCOUNT_ALLOW_REGISTRATION}
      - DJANGO_ACCOUNT_EMAIL_VERIFICATION=${DJANGO_ACCOUNT_EMAIL_VERIFICATION}
      - DJANGO_ADMIN_URL=${DJANGO_ADMIN_URL}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_CSRF_TRUSTED_ORIGINS=${DJANGO_CSRF_TRUSTED_ORIGINS}
      - DJANGO_DATE_FORMAT=${DJANGO_DATE_FORMAT}
      - DJANGO_JWT_SECRET_KEY=${DJANGO_JWT_SECRET_KEY}
      - DJANGO_QCLUSTER_NAME=${DJANGO_QCLUSTER_NAME}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_SECURE_SSL_REDIRECT=${DJANGO_SECURE_SSL_REDIRECT}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - HASURA_ACTION_SECRET=${HASURA_GRAPHQL_ACTION_SECRET}
      - MAILGUN_API_KEY=${DJANGO_MAILGUN_API_KEY}
      - MAILGUN_DOMAIN=${DJANGO_MAILGUN_DOMAIN}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/0
      - WEB_CONCURRENCY=${DJANGO_WEB_CONCURRENCY}
    command: /start
    volumes:
      - production_staticfiles:/app/staticfiles
      - production_data:/app/ghostwriter/media

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: ghostwriter_production_postgres
    restart: unless-stopped
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    labels:
      name: ghostwriter_postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
    ports:
      - "${POSTGRES_PORT}:5432"

  nginx:
    build: ./compose/production/nginx
    image: ghostwriter_production_nginx
    restart: unless-stopped
    depends_on:
      - django
    volumes:
      - production_data:/app/media
      - production_staticfiles:/app/staticfiles
      - ./compose/production/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/ssl
    labels:
      name: ghostwriter_nginx
    ports:
      - "0.0.0.0:80:80"
      - "0.0.0.0:443:443"

  redis:
    build:
      context: .
      dockerfile: ./compose/production/redis/Dockerfile
    image: ghostwriter_production_redis
    labels:
      name: ghostwriter_redis
    restart: unless-stopped

  queue:
    <<: *django
    image: ghostwriter_production_queue
    restart: unless-stopped
    depends_on:
      - redis
      - postgres
      - django
    ports: []
    labels:
      name: ghostwriter_queue
    command: /start-queue

  graphql_engine:
    build:
      context: .
      dockerfile: ./compose/production/hasura/Dockerfile
    image: ghostwriter_production_graphql
    depends_on:
      - postgres
      - django
    restart: always
    ports:
      - "${HASURA_GRAPHQL_SERVER_PORT}:8080"
      - "9691:9691"
    volumes:
      - ./hasura-docker/metadata:/metadata
      - ./ssl:/etc/ssl/certs
    logging:
      driver: "json-file"
      options:
        max-file: "1"
        max-size: "10m"
    labels:
      name: ghostwriter_graphql
    environment:
      - ACTIONS_URL_BASE=https://${NGINX_HOST}:${NGINX_PORT}/api
      - HASURA_ACTION_SECRET=${HASURA_GRAPHQL_ACTION_SECRET}
      - HASURA_GRAPHQL_ADMIN_SECRET=${HASURA_GRAPHQL_ADMIN_SECRET}
      - HASURA_GRAPHQL_AUTH_HOOK=https://${NGINX_HOST}:${NGINX_PORT}/api/webhook
      - HASURA_GRAPHQL_DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - HASURA_GRAPHQL_DEV_MODE=${HASURA_GRAPHQL_DEV_MODE}
      - HASURA_GRAPHQL_ENABLE_CONSOLE=${HASURA_GRAPHQL_ENABLE_CONSOLE}
      - HASURA_GRAPHQL_ENABLED_LOG_TYPES=${HASURA_GRAPHQL_ENABLED_LOG_TYPES}
      - HASURA_GRAPHQL_ENABLE_TELEMETRY=${HASURA_GRAPHQL_ENABLE_TELEMETRY}
      - HASURA_GRAPHQL_INSECURE_SKIP_TLS_VERIFY=${HASURA_GRAPHQL_INSECURE_SKIP_TLS_VERIFY}
      - HASURA_GRAPHQL_LOG_LEVEL=${HASURA_GRAPHQL_LOG_LEVEL}
      - HASURA_GRAPHQL_METADATA_DIR=${HASURA_GRAPHQL_METADATA_DIR}
      - HASURA_GRAPHQL_MIGRATIONS_DIR=${HASURA_GRAPHQL_MIGRATIONS_DIR}
      - HASURA_GRAPHQL_SERVER_PORT=${HASURA_GRAPHQL_SERVER_PORT}
