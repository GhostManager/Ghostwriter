/* eslint-disable */
import type { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  bigint: { input: any; output: any; }
  date: { input: any; output: any; }
  float8: { input: any; output: any; }
  inet: { input: any; output: any; }
  jsonb: { input: any; output: any; }
  time: { input: any; output: any; }
  timestamptz: { input: any; output: any; }
};

/** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
export type Boolean_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Boolean']['input']>;
  _gt?: InputMaybe<Scalars['Boolean']['input']>;
  _gte?: InputMaybe<Scalars['Boolean']['input']>;
  _in?: InputMaybe<Array<Scalars['Boolean']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Boolean']['input']>;
  _lte?: InputMaybe<Scalars['Boolean']['input']>;
  _neq?: InputMaybe<Scalars['Boolean']['input']>;
  _nin?: InputMaybe<Array<Scalars['Boolean']['input']>>;
};

export type ExtraFieldSpecOutput = {
  __typename?: 'ExtraFieldSpecOutput';
  extraFieldSpec: Scalars['String']['output'];
};

export type GetFindingByTagsResponse = {
  __typename?: 'GetFindingByTagsResponse';
  finding?: Maybe<Finding>;
  id: Scalars['Int']['output'];
};

export type GetObservationByTagsResponse = {
  __typename?: 'GetObservationByTagsResponse';
  id: Scalars['Int']['output'];
  observation?: Maybe<Reporting_Observation>;
};

export type GetOplogEntryByTagsResponse = {
  __typename?: 'GetOplogEntryByTagsResponse';
  id: Scalars['Int']['output'];
  oplog_entry?: Maybe<OplogEntry>;
};

export type GetReportFindingByTagsResponse = {
  __typename?: 'GetReportFindingByTagsResponse';
  id: Scalars['Int']['output'];
  report_finding?: Maybe<Finding>;
};

export type GetReportObservationByTagsResponse = {
  __typename?: 'GetReportObservationByTagsResponse';
  id: Scalars['Int']['output'];
  report_observation?: Maybe<Reporting_Reportobservationlink>;
};

/** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
export type Int_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['Int']['input']>;
  _gt?: InputMaybe<Scalars['Int']['input']>;
  _gte?: InputMaybe<Scalars['Int']['input']>;
  _in?: InputMaybe<Array<Scalars['Int']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['Int']['input']>;
  _lte?: InputMaybe<Scalars['Int']['input']>;
  _neq?: InputMaybe<Scalars['Int']['input']>;
  _nin?: InputMaybe<Array<Scalars['Int']['input']>>;
};

export type LoginResponse = {
  __typename?: 'LoginResponse';
  expires?: Maybe<Scalars['date']['output']>;
  token: Scalars['String']['output'];
};

export type ReportResponse = {
  __typename?: 'ReportResponse';
  docxUrl: Scalars['String']['output'];
  pptxUrl: Scalars['String']['output'];
  reportData: Scalars['String']['output'];
  xlsxUrl: Scalars['String']['output'];
};

/** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
export type String_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['String']['input']>;
  _gt?: InputMaybe<Scalars['String']['input']>;
  _gte?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given case-insensitive pattern */
  _ilike?: InputMaybe<Scalars['String']['input']>;
  _in?: InputMaybe<Array<Scalars['String']['input']>>;
  /** does the column match the given POSIX regular expression, case insensitive */
  _iregex?: InputMaybe<Scalars['String']['input']>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  /** does the column match the given pattern */
  _like?: InputMaybe<Scalars['String']['input']>;
  _lt?: InputMaybe<Scalars['String']['input']>;
  _lte?: InputMaybe<Scalars['String']['input']>;
  _neq?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given case-insensitive pattern */
  _nilike?: InputMaybe<Scalars['String']['input']>;
  _nin?: InputMaybe<Array<Scalars['String']['input']>>;
  /** does the column NOT match the given POSIX regular expression, case insensitive */
  _niregex?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given pattern */
  _nlike?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given POSIX regular expression, case sensitive */
  _nregex?: InputMaybe<Scalars['String']['input']>;
  /** does the column NOT match the given SQL regular expression */
  _nsimilar?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given POSIX regular expression, case sensitive */
  _regex?: InputMaybe<Scalars['String']['input']>;
  /** does the column match the given SQL regular expression */
  _similar?: InputMaybe<Scalars['String']['input']>;
};

export type TagsResult = {
  __typename?: 'TagsResult';
  tags: Array<Scalars['String']['output']>;
};

export type UploadEvidenceResult = {
  __typename?: 'UploadEvidenceResult';
  id: Scalars['Int']['output'];
};

export type UploadReportTemplateResult = {
  __typename?: 'UploadReportTemplateResult';
  id: Scalars['Int']['output'];
};

export type WhoamiOutput = {
  __typename?: 'WhoamiOutput';
  expires?: Maybe<Scalars['date']['output']>;
  role: Scalars['String']['output'];
  username: Scalars['String']['output'];
};

/** columns and relationships of "shepherd_activitytype" */
export type ActivityType = {
  __typename?: 'activityType';
  activity: Scalars['String']['output'];
  /** An array relationship */
  cloudServers: Array<CloudServer>;
  /** An aggregate relationship */
  cloudServers_aggregate: CloudServer_Aggregate;
  /** An array relationship */
  domains: Array<DomainCheckout>;
  /** An aggregate relationship */
  domains_aggregate: DomainCheckout_Aggregate;
  id: Scalars['bigint']['output'];
  /** An array relationship */
  staticServers: Array<ServerCheckout>;
  /** An aggregate relationship */
  staticServers_aggregate: ServerCheckout_Aggregate;
};


/** columns and relationships of "shepherd_activitytype" */
export type ActivityTypeCloudServersArgs = {
  distinct_on?: InputMaybe<Array<CloudServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CloudServer_Order_By>>;
  where?: InputMaybe<CloudServer_Bool_Exp>;
};


/** columns and relationships of "shepherd_activitytype" */
export type ActivityTypeCloudServers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<CloudServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CloudServer_Order_By>>;
  where?: InputMaybe<CloudServer_Bool_Exp>;
};


/** columns and relationships of "shepherd_activitytype" */
export type ActivityTypeDomainsArgs = {
  distinct_on?: InputMaybe<Array<DomainCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainCheckout_Order_By>>;
  where?: InputMaybe<DomainCheckout_Bool_Exp>;
};


/** columns and relationships of "shepherd_activitytype" */
export type ActivityTypeDomains_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DomainCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainCheckout_Order_By>>;
  where?: InputMaybe<DomainCheckout_Bool_Exp>;
};


/** columns and relationships of "shepherd_activitytype" */
export type ActivityTypeStaticServersArgs = {
  distinct_on?: InputMaybe<Array<ServerCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerCheckout_Order_By>>;
  where?: InputMaybe<ServerCheckout_Bool_Exp>;
};


/** columns and relationships of "shepherd_activitytype" */
export type ActivityTypeStaticServers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerCheckout_Order_By>>;
  where?: InputMaybe<ServerCheckout_Bool_Exp>;
};

/** aggregated selection of "shepherd_activitytype" */
export type ActivityType_Aggregate = {
  __typename?: 'activityType_aggregate';
  aggregate?: Maybe<ActivityType_Aggregate_Fields>;
  nodes: Array<ActivityType>;
};

/** aggregate fields of "shepherd_activitytype" */
export type ActivityType_Aggregate_Fields = {
  __typename?: 'activityType_aggregate_fields';
  avg?: Maybe<ActivityType_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ActivityType_Max_Fields>;
  min?: Maybe<ActivityType_Min_Fields>;
  stddev?: Maybe<ActivityType_Stddev_Fields>;
  stddev_pop?: Maybe<ActivityType_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ActivityType_Stddev_Samp_Fields>;
  sum?: Maybe<ActivityType_Sum_Fields>;
  var_pop?: Maybe<ActivityType_Var_Pop_Fields>;
  var_samp?: Maybe<ActivityType_Var_Samp_Fields>;
  variance?: Maybe<ActivityType_Variance_Fields>;
};


/** aggregate fields of "shepherd_activitytype" */
export type ActivityType_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ActivityType_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type ActivityType_Avg_Fields = {
  __typename?: 'activityType_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "shepherd_activitytype". All fields are combined with a logical 'AND'. */
export type ActivityType_Bool_Exp = {
  _and?: InputMaybe<Array<ActivityType_Bool_Exp>>;
  _not?: InputMaybe<ActivityType_Bool_Exp>;
  _or?: InputMaybe<Array<ActivityType_Bool_Exp>>;
  activity?: InputMaybe<String_Comparison_Exp>;
  cloudServers?: InputMaybe<CloudServer_Bool_Exp>;
  cloudServers_aggregate?: InputMaybe<CloudServer_Aggregate_Bool_Exp>;
  domains?: InputMaybe<DomainCheckout_Bool_Exp>;
  domains_aggregate?: InputMaybe<DomainCheckout_Aggregate_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  staticServers?: InputMaybe<ServerCheckout_Bool_Exp>;
  staticServers_aggregate?: InputMaybe<ServerCheckout_Aggregate_Bool_Exp>;
};

/** unique or primary key constraints on table "shepherd_activitytype" */
export enum ActivityType_Constraint {
  /** unique or primary key constraint on columns "activity" */
  ShepherdActivitytypeActivityKey = 'shepherd_activitytype_activity_key',
  /** unique or primary key constraint on columns "id" */
  ShepherdActivitytypePkey = 'shepherd_activitytype_pkey'
}

/** input type for incrementing numeric columns in table "shepherd_activitytype" */
export type ActivityType_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "shepherd_activitytype" */
export type ActivityType_Insert_Input = {
  activity?: InputMaybe<Scalars['String']['input']>;
  cloudServers?: InputMaybe<CloudServer_Arr_Rel_Insert_Input>;
  domains?: InputMaybe<DomainCheckout_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  staticServers?: InputMaybe<ServerCheckout_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type ActivityType_Max_Fields = {
  __typename?: 'activityType_max_fields';
  activity?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
};

/** aggregate min on columns */
export type ActivityType_Min_Fields = {
  __typename?: 'activityType_min_fields';
  activity?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
};

/** response of any mutation on the table "shepherd_activitytype" */
export type ActivityType_Mutation_Response = {
  __typename?: 'activityType_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ActivityType>;
};

/** input type for inserting object relation for remote table "shepherd_activitytype" */
export type ActivityType_Obj_Rel_Insert_Input = {
  data: ActivityType_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ActivityType_On_Conflict>;
};

/** on_conflict condition type for table "shepherd_activitytype" */
export type ActivityType_On_Conflict = {
  constraint: ActivityType_Constraint;
  update_columns?: Array<ActivityType_Update_Column>;
  where?: InputMaybe<ActivityType_Bool_Exp>;
};

/** Ordering options when selecting data from "shepherd_activitytype". */
export type ActivityType_Order_By = {
  activity?: InputMaybe<Order_By>;
  cloudServers_aggregate?: InputMaybe<CloudServer_Aggregate_Order_By>;
  domains_aggregate?: InputMaybe<DomainCheckout_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  staticServers_aggregate?: InputMaybe<ServerCheckout_Aggregate_Order_By>;
};

/** primary key columns input for table: shepherd_activitytype */
export type ActivityType_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "shepherd_activitytype" */
export enum ActivityType_Select_Column {
  /** column name */
  Activity = 'activity',
  /** column name */
  Id = 'id'
}

/** input type for updating data in table "shepherd_activitytype" */
export type ActivityType_Set_Input = {
  activity?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate stddev on columns */
export type ActivityType_Stddev_Fields = {
  __typename?: 'activityType_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type ActivityType_Stddev_Pop_Fields = {
  __typename?: 'activityType_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type ActivityType_Stddev_Samp_Fields = {
  __typename?: 'activityType_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "activityType" */
export type ActivityType_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ActivityType_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ActivityType_Stream_Cursor_Value_Input = {
  activity?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type ActivityType_Sum_Fields = {
  __typename?: 'activityType_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
};

/** update columns of table "shepherd_activitytype" */
export enum ActivityType_Update_Column {
  /** column name */
  Activity = 'activity',
  /** column name */
  Id = 'id'
}

export type ActivityType_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ActivityType_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ActivityType_Set_Input>;
  /** filter the rows which have to be updated */
  where: ActivityType_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ActivityType_Var_Pop_Fields = {
  __typename?: 'activityType_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type ActivityType_Var_Samp_Fields = {
  __typename?: 'activityType_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type ActivityType_Variance_Fields = {
  __typename?: 'activityType_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "reporting_archive" */
export type Archive = {
  __typename?: 'archive';
  id: Scalars['bigint']['output'];
  /** An object relationship */
  project?: Maybe<Project>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  reportArchive: Scalars['String']['output'];
};

/** aggregated selection of "reporting_archive" */
export type Archive_Aggregate = {
  __typename?: 'archive_aggregate';
  aggregate?: Maybe<Archive_Aggregate_Fields>;
  nodes: Array<Archive>;
};

export type Archive_Aggregate_Bool_Exp = {
  count?: InputMaybe<Archive_Aggregate_Bool_Exp_Count>;
};

export type Archive_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Archive_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Archive_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "reporting_archive" */
export type Archive_Aggregate_Fields = {
  __typename?: 'archive_aggregate_fields';
  avg?: Maybe<Archive_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Archive_Max_Fields>;
  min?: Maybe<Archive_Min_Fields>;
  stddev?: Maybe<Archive_Stddev_Fields>;
  stddev_pop?: Maybe<Archive_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Archive_Stddev_Samp_Fields>;
  sum?: Maybe<Archive_Sum_Fields>;
  var_pop?: Maybe<Archive_Var_Pop_Fields>;
  var_samp?: Maybe<Archive_Var_Samp_Fields>;
  variance?: Maybe<Archive_Variance_Fields>;
};


/** aggregate fields of "reporting_archive" */
export type Archive_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Archive_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "reporting_archive" */
export type Archive_Aggregate_Order_By = {
  avg?: InputMaybe<Archive_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Archive_Max_Order_By>;
  min?: InputMaybe<Archive_Min_Order_By>;
  stddev?: InputMaybe<Archive_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Archive_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Archive_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Archive_Sum_Order_By>;
  var_pop?: InputMaybe<Archive_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Archive_Var_Samp_Order_By>;
  variance?: InputMaybe<Archive_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "reporting_archive" */
export type Archive_Arr_Rel_Insert_Input = {
  data: Array<Archive_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Archive_On_Conflict>;
};

/** aggregate avg on columns */
export type Archive_Avg_Fields = {
  __typename?: 'archive_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "reporting_archive" */
export type Archive_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "reporting_archive". All fields are combined with a logical 'AND'. */
export type Archive_Bool_Exp = {
  _and?: InputMaybe<Array<Archive_Bool_Exp>>;
  _not?: InputMaybe<Archive_Bool_Exp>;
  _or?: InputMaybe<Array<Archive_Bool_Exp>>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  project?: InputMaybe<Project_Bool_Exp>;
  projectId?: InputMaybe<Bigint_Comparison_Exp>;
  reportArchive?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "reporting_archive" */
export enum Archive_Constraint {
  /** unique or primary key constraint on columns "id" */
  ReportingArchivePkey = 'reporting_archive_pkey'
}

/** input type for incrementing numeric columns in table "reporting_archive" */
export type Archive_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "reporting_archive" */
export type Archive_Insert_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  project?: InputMaybe<Project_Obj_Rel_Insert_Input>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  reportArchive?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Archive_Max_Fields = {
  __typename?: 'archive_max_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  reportArchive?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "reporting_archive" */
export type Archive_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  reportArchive?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Archive_Min_Fields = {
  __typename?: 'archive_min_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  reportArchive?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "reporting_archive" */
export type Archive_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  reportArchive?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "reporting_archive" */
export type Archive_Mutation_Response = {
  __typename?: 'archive_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Archive>;
};

/** on_conflict condition type for table "reporting_archive" */
export type Archive_On_Conflict = {
  constraint: Archive_Constraint;
  update_columns?: Array<Archive_Update_Column>;
  where?: InputMaybe<Archive_Bool_Exp>;
};

/** Ordering options when selecting data from "reporting_archive". */
export type Archive_Order_By = {
  id?: InputMaybe<Order_By>;
  project?: InputMaybe<Project_Order_By>;
  projectId?: InputMaybe<Order_By>;
  reportArchive?: InputMaybe<Order_By>;
};

/** primary key columns input for table: reporting_archive */
export type Archive_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "reporting_archive" */
export enum Archive_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  ReportArchive = 'reportArchive'
}

/** input type for updating data in table "reporting_archive" */
export type Archive_Set_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  reportArchive?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Archive_Stddev_Fields = {
  __typename?: 'archive_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "reporting_archive" */
export type Archive_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Archive_Stddev_Pop_Fields = {
  __typename?: 'archive_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "reporting_archive" */
export type Archive_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Archive_Stddev_Samp_Fields = {
  __typename?: 'archive_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "reporting_archive" */
export type Archive_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "archive" */
export type Archive_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Archive_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Archive_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  reportArchive?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Archive_Sum_Fields = {
  __typename?: 'archive_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "reporting_archive" */
export type Archive_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** update columns of table "reporting_archive" */
export enum Archive_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  ReportArchive = 'reportArchive'
}

export type Archive_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Archive_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Archive_Set_Input>;
  /** filter the rows which have to be updated */
  where: Archive_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Archive_Var_Pop_Fields = {
  __typename?: 'archive_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "reporting_archive" */
export type Archive_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Archive_Var_Samp_Fields = {
  __typename?: 'archive_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "reporting_archive" */
export type Archive_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Archive_Variance_Fields = {
  __typename?: 'archive_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "reporting_archive" */
export type Archive_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

export type AttachFindingResponse = {
  __typename?: 'attachFindingResponse';
  id: Scalars['Int']['output'];
};

/** columns and relationships of "auth_permission" */
export type AuthPermission = {
  __typename?: 'authPermission';
  /** An array relationship */
  authGroupPermissions: Array<GroupPermission>;
  /** An aggregate relationship */
  authGroupPermissions_aggregate: GroupPermission_Aggregate;
  codename: Scalars['String']['output'];
  contentTypeId: Scalars['Int']['output'];
  /** An object relationship */
  djangoContentType: DjangoContentType;
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  /** An array relationship */
  userPermissions: Array<UserPermission>;
  /** An aggregate relationship */
  userPermissions_aggregate: UserPermission_Aggregate;
};


/** columns and relationships of "auth_permission" */
export type AuthPermissionAuthGroupPermissionsArgs = {
  distinct_on?: InputMaybe<Array<GroupPermission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<GroupPermission_Order_By>>;
  where?: InputMaybe<GroupPermission_Bool_Exp>;
};


/** columns and relationships of "auth_permission" */
export type AuthPermissionAuthGroupPermissions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<GroupPermission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<GroupPermission_Order_By>>;
  where?: InputMaybe<GroupPermission_Bool_Exp>;
};


/** columns and relationships of "auth_permission" */
export type AuthPermissionUserPermissionsArgs = {
  distinct_on?: InputMaybe<Array<UserPermission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<UserPermission_Order_By>>;
  where?: InputMaybe<UserPermission_Bool_Exp>;
};


/** columns and relationships of "auth_permission" */
export type AuthPermissionUserPermissions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<UserPermission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<UserPermission_Order_By>>;
  where?: InputMaybe<UserPermission_Bool_Exp>;
};

/** aggregated selection of "auth_permission" */
export type AuthPermission_Aggregate = {
  __typename?: 'authPermission_aggregate';
  aggregate?: Maybe<AuthPermission_Aggregate_Fields>;
  nodes: Array<AuthPermission>;
};

export type AuthPermission_Aggregate_Bool_Exp = {
  count?: InputMaybe<AuthPermission_Aggregate_Bool_Exp_Count>;
};

export type AuthPermission_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<AuthPermission_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<AuthPermission_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "auth_permission" */
export type AuthPermission_Aggregate_Fields = {
  __typename?: 'authPermission_aggregate_fields';
  avg?: Maybe<AuthPermission_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<AuthPermission_Max_Fields>;
  min?: Maybe<AuthPermission_Min_Fields>;
  stddev?: Maybe<AuthPermission_Stddev_Fields>;
  stddev_pop?: Maybe<AuthPermission_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<AuthPermission_Stddev_Samp_Fields>;
  sum?: Maybe<AuthPermission_Sum_Fields>;
  var_pop?: Maybe<AuthPermission_Var_Pop_Fields>;
  var_samp?: Maybe<AuthPermission_Var_Samp_Fields>;
  variance?: Maybe<AuthPermission_Variance_Fields>;
};


/** aggregate fields of "auth_permission" */
export type AuthPermission_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<AuthPermission_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "auth_permission" */
export type AuthPermission_Aggregate_Order_By = {
  avg?: InputMaybe<AuthPermission_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<AuthPermission_Max_Order_By>;
  min?: InputMaybe<AuthPermission_Min_Order_By>;
  stddev?: InputMaybe<AuthPermission_Stddev_Order_By>;
  stddev_pop?: InputMaybe<AuthPermission_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<AuthPermission_Stddev_Samp_Order_By>;
  sum?: InputMaybe<AuthPermission_Sum_Order_By>;
  var_pop?: InputMaybe<AuthPermission_Var_Pop_Order_By>;
  var_samp?: InputMaybe<AuthPermission_Var_Samp_Order_By>;
  variance?: InputMaybe<AuthPermission_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "auth_permission" */
export type AuthPermission_Arr_Rel_Insert_Input = {
  data: Array<AuthPermission_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<AuthPermission_On_Conflict>;
};

/** aggregate avg on columns */
export type AuthPermission_Avg_Fields = {
  __typename?: 'authPermission_avg_fields';
  contentTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "auth_permission" */
export type AuthPermission_Avg_Order_By = {
  contentTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "auth_permission". All fields are combined with a logical 'AND'. */
export type AuthPermission_Bool_Exp = {
  _and?: InputMaybe<Array<AuthPermission_Bool_Exp>>;
  _not?: InputMaybe<AuthPermission_Bool_Exp>;
  _or?: InputMaybe<Array<AuthPermission_Bool_Exp>>;
  authGroupPermissions?: InputMaybe<GroupPermission_Bool_Exp>;
  authGroupPermissions_aggregate?: InputMaybe<GroupPermission_Aggregate_Bool_Exp>;
  codename?: InputMaybe<String_Comparison_Exp>;
  contentTypeId?: InputMaybe<Int_Comparison_Exp>;
  djangoContentType?: InputMaybe<DjangoContentType_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  userPermissions?: InputMaybe<UserPermission_Bool_Exp>;
  userPermissions_aggregate?: InputMaybe<UserPermission_Aggregate_Bool_Exp>;
};

/** unique or primary key constraints on table "auth_permission" */
export enum AuthPermission_Constraint {
  /** unique or primary key constraint on columns "codename", "content_type_id" */
  AuthPermissionContentTypeIdCodename_01ab375aUniq = 'auth_permission_content_type_id_codename_01ab375a_uniq',
  /** unique or primary key constraint on columns "id" */
  AuthPermissionPkey = 'auth_permission_pkey'
}

/** input type for incrementing numeric columns in table "auth_permission" */
export type AuthPermission_Inc_Input = {
  contentTypeId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "auth_permission" */
export type AuthPermission_Insert_Input = {
  authGroupPermissions?: InputMaybe<GroupPermission_Arr_Rel_Insert_Input>;
  codename?: InputMaybe<Scalars['String']['input']>;
  contentTypeId?: InputMaybe<Scalars['Int']['input']>;
  djangoContentType?: InputMaybe<DjangoContentType_Obj_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  userPermissions?: InputMaybe<UserPermission_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type AuthPermission_Max_Fields = {
  __typename?: 'authPermission_max_fields';
  codename?: Maybe<Scalars['String']['output']>;
  contentTypeId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "auth_permission" */
export type AuthPermission_Max_Order_By = {
  codename?: InputMaybe<Order_By>;
  contentTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type AuthPermission_Min_Fields = {
  __typename?: 'authPermission_min_fields';
  codename?: Maybe<Scalars['String']['output']>;
  contentTypeId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "auth_permission" */
export type AuthPermission_Min_Order_By = {
  codename?: InputMaybe<Order_By>;
  contentTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "auth_permission" */
export type AuthPermission_Mutation_Response = {
  __typename?: 'authPermission_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<AuthPermission>;
};

/** input type for inserting object relation for remote table "auth_permission" */
export type AuthPermission_Obj_Rel_Insert_Input = {
  data: AuthPermission_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<AuthPermission_On_Conflict>;
};

/** on_conflict condition type for table "auth_permission" */
export type AuthPermission_On_Conflict = {
  constraint: AuthPermission_Constraint;
  update_columns?: Array<AuthPermission_Update_Column>;
  where?: InputMaybe<AuthPermission_Bool_Exp>;
};

/** Ordering options when selecting data from "auth_permission". */
export type AuthPermission_Order_By = {
  authGroupPermissions_aggregate?: InputMaybe<GroupPermission_Aggregate_Order_By>;
  codename?: InputMaybe<Order_By>;
  contentTypeId?: InputMaybe<Order_By>;
  djangoContentType?: InputMaybe<DjangoContentType_Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  userPermissions_aggregate?: InputMaybe<UserPermission_Aggregate_Order_By>;
};

/** primary key columns input for table: auth_permission */
export type AuthPermission_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "auth_permission" */
export enum AuthPermission_Select_Column {
  /** column name */
  Codename = 'codename',
  /** column name */
  ContentTypeId = 'contentTypeId',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "auth_permission" */
export type AuthPermission_Set_Input = {
  codename?: InputMaybe<Scalars['String']['input']>;
  contentTypeId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type AuthPermission_Stddev_Fields = {
  __typename?: 'authPermission_stddev_fields';
  contentTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "auth_permission" */
export type AuthPermission_Stddev_Order_By = {
  contentTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type AuthPermission_Stddev_Pop_Fields = {
  __typename?: 'authPermission_stddev_pop_fields';
  contentTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "auth_permission" */
export type AuthPermission_Stddev_Pop_Order_By = {
  contentTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type AuthPermission_Stddev_Samp_Fields = {
  __typename?: 'authPermission_stddev_samp_fields';
  contentTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "auth_permission" */
export type AuthPermission_Stddev_Samp_Order_By = {
  contentTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "authPermission" */
export type AuthPermission_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: AuthPermission_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type AuthPermission_Stream_Cursor_Value_Input = {
  codename?: InputMaybe<Scalars['String']['input']>;
  contentTypeId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type AuthPermission_Sum_Fields = {
  __typename?: 'authPermission_sum_fields';
  contentTypeId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "auth_permission" */
export type AuthPermission_Sum_Order_By = {
  contentTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "auth_permission" */
export enum AuthPermission_Update_Column {
  /** column name */
  Codename = 'codename',
  /** column name */
  ContentTypeId = 'contentTypeId',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type AuthPermission_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<AuthPermission_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<AuthPermission_Set_Input>;
  /** filter the rows which have to be updated */
  where: AuthPermission_Bool_Exp;
};

/** aggregate var_pop on columns */
export type AuthPermission_Var_Pop_Fields = {
  __typename?: 'authPermission_var_pop_fields';
  contentTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "auth_permission" */
export type AuthPermission_Var_Pop_Order_By = {
  contentTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type AuthPermission_Var_Samp_Fields = {
  __typename?: 'authPermission_var_samp_fields';
  contentTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "auth_permission" */
export type AuthPermission_Var_Samp_Order_By = {
  contentTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type AuthPermission_Variance_Fields = {
  __typename?: 'authPermission_variance_fields';
  contentTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "auth_permission" */
export type AuthPermission_Variance_Order_By = {
  contentTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "shepherd_auxserveraddress" */
export type AuxServerAddresses = {
  __typename?: 'auxServerAddresses';
  id: Scalars['bigint']['output'];
  ipAddress?: Maybe<Scalars['inet']['output']>;
  primary: Scalars['Boolean']['output'];
  /** An object relationship */
  server: StaticServer;
  staticServerId: Scalars['bigint']['output'];
};

/** aggregated selection of "shepherd_auxserveraddress" */
export type AuxServerAddresses_Aggregate = {
  __typename?: 'auxServerAddresses_aggregate';
  aggregate?: Maybe<AuxServerAddresses_Aggregate_Fields>;
  nodes: Array<AuxServerAddresses>;
};

export type AuxServerAddresses_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<AuxServerAddresses_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<AuxServerAddresses_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<AuxServerAddresses_Aggregate_Bool_Exp_Count>;
};

export type AuxServerAddresses_Aggregate_Bool_Exp_Bool_And = {
  arguments: AuxServerAddresses_Select_Column_AuxServerAddresses_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<AuxServerAddresses_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type AuxServerAddresses_Aggregate_Bool_Exp_Bool_Or = {
  arguments: AuxServerAddresses_Select_Column_AuxServerAddresses_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<AuxServerAddresses_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type AuxServerAddresses_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<AuxServerAddresses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<AuxServerAddresses_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "shepherd_auxserveraddress" */
export type AuxServerAddresses_Aggregate_Fields = {
  __typename?: 'auxServerAddresses_aggregate_fields';
  avg?: Maybe<AuxServerAddresses_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<AuxServerAddresses_Max_Fields>;
  min?: Maybe<AuxServerAddresses_Min_Fields>;
  stddev?: Maybe<AuxServerAddresses_Stddev_Fields>;
  stddev_pop?: Maybe<AuxServerAddresses_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<AuxServerAddresses_Stddev_Samp_Fields>;
  sum?: Maybe<AuxServerAddresses_Sum_Fields>;
  var_pop?: Maybe<AuxServerAddresses_Var_Pop_Fields>;
  var_samp?: Maybe<AuxServerAddresses_Var_Samp_Fields>;
  variance?: Maybe<AuxServerAddresses_Variance_Fields>;
};


/** aggregate fields of "shepherd_auxserveraddress" */
export type AuxServerAddresses_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<AuxServerAddresses_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "shepherd_auxserveraddress" */
export type AuxServerAddresses_Aggregate_Order_By = {
  avg?: InputMaybe<AuxServerAddresses_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<AuxServerAddresses_Max_Order_By>;
  min?: InputMaybe<AuxServerAddresses_Min_Order_By>;
  stddev?: InputMaybe<AuxServerAddresses_Stddev_Order_By>;
  stddev_pop?: InputMaybe<AuxServerAddresses_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<AuxServerAddresses_Stddev_Samp_Order_By>;
  sum?: InputMaybe<AuxServerAddresses_Sum_Order_By>;
  var_pop?: InputMaybe<AuxServerAddresses_Var_Pop_Order_By>;
  var_samp?: InputMaybe<AuxServerAddresses_Var_Samp_Order_By>;
  variance?: InputMaybe<AuxServerAddresses_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "shepherd_auxserveraddress" */
export type AuxServerAddresses_Arr_Rel_Insert_Input = {
  data: Array<AuxServerAddresses_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<AuxServerAddresses_On_Conflict>;
};

/** aggregate avg on columns */
export type AuxServerAddresses_Avg_Fields = {
  __typename?: 'auxServerAddresses_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  staticServerId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "shepherd_auxserveraddress" */
export type AuxServerAddresses_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  staticServerId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "shepherd_auxserveraddress". All fields are combined with a logical 'AND'. */
export type AuxServerAddresses_Bool_Exp = {
  _and?: InputMaybe<Array<AuxServerAddresses_Bool_Exp>>;
  _not?: InputMaybe<AuxServerAddresses_Bool_Exp>;
  _or?: InputMaybe<Array<AuxServerAddresses_Bool_Exp>>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  ipAddress?: InputMaybe<Inet_Comparison_Exp>;
  primary?: InputMaybe<Boolean_Comparison_Exp>;
  server?: InputMaybe<StaticServer_Bool_Exp>;
  staticServerId?: InputMaybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "shepherd_auxserveraddress" */
export enum AuxServerAddresses_Constraint {
  /** unique or primary key constraint on columns "id" */
  ShepherdAuxserveraddressPkey = 'shepherd_auxserveraddress_pkey'
}

/** input type for incrementing numeric columns in table "shepherd_auxserveraddress" */
export type AuxServerAddresses_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  staticServerId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "shepherd_auxserveraddress" */
export type AuxServerAddresses_Insert_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  primary?: InputMaybe<Scalars['Boolean']['input']>;
  server?: InputMaybe<StaticServer_Obj_Rel_Insert_Input>;
  staticServerId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate max on columns */
export type AuxServerAddresses_Max_Fields = {
  __typename?: 'auxServerAddresses_max_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  staticServerId?: Maybe<Scalars['bigint']['output']>;
};

/** order by max() on columns of table "shepherd_auxserveraddress" */
export type AuxServerAddresses_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  staticServerId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type AuxServerAddresses_Min_Fields = {
  __typename?: 'auxServerAddresses_min_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  staticServerId?: Maybe<Scalars['bigint']['output']>;
};

/** order by min() on columns of table "shepherd_auxserveraddress" */
export type AuxServerAddresses_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  staticServerId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "shepherd_auxserveraddress" */
export type AuxServerAddresses_Mutation_Response = {
  __typename?: 'auxServerAddresses_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<AuxServerAddresses>;
};

/** on_conflict condition type for table "shepherd_auxserveraddress" */
export type AuxServerAddresses_On_Conflict = {
  constraint: AuxServerAddresses_Constraint;
  update_columns?: Array<AuxServerAddresses_Update_Column>;
  where?: InputMaybe<AuxServerAddresses_Bool_Exp>;
};

/** Ordering options when selecting data from "shepherd_auxserveraddress". */
export type AuxServerAddresses_Order_By = {
  id?: InputMaybe<Order_By>;
  ipAddress?: InputMaybe<Order_By>;
  primary?: InputMaybe<Order_By>;
  server?: InputMaybe<StaticServer_Order_By>;
  staticServerId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: shepherd_auxserveraddress */
export type AuxServerAddresses_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "shepherd_auxserveraddress" */
export enum AuxServerAddresses_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  IpAddress = 'ipAddress',
  /** column name */
  Primary = 'primary',
  /** column name */
  StaticServerId = 'staticServerId'
}

/** select "auxServerAddresses_aggregate_bool_exp_bool_and_arguments_columns" columns of table "shepherd_auxserveraddress" */
export enum AuxServerAddresses_Select_Column_AuxServerAddresses_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Primary = 'primary'
}

/** select "auxServerAddresses_aggregate_bool_exp_bool_or_arguments_columns" columns of table "shepherd_auxserveraddress" */
export enum AuxServerAddresses_Select_Column_AuxServerAddresses_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Primary = 'primary'
}

/** input type for updating data in table "shepherd_auxserveraddress" */
export type AuxServerAddresses_Set_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  primary?: InputMaybe<Scalars['Boolean']['input']>;
  staticServerId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate stddev on columns */
export type AuxServerAddresses_Stddev_Fields = {
  __typename?: 'auxServerAddresses_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  staticServerId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "shepherd_auxserveraddress" */
export type AuxServerAddresses_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  staticServerId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type AuxServerAddresses_Stddev_Pop_Fields = {
  __typename?: 'auxServerAddresses_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  staticServerId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "shepherd_auxserveraddress" */
export type AuxServerAddresses_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  staticServerId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type AuxServerAddresses_Stddev_Samp_Fields = {
  __typename?: 'auxServerAddresses_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  staticServerId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "shepherd_auxserveraddress" */
export type AuxServerAddresses_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  staticServerId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "auxServerAddresses" */
export type AuxServerAddresses_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: AuxServerAddresses_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type AuxServerAddresses_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  primary?: InputMaybe<Scalars['Boolean']['input']>;
  staticServerId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type AuxServerAddresses_Sum_Fields = {
  __typename?: 'auxServerAddresses_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  staticServerId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "shepherd_auxserveraddress" */
export type AuxServerAddresses_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  staticServerId?: InputMaybe<Order_By>;
};

/** update columns of table "shepherd_auxserveraddress" */
export enum AuxServerAddresses_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  IpAddress = 'ipAddress',
  /** column name */
  Primary = 'primary',
  /** column name */
  StaticServerId = 'staticServerId'
}

export type AuxServerAddresses_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<AuxServerAddresses_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<AuxServerAddresses_Set_Input>;
  /** filter the rows which have to be updated */
  where: AuxServerAddresses_Bool_Exp;
};

/** aggregate var_pop on columns */
export type AuxServerAddresses_Var_Pop_Fields = {
  __typename?: 'auxServerAddresses_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  staticServerId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "shepherd_auxserveraddress" */
export type AuxServerAddresses_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  staticServerId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type AuxServerAddresses_Var_Samp_Fields = {
  __typename?: 'auxServerAddresses_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  staticServerId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "shepherd_auxserveraddress" */
export type AuxServerAddresses_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  staticServerId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type AuxServerAddresses_Variance_Fields = {
  __typename?: 'auxServerAddresses_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  staticServerId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "shepherd_auxserveraddress" */
export type AuxServerAddresses_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  staticServerId?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
export type Bigint_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['bigint']['input']>;
  _gt?: InputMaybe<Scalars['bigint']['input']>;
  _gte?: InputMaybe<Scalars['bigint']['input']>;
  _in?: InputMaybe<Array<Scalars['bigint']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['bigint']['input']>;
  _lte?: InputMaybe<Scalars['bigint']['input']>;
  _neq?: InputMaybe<Scalars['bigint']['input']>;
  _nin?: InputMaybe<Array<Scalars['bigint']['input']>>;
};

export type CheckoutResponse = {
  __typename?: 'checkoutResponse';
  result: Scalars['String']['output'];
};

/** columns and relationships of "rolodex_client" */
export type Client = {
  __typename?: 'client';
  address: Scalars['String']['output'];
  codename: Scalars['String']['output'];
  /** An array relationship */
  comments: Array<ClientNote>;
  /** An aggregate relationship */
  comments_aggregate: ClientNote_Aggregate;
  /** An array relationship */
  contacts: Array<ClientContact>;
  /** An aggregate relationship */
  contacts_aggregate: ClientContact_Aggregate;
  /** An array relationship */
  domains: Array<DomainCheckout>;
  /** An aggregate relationship */
  domains_aggregate: DomainCheckout_Aggregate;
  extraFields: Scalars['jsonb']['output'];
  id: Scalars['bigint']['output'];
  /** An array relationship */
  invites: Array<ClientInvite>;
  /** An aggregate relationship */
  invites_aggregate: ClientInvite_Aggregate;
  name: Scalars['String']['output'];
  note: Scalars['String']['output'];
  /** An array relationship */
  projects: Array<Project>;
  /** An aggregate relationship */
  projects_aggregate: Project_Aggregate;
  /** An array relationship */
  servers: Array<ServerCheckout>;
  /** An aggregate relationship */
  servers_aggregate: ServerCheckout_Aggregate;
  shortName: Scalars['String']['output'];
  /** An array relationship */
  templates: Array<Template>;
  /** An aggregate relationship */
  templates_aggregate: Template_Aggregate;
  timezone: Scalars['String']['output'];
};


/** columns and relationships of "rolodex_client" */
export type ClientCommentsArgs = {
  distinct_on?: InputMaybe<Array<ClientNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientNote_Order_By>>;
  where?: InputMaybe<ClientNote_Bool_Exp>;
};


/** columns and relationships of "rolodex_client" */
export type ClientComments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ClientNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientNote_Order_By>>;
  where?: InputMaybe<ClientNote_Bool_Exp>;
};


/** columns and relationships of "rolodex_client" */
export type ClientContactsArgs = {
  distinct_on?: InputMaybe<Array<ClientContact_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientContact_Order_By>>;
  where?: InputMaybe<ClientContact_Bool_Exp>;
};


/** columns and relationships of "rolodex_client" */
export type ClientContacts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ClientContact_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientContact_Order_By>>;
  where?: InputMaybe<ClientContact_Bool_Exp>;
};


/** columns and relationships of "rolodex_client" */
export type ClientDomainsArgs = {
  distinct_on?: InputMaybe<Array<DomainCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainCheckout_Order_By>>;
  where?: InputMaybe<DomainCheckout_Bool_Exp>;
};


/** columns and relationships of "rolodex_client" */
export type ClientDomains_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DomainCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainCheckout_Order_By>>;
  where?: InputMaybe<DomainCheckout_Bool_Exp>;
};


/** columns and relationships of "rolodex_client" */
export type ClientExtraFieldsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "rolodex_client" */
export type ClientInvitesArgs = {
  distinct_on?: InputMaybe<Array<ClientInvite_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientInvite_Order_By>>;
  where?: InputMaybe<ClientInvite_Bool_Exp>;
};


/** columns and relationships of "rolodex_client" */
export type ClientInvites_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ClientInvite_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientInvite_Order_By>>;
  where?: InputMaybe<ClientInvite_Bool_Exp>;
};


/** columns and relationships of "rolodex_client" */
export type ClientProjectsArgs = {
  distinct_on?: InputMaybe<Array<Project_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Order_By>>;
  where?: InputMaybe<Project_Bool_Exp>;
};


/** columns and relationships of "rolodex_client" */
export type ClientProjects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Order_By>>;
  where?: InputMaybe<Project_Bool_Exp>;
};


/** columns and relationships of "rolodex_client" */
export type ClientServersArgs = {
  distinct_on?: InputMaybe<Array<ServerCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerCheckout_Order_By>>;
  where?: InputMaybe<ServerCheckout_Bool_Exp>;
};


/** columns and relationships of "rolodex_client" */
export type ClientServers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerCheckout_Order_By>>;
  where?: InputMaybe<ServerCheckout_Bool_Exp>;
};


/** columns and relationships of "rolodex_client" */
export type ClientTemplatesArgs = {
  distinct_on?: InputMaybe<Array<Template_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Template_Order_By>>;
  where?: InputMaybe<Template_Bool_Exp>;
};


/** columns and relationships of "rolodex_client" */
export type ClientTemplates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Template_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Template_Order_By>>;
  where?: InputMaybe<Template_Bool_Exp>;
};

/** columns and relationships of "rolodex_clientcontact" */
export type ClientContact = {
  __typename?: 'clientContact';
  /** An object relationship */
  client: Client;
  clientId: Scalars['bigint']['output'];
  email: Scalars['String']['output'];
  id: Scalars['bigint']['output'];
  jobTitle: Scalars['String']['output'];
  name: Scalars['String']['output'];
  note: Scalars['String']['output'];
  phone: Scalars['String']['output'];
  timezone: Scalars['String']['output'];
};

/** aggregated selection of "rolodex_clientcontact" */
export type ClientContact_Aggregate = {
  __typename?: 'clientContact_aggregate';
  aggregate?: Maybe<ClientContact_Aggregate_Fields>;
  nodes: Array<ClientContact>;
};

export type ClientContact_Aggregate_Bool_Exp = {
  count?: InputMaybe<ClientContact_Aggregate_Bool_Exp_Count>;
};

export type ClientContact_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ClientContact_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ClientContact_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "rolodex_clientcontact" */
export type ClientContact_Aggregate_Fields = {
  __typename?: 'clientContact_aggregate_fields';
  avg?: Maybe<ClientContact_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ClientContact_Max_Fields>;
  min?: Maybe<ClientContact_Min_Fields>;
  stddev?: Maybe<ClientContact_Stddev_Fields>;
  stddev_pop?: Maybe<ClientContact_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ClientContact_Stddev_Samp_Fields>;
  sum?: Maybe<ClientContact_Sum_Fields>;
  var_pop?: Maybe<ClientContact_Var_Pop_Fields>;
  var_samp?: Maybe<ClientContact_Var_Samp_Fields>;
  variance?: Maybe<ClientContact_Variance_Fields>;
};


/** aggregate fields of "rolodex_clientcontact" */
export type ClientContact_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ClientContact_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "rolodex_clientcontact" */
export type ClientContact_Aggregate_Order_By = {
  avg?: InputMaybe<ClientContact_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ClientContact_Max_Order_By>;
  min?: InputMaybe<ClientContact_Min_Order_By>;
  stddev?: InputMaybe<ClientContact_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ClientContact_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ClientContact_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ClientContact_Sum_Order_By>;
  var_pop?: InputMaybe<ClientContact_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ClientContact_Var_Samp_Order_By>;
  variance?: InputMaybe<ClientContact_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "rolodex_clientcontact" */
export type ClientContact_Arr_Rel_Insert_Input = {
  data: Array<ClientContact_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ClientContact_On_Conflict>;
};

/** aggregate avg on columns */
export type ClientContact_Avg_Fields = {
  __typename?: 'clientContact_avg_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "rolodex_clientcontact" */
export type ClientContact_Avg_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "rolodex_clientcontact". All fields are combined with a logical 'AND'. */
export type ClientContact_Bool_Exp = {
  _and?: InputMaybe<Array<ClientContact_Bool_Exp>>;
  _not?: InputMaybe<ClientContact_Bool_Exp>;
  _or?: InputMaybe<Array<ClientContact_Bool_Exp>>;
  client?: InputMaybe<Client_Bool_Exp>;
  clientId?: InputMaybe<Bigint_Comparison_Exp>;
  email?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  jobTitle?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  phone?: InputMaybe<String_Comparison_Exp>;
  timezone?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "rolodex_clientcontact" */
export enum ClientContact_Constraint {
  /** unique or primary key constraint on columns "client_id", "name" */
  RolodexClientcontactNameClientIdF6ee6e36Uniq = 'rolodex_clientcontact_name_client_id_f6ee6e36_uniq',
  /** unique or primary key constraint on columns "id" */
  RolodexClientcontactPkey = 'rolodex_clientcontact_pkey'
}

/** input type for incrementing numeric columns in table "rolodex_clientcontact" */
export type ClientContact_Inc_Input = {
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "rolodex_clientcontact" */
export type ClientContact_Insert_Input = {
  client?: InputMaybe<Client_Obj_Rel_Insert_Input>;
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  jobTitle?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  timezone?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type ClientContact_Max_Fields = {
  __typename?: 'clientContact_max_fields';
  clientId?: Maybe<Scalars['bigint']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  jobTitle?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  timezone?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "rolodex_clientcontact" */
export type ClientContact_Max_Order_By = {
  clientId?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  jobTitle?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  phone?: InputMaybe<Order_By>;
  timezone?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ClientContact_Min_Fields = {
  __typename?: 'clientContact_min_fields';
  clientId?: Maybe<Scalars['bigint']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  jobTitle?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  timezone?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "rolodex_clientcontact" */
export type ClientContact_Min_Order_By = {
  clientId?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  jobTitle?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  phone?: InputMaybe<Order_By>;
  timezone?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "rolodex_clientcontact" */
export type ClientContact_Mutation_Response = {
  __typename?: 'clientContact_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ClientContact>;
};

/** on_conflict condition type for table "rolodex_clientcontact" */
export type ClientContact_On_Conflict = {
  constraint: ClientContact_Constraint;
  update_columns?: Array<ClientContact_Update_Column>;
  where?: InputMaybe<ClientContact_Bool_Exp>;
};

/** Ordering options when selecting data from "rolodex_clientcontact". */
export type ClientContact_Order_By = {
  client?: InputMaybe<Client_Order_By>;
  clientId?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  jobTitle?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  phone?: InputMaybe<Order_By>;
  timezone?: InputMaybe<Order_By>;
};

/** primary key columns input for table: rolodex_clientcontact */
export type ClientContact_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "rolodex_clientcontact" */
export enum ClientContact_Select_Column {
  /** column name */
  ClientId = 'clientId',
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  JobTitle = 'jobTitle',
  /** column name */
  Name = 'name',
  /** column name */
  Note = 'note',
  /** column name */
  Phone = 'phone',
  /** column name */
  Timezone = 'timezone'
}

/** input type for updating data in table "rolodex_clientcontact" */
export type ClientContact_Set_Input = {
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  jobTitle?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  timezone?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type ClientContact_Stddev_Fields = {
  __typename?: 'clientContact_stddev_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "rolodex_clientcontact" */
export type ClientContact_Stddev_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ClientContact_Stddev_Pop_Fields = {
  __typename?: 'clientContact_stddev_pop_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "rolodex_clientcontact" */
export type ClientContact_Stddev_Pop_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ClientContact_Stddev_Samp_Fields = {
  __typename?: 'clientContact_stddev_samp_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "rolodex_clientcontact" */
export type ClientContact_Stddev_Samp_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "clientContact" */
export type ClientContact_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ClientContact_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ClientContact_Stream_Cursor_Value_Input = {
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  jobTitle?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  timezone?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type ClientContact_Sum_Fields = {
  __typename?: 'clientContact_sum_fields';
  clientId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "rolodex_clientcontact" */
export type ClientContact_Sum_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** update columns of table "rolodex_clientcontact" */
export enum ClientContact_Update_Column {
  /** column name */
  ClientId = 'clientId',
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  JobTitle = 'jobTitle',
  /** column name */
  Name = 'name',
  /** column name */
  Note = 'note',
  /** column name */
  Phone = 'phone',
  /** column name */
  Timezone = 'timezone'
}

export type ClientContact_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ClientContact_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ClientContact_Set_Input>;
  /** filter the rows which have to be updated */
  where: ClientContact_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ClientContact_Var_Pop_Fields = {
  __typename?: 'clientContact_var_pop_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "rolodex_clientcontact" */
export type ClientContact_Var_Pop_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ClientContact_Var_Samp_Fields = {
  __typename?: 'clientContact_var_samp_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "rolodex_clientcontact" */
export type ClientContact_Var_Samp_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ClientContact_Variance_Fields = {
  __typename?: 'clientContact_variance_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "rolodex_clientcontact" */
export type ClientContact_Variance_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** columns and relationships of "rolodex_clientinvite" */
export type ClientInvite = {
  __typename?: 'clientInvite';
  /** An object relationship */
  client: Client;
  clientId: Scalars['bigint']['output'];
  comment: Scalars['String']['output'];
  id: Scalars['bigint']['output'];
  /** An array relationship */
  projects: Array<Project>;
  /** An aggregate relationship */
  projects_aggregate: Project_Aggregate;
  /** An object relationship */
  user: User;
  userId: Scalars['bigint']['output'];
};


/** columns and relationships of "rolodex_clientinvite" */
export type ClientInviteProjectsArgs = {
  distinct_on?: InputMaybe<Array<Project_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Order_By>>;
  where?: InputMaybe<Project_Bool_Exp>;
};


/** columns and relationships of "rolodex_clientinvite" */
export type ClientInviteProjects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Order_By>>;
  where?: InputMaybe<Project_Bool_Exp>;
};

/** aggregated selection of "rolodex_clientinvite" */
export type ClientInvite_Aggregate = {
  __typename?: 'clientInvite_aggregate';
  aggregate?: Maybe<ClientInvite_Aggregate_Fields>;
  nodes: Array<ClientInvite>;
};

export type ClientInvite_Aggregate_Bool_Exp = {
  count?: InputMaybe<ClientInvite_Aggregate_Bool_Exp_Count>;
};

export type ClientInvite_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ClientInvite_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ClientInvite_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "rolodex_clientinvite" */
export type ClientInvite_Aggregate_Fields = {
  __typename?: 'clientInvite_aggregate_fields';
  avg?: Maybe<ClientInvite_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ClientInvite_Max_Fields>;
  min?: Maybe<ClientInvite_Min_Fields>;
  stddev?: Maybe<ClientInvite_Stddev_Fields>;
  stddev_pop?: Maybe<ClientInvite_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ClientInvite_Stddev_Samp_Fields>;
  sum?: Maybe<ClientInvite_Sum_Fields>;
  var_pop?: Maybe<ClientInvite_Var_Pop_Fields>;
  var_samp?: Maybe<ClientInvite_Var_Samp_Fields>;
  variance?: Maybe<ClientInvite_Variance_Fields>;
};


/** aggregate fields of "rolodex_clientinvite" */
export type ClientInvite_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ClientInvite_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "rolodex_clientinvite" */
export type ClientInvite_Aggregate_Order_By = {
  avg?: InputMaybe<ClientInvite_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ClientInvite_Max_Order_By>;
  min?: InputMaybe<ClientInvite_Min_Order_By>;
  stddev?: InputMaybe<ClientInvite_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ClientInvite_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ClientInvite_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ClientInvite_Sum_Order_By>;
  var_pop?: InputMaybe<ClientInvite_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ClientInvite_Var_Samp_Order_By>;
  variance?: InputMaybe<ClientInvite_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "rolodex_clientinvite" */
export type ClientInvite_Arr_Rel_Insert_Input = {
  data: Array<ClientInvite_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ClientInvite_On_Conflict>;
};

/** aggregate avg on columns */
export type ClientInvite_Avg_Fields = {
  __typename?: 'clientInvite_avg_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "rolodex_clientinvite" */
export type ClientInvite_Avg_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "rolodex_clientinvite". All fields are combined with a logical 'AND'. */
export type ClientInvite_Bool_Exp = {
  _and?: InputMaybe<Array<ClientInvite_Bool_Exp>>;
  _not?: InputMaybe<ClientInvite_Bool_Exp>;
  _or?: InputMaybe<Array<ClientInvite_Bool_Exp>>;
  client?: InputMaybe<Client_Bool_Exp>;
  clientId?: InputMaybe<Bigint_Comparison_Exp>;
  comment?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  projects?: InputMaybe<Project_Bool_Exp>;
  projects_aggregate?: InputMaybe<Project_Aggregate_Bool_Exp>;
  user?: InputMaybe<User_Bool_Exp>;
  userId?: InputMaybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "rolodex_clientinvite" */
export enum ClientInvite_Constraint {
  /** unique or primary key constraint on columns "id" */
  RolodexClientinvitePkey = 'rolodex_clientinvite_pkey'
}

/** input type for incrementing numeric columns in table "rolodex_clientinvite" */
export type ClientInvite_Inc_Input = {
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "rolodex_clientinvite" */
export type ClientInvite_Insert_Input = {
  client?: InputMaybe<Client_Obj_Rel_Insert_Input>;
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  comment?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  projects?: InputMaybe<Project_Arr_Rel_Insert_Input>;
  user?: InputMaybe<User_Obj_Rel_Insert_Input>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate max on columns */
export type ClientInvite_Max_Fields = {
  __typename?: 'clientInvite_max_fields';
  clientId?: Maybe<Scalars['bigint']['output']>;
  comment?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

/** order by max() on columns of table "rolodex_clientinvite" */
export type ClientInvite_Max_Order_By = {
  clientId?: InputMaybe<Order_By>;
  comment?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ClientInvite_Min_Fields = {
  __typename?: 'clientInvite_min_fields';
  clientId?: Maybe<Scalars['bigint']['output']>;
  comment?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

/** order by min() on columns of table "rolodex_clientinvite" */
export type ClientInvite_Min_Order_By = {
  clientId?: InputMaybe<Order_By>;
  comment?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "rolodex_clientinvite" */
export type ClientInvite_Mutation_Response = {
  __typename?: 'clientInvite_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ClientInvite>;
};

/** on_conflict condition type for table "rolodex_clientinvite" */
export type ClientInvite_On_Conflict = {
  constraint: ClientInvite_Constraint;
  update_columns?: Array<ClientInvite_Update_Column>;
  where?: InputMaybe<ClientInvite_Bool_Exp>;
};

/** Ordering options when selecting data from "rolodex_clientinvite". */
export type ClientInvite_Order_By = {
  client?: InputMaybe<Client_Order_By>;
  clientId?: InputMaybe<Order_By>;
  comment?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  projects_aggregate?: InputMaybe<Project_Aggregate_Order_By>;
  user?: InputMaybe<User_Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: rolodex_clientinvite */
export type ClientInvite_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "rolodex_clientinvite" */
export enum ClientInvite_Select_Column {
  /** column name */
  ClientId = 'clientId',
  /** column name */
  Comment = 'comment',
  /** column name */
  Id = 'id',
  /** column name */
  UserId = 'userId'
}

/** input type for updating data in table "rolodex_clientinvite" */
export type ClientInvite_Set_Input = {
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  comment?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate stddev on columns */
export type ClientInvite_Stddev_Fields = {
  __typename?: 'clientInvite_stddev_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "rolodex_clientinvite" */
export type ClientInvite_Stddev_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ClientInvite_Stddev_Pop_Fields = {
  __typename?: 'clientInvite_stddev_pop_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "rolodex_clientinvite" */
export type ClientInvite_Stddev_Pop_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ClientInvite_Stddev_Samp_Fields = {
  __typename?: 'clientInvite_stddev_samp_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "rolodex_clientinvite" */
export type ClientInvite_Stddev_Samp_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "clientInvite" */
export type ClientInvite_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ClientInvite_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ClientInvite_Stream_Cursor_Value_Input = {
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  comment?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type ClientInvite_Sum_Fields = {
  __typename?: 'clientInvite_sum_fields';
  clientId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "rolodex_clientinvite" */
export type ClientInvite_Sum_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** update columns of table "rolodex_clientinvite" */
export enum ClientInvite_Update_Column {
  /** column name */
  ClientId = 'clientId',
  /** column name */
  Comment = 'comment',
  /** column name */
  Id = 'id',
  /** column name */
  UserId = 'userId'
}

export type ClientInvite_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ClientInvite_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ClientInvite_Set_Input>;
  /** filter the rows which have to be updated */
  where: ClientInvite_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ClientInvite_Var_Pop_Fields = {
  __typename?: 'clientInvite_var_pop_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "rolodex_clientinvite" */
export type ClientInvite_Var_Pop_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ClientInvite_Var_Samp_Fields = {
  __typename?: 'clientInvite_var_samp_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "rolodex_clientinvite" */
export type ClientInvite_Var_Samp_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ClientInvite_Variance_Fields = {
  __typename?: 'clientInvite_variance_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "rolodex_clientinvite" */
export type ClientInvite_Variance_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** columns and relationships of "rolodex_clientnote" */
export type ClientNote = {
  __typename?: 'clientNote';
  /** An object relationship */
  client: Client;
  clientId: Scalars['bigint']['output'];
  id: Scalars['bigint']['output'];
  note: Scalars['String']['output'];
  operatorId?: Maybe<Scalars['bigint']['output']>;
  timestamp: Scalars['date']['output'];
  /** An object relationship */
  user?: Maybe<User>;
};

/** aggregated selection of "rolodex_clientnote" */
export type ClientNote_Aggregate = {
  __typename?: 'clientNote_aggregate';
  aggregate?: Maybe<ClientNote_Aggregate_Fields>;
  nodes: Array<ClientNote>;
};

export type ClientNote_Aggregate_Bool_Exp = {
  count?: InputMaybe<ClientNote_Aggregate_Bool_Exp_Count>;
};

export type ClientNote_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ClientNote_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ClientNote_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "rolodex_clientnote" */
export type ClientNote_Aggregate_Fields = {
  __typename?: 'clientNote_aggregate_fields';
  avg?: Maybe<ClientNote_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ClientNote_Max_Fields>;
  min?: Maybe<ClientNote_Min_Fields>;
  stddev?: Maybe<ClientNote_Stddev_Fields>;
  stddev_pop?: Maybe<ClientNote_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ClientNote_Stddev_Samp_Fields>;
  sum?: Maybe<ClientNote_Sum_Fields>;
  var_pop?: Maybe<ClientNote_Var_Pop_Fields>;
  var_samp?: Maybe<ClientNote_Var_Samp_Fields>;
  variance?: Maybe<ClientNote_Variance_Fields>;
};


/** aggregate fields of "rolodex_clientnote" */
export type ClientNote_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ClientNote_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "rolodex_clientnote" */
export type ClientNote_Aggregate_Order_By = {
  avg?: InputMaybe<ClientNote_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ClientNote_Max_Order_By>;
  min?: InputMaybe<ClientNote_Min_Order_By>;
  stddev?: InputMaybe<ClientNote_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ClientNote_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ClientNote_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ClientNote_Sum_Order_By>;
  var_pop?: InputMaybe<ClientNote_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ClientNote_Var_Samp_Order_By>;
  variance?: InputMaybe<ClientNote_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "rolodex_clientnote" */
export type ClientNote_Arr_Rel_Insert_Input = {
  data: Array<ClientNote_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ClientNote_On_Conflict>;
};

/** aggregate avg on columns */
export type ClientNote_Avg_Fields = {
  __typename?: 'clientNote_avg_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "rolodex_clientnote" */
export type ClientNote_Avg_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "rolodex_clientnote". All fields are combined with a logical 'AND'. */
export type ClientNote_Bool_Exp = {
  _and?: InputMaybe<Array<ClientNote_Bool_Exp>>;
  _not?: InputMaybe<ClientNote_Bool_Exp>;
  _or?: InputMaybe<Array<ClientNote_Bool_Exp>>;
  client?: InputMaybe<Client_Bool_Exp>;
  clientId?: InputMaybe<Bigint_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  operatorId?: InputMaybe<Bigint_Comparison_Exp>;
  timestamp?: InputMaybe<Date_Comparison_Exp>;
  user?: InputMaybe<User_Bool_Exp>;
};

/** unique or primary key constraints on table "rolodex_clientnote" */
export enum ClientNote_Constraint {
  /** unique or primary key constraint on columns "id" */
  RolodexClientnotePkey = 'rolodex_clientnote_pkey'
}

/** input type for incrementing numeric columns in table "rolodex_clientnote" */
export type ClientNote_Inc_Input = {
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "rolodex_clientnote" */
export type ClientNote_Insert_Input = {
  client?: InputMaybe<Client_Obj_Rel_Insert_Input>;
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  timestamp?: InputMaybe<Scalars['date']['input']>;
  user?: InputMaybe<User_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type ClientNote_Max_Fields = {
  __typename?: 'clientNote_max_fields';
  clientId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  timestamp?: Maybe<Scalars['date']['output']>;
};

/** order by max() on columns of table "rolodex_clientnote" */
export type ClientNote_Max_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ClientNote_Min_Fields = {
  __typename?: 'clientNote_min_fields';
  clientId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  timestamp?: Maybe<Scalars['date']['output']>;
};

/** order by min() on columns of table "rolodex_clientnote" */
export type ClientNote_Min_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "rolodex_clientnote" */
export type ClientNote_Mutation_Response = {
  __typename?: 'clientNote_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ClientNote>;
};

/** on_conflict condition type for table "rolodex_clientnote" */
export type ClientNote_On_Conflict = {
  constraint: ClientNote_Constraint;
  update_columns?: Array<ClientNote_Update_Column>;
  where?: InputMaybe<ClientNote_Bool_Exp>;
};

/** Ordering options when selecting data from "rolodex_clientnote". */
export type ClientNote_Order_By = {
  client?: InputMaybe<Client_Order_By>;
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  user?: InputMaybe<User_Order_By>;
};

/** primary key columns input for table: rolodex_clientnote */
export type ClientNote_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "rolodex_clientnote" */
export enum ClientNote_Select_Column {
  /** column name */
  ClientId = 'clientId',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  OperatorId = 'operatorId',
  /** column name */
  Timestamp = 'timestamp'
}

/** input type for updating data in table "rolodex_clientnote" */
export type ClientNote_Set_Input = {
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  timestamp?: InputMaybe<Scalars['date']['input']>;
};

/** aggregate stddev on columns */
export type ClientNote_Stddev_Fields = {
  __typename?: 'clientNote_stddev_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "rolodex_clientnote" */
export type ClientNote_Stddev_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ClientNote_Stddev_Pop_Fields = {
  __typename?: 'clientNote_stddev_pop_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "rolodex_clientnote" */
export type ClientNote_Stddev_Pop_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ClientNote_Stddev_Samp_Fields = {
  __typename?: 'clientNote_stddev_samp_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "rolodex_clientnote" */
export type ClientNote_Stddev_Samp_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "clientNote" */
export type ClientNote_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ClientNote_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ClientNote_Stream_Cursor_Value_Input = {
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  timestamp?: InputMaybe<Scalars['date']['input']>;
};

/** aggregate sum on columns */
export type ClientNote_Sum_Fields = {
  __typename?: 'clientNote_sum_fields';
  clientId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "rolodex_clientnote" */
export type ClientNote_Sum_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** update columns of table "rolodex_clientnote" */
export enum ClientNote_Update_Column {
  /** column name */
  ClientId = 'clientId',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  OperatorId = 'operatorId',
  /** column name */
  Timestamp = 'timestamp'
}

export type ClientNote_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ClientNote_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ClientNote_Set_Input>;
  /** filter the rows which have to be updated */
  where: ClientNote_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ClientNote_Var_Pop_Fields = {
  __typename?: 'clientNote_var_pop_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "rolodex_clientnote" */
export type ClientNote_Var_Pop_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ClientNote_Var_Samp_Fields = {
  __typename?: 'clientNote_var_samp_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "rolodex_clientnote" */
export type ClientNote_Var_Samp_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ClientNote_Variance_Fields = {
  __typename?: 'clientNote_variance_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "rolodex_clientnote" */
export type ClientNote_Variance_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** aggregated selection of "rolodex_client" */
export type Client_Aggregate = {
  __typename?: 'client_aggregate';
  aggregate?: Maybe<Client_Aggregate_Fields>;
  nodes: Array<Client>;
};

/** aggregate fields of "rolodex_client" */
export type Client_Aggregate_Fields = {
  __typename?: 'client_aggregate_fields';
  avg?: Maybe<Client_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Client_Max_Fields>;
  min?: Maybe<Client_Min_Fields>;
  stddev?: Maybe<Client_Stddev_Fields>;
  stddev_pop?: Maybe<Client_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Client_Stddev_Samp_Fields>;
  sum?: Maybe<Client_Sum_Fields>;
  var_pop?: Maybe<Client_Var_Pop_Fields>;
  var_samp?: Maybe<Client_Var_Samp_Fields>;
  variance?: Maybe<Client_Variance_Fields>;
};


/** aggregate fields of "rolodex_client" */
export type Client_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Client_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Client_Append_Input = {
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate avg on columns */
export type Client_Avg_Fields = {
  __typename?: 'client_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "rolodex_client". All fields are combined with a logical 'AND'. */
export type Client_Bool_Exp = {
  _and?: InputMaybe<Array<Client_Bool_Exp>>;
  _not?: InputMaybe<Client_Bool_Exp>;
  _or?: InputMaybe<Array<Client_Bool_Exp>>;
  address?: InputMaybe<String_Comparison_Exp>;
  codename?: InputMaybe<String_Comparison_Exp>;
  comments?: InputMaybe<ClientNote_Bool_Exp>;
  comments_aggregate?: InputMaybe<ClientNote_Aggregate_Bool_Exp>;
  contacts?: InputMaybe<ClientContact_Bool_Exp>;
  contacts_aggregate?: InputMaybe<ClientContact_Aggregate_Bool_Exp>;
  domains?: InputMaybe<DomainCheckout_Bool_Exp>;
  domains_aggregate?: InputMaybe<DomainCheckout_Aggregate_Bool_Exp>;
  extraFields?: InputMaybe<Jsonb_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  invites?: InputMaybe<ClientInvite_Bool_Exp>;
  invites_aggregate?: InputMaybe<ClientInvite_Aggregate_Bool_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  projects?: InputMaybe<Project_Bool_Exp>;
  projects_aggregate?: InputMaybe<Project_Aggregate_Bool_Exp>;
  servers?: InputMaybe<ServerCheckout_Bool_Exp>;
  servers_aggregate?: InputMaybe<ServerCheckout_Aggregate_Bool_Exp>;
  shortName?: InputMaybe<String_Comparison_Exp>;
  templates?: InputMaybe<Template_Bool_Exp>;
  templates_aggregate?: InputMaybe<Template_Aggregate_Bool_Exp>;
  timezone?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "rolodex_client" */
export enum Client_Constraint {
  /** unique or primary key constraint on columns "name" */
  RolodexClientNameKey = 'rolodex_client_name_key',
  /** unique or primary key constraint on columns "id" */
  RolodexClientPkey = 'rolodex_client_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Client_Delete_At_Path_Input = {
  extraFields?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Client_Delete_Elem_Input = {
  extraFields?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Client_Delete_Key_Input = {
  extraFields?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "rolodex_client" */
export type Client_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "rolodex_client" */
export type Client_Insert_Input = {
  address?: InputMaybe<Scalars['String']['input']>;
  codename?: InputMaybe<Scalars['String']['input']>;
  comments?: InputMaybe<ClientNote_Arr_Rel_Insert_Input>;
  contacts?: InputMaybe<ClientContact_Arr_Rel_Insert_Input>;
  domains?: InputMaybe<DomainCheckout_Arr_Rel_Insert_Input>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  invites?: InputMaybe<ClientInvite_Arr_Rel_Insert_Input>;
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  projects?: InputMaybe<Project_Arr_Rel_Insert_Input>;
  servers?: InputMaybe<ServerCheckout_Arr_Rel_Insert_Input>;
  shortName?: InputMaybe<Scalars['String']['input']>;
  templates?: InputMaybe<Template_Arr_Rel_Insert_Input>;
  timezone?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Client_Max_Fields = {
  __typename?: 'client_max_fields';
  address?: Maybe<Scalars['String']['output']>;
  codename?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  shortName?: Maybe<Scalars['String']['output']>;
  timezone?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Client_Min_Fields = {
  __typename?: 'client_min_fields';
  address?: Maybe<Scalars['String']['output']>;
  codename?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  shortName?: Maybe<Scalars['String']['output']>;
  timezone?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "rolodex_client" */
export type Client_Mutation_Response = {
  __typename?: 'client_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Client>;
};

/** input type for inserting object relation for remote table "rolodex_client" */
export type Client_Obj_Rel_Insert_Input = {
  data: Client_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Client_On_Conflict>;
};

/** on_conflict condition type for table "rolodex_client" */
export type Client_On_Conflict = {
  constraint: Client_Constraint;
  update_columns?: Array<Client_Update_Column>;
  where?: InputMaybe<Client_Bool_Exp>;
};

/** Ordering options when selecting data from "rolodex_client". */
export type Client_Order_By = {
  address?: InputMaybe<Order_By>;
  codename?: InputMaybe<Order_By>;
  comments_aggregate?: InputMaybe<ClientNote_Aggregate_Order_By>;
  contacts_aggregate?: InputMaybe<ClientContact_Aggregate_Order_By>;
  domains_aggregate?: InputMaybe<DomainCheckout_Aggregate_Order_By>;
  extraFields?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  invites_aggregate?: InputMaybe<ClientInvite_Aggregate_Order_By>;
  name?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  projects_aggregate?: InputMaybe<Project_Aggregate_Order_By>;
  servers_aggregate?: InputMaybe<ServerCheckout_Aggregate_Order_By>;
  shortName?: InputMaybe<Order_By>;
  templates_aggregate?: InputMaybe<Template_Aggregate_Order_By>;
  timezone?: InputMaybe<Order_By>;
};

/** primary key columns input for table: rolodex_client */
export type Client_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Client_Prepend_Input = {
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "rolodex_client" */
export enum Client_Select_Column {
  /** column name */
  Address = 'address',
  /** column name */
  Codename = 'codename',
  /** column name */
  ExtraFields = 'extraFields',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Note = 'note',
  /** column name */
  ShortName = 'shortName',
  /** column name */
  Timezone = 'timezone'
}

/** input type for updating data in table "rolodex_client" */
export type Client_Set_Input = {
  address?: InputMaybe<Scalars['String']['input']>;
  codename?: InputMaybe<Scalars['String']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  shortName?: InputMaybe<Scalars['String']['input']>;
  timezone?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Client_Stddev_Fields = {
  __typename?: 'client_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Client_Stddev_Pop_Fields = {
  __typename?: 'client_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Client_Stddev_Samp_Fields = {
  __typename?: 'client_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "client" */
export type Client_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Client_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Client_Stream_Cursor_Value_Input = {
  address?: InputMaybe<Scalars['String']['input']>;
  codename?: InputMaybe<Scalars['String']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  shortName?: InputMaybe<Scalars['String']['input']>;
  timezone?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Client_Sum_Fields = {
  __typename?: 'client_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
};

/** update columns of table "rolodex_client" */
export enum Client_Update_Column {
  /** column name */
  Address = 'address',
  /** column name */
  Codename = 'codename',
  /** column name */
  ExtraFields = 'extraFields',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Note = 'note',
  /** column name */
  ShortName = 'shortName',
  /** column name */
  Timezone = 'timezone'
}

export type Client_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Client_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Client_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Client_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Client_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Client_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Client_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Client_Set_Input>;
  /** filter the rows which have to be updated */
  where: Client_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Client_Var_Pop_Fields = {
  __typename?: 'client_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Client_Var_Samp_Fields = {
  __typename?: 'client_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Client_Variance_Fields = {
  __typename?: 'client_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "shepherd_transientserver" */
export type CloudServer = {
  __typename?: 'cloudServer';
  /** An object relationship */
  activityType: ActivityType;
  activityTypeId: Scalars['bigint']['output'];
  auxAddress?: Maybe<Array<Scalars['inet']['output']>>;
  /** An array relationship */
  domainServerConnections: Array<DomainServerConnection>;
  /** An aggregate relationship */
  domainServerConnections_aggregate: DomainServerConnection_Aggregate;
  id: Scalars['bigint']['output'];
  ipAddress: Scalars['inet']['output'];
  name: Scalars['String']['output'];
  note: Scalars['String']['output'];
  operatorId?: Maybe<Scalars['bigint']['output']>;
  /** An object relationship */
  project?: Maybe<Project>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  /** An object relationship */
  serverProvider?: Maybe<ServerProvider>;
  serverProviderId?: Maybe<Scalars['bigint']['output']>;
  /** An object relationship */
  serverRole: ServerRole;
  serverRoleId: Scalars['bigint']['output'];
  /** An object relationship */
  user?: Maybe<User>;
};


/** columns and relationships of "shepherd_transientserver" */
export type CloudServerDomainServerConnectionsArgs = {
  distinct_on?: InputMaybe<Array<DomainServerConnection_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainServerConnection_Order_By>>;
  where?: InputMaybe<DomainServerConnection_Bool_Exp>;
};


/** columns and relationships of "shepherd_transientserver" */
export type CloudServerDomainServerConnections_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DomainServerConnection_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainServerConnection_Order_By>>;
  where?: InputMaybe<DomainServerConnection_Bool_Exp>;
};

/** aggregated selection of "shepherd_transientserver" */
export type CloudServer_Aggregate = {
  __typename?: 'cloudServer_aggregate';
  aggregate?: Maybe<CloudServer_Aggregate_Fields>;
  nodes: Array<CloudServer>;
};

export type CloudServer_Aggregate_Bool_Exp = {
  count?: InputMaybe<CloudServer_Aggregate_Bool_Exp_Count>;
};

export type CloudServer_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<CloudServer_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<CloudServer_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "shepherd_transientserver" */
export type CloudServer_Aggregate_Fields = {
  __typename?: 'cloudServer_aggregate_fields';
  avg?: Maybe<CloudServer_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<CloudServer_Max_Fields>;
  min?: Maybe<CloudServer_Min_Fields>;
  stddev?: Maybe<CloudServer_Stddev_Fields>;
  stddev_pop?: Maybe<CloudServer_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<CloudServer_Stddev_Samp_Fields>;
  sum?: Maybe<CloudServer_Sum_Fields>;
  var_pop?: Maybe<CloudServer_Var_Pop_Fields>;
  var_samp?: Maybe<CloudServer_Var_Samp_Fields>;
  variance?: Maybe<CloudServer_Variance_Fields>;
};


/** aggregate fields of "shepherd_transientserver" */
export type CloudServer_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<CloudServer_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "shepherd_transientserver" */
export type CloudServer_Aggregate_Order_By = {
  avg?: InputMaybe<CloudServer_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<CloudServer_Max_Order_By>;
  min?: InputMaybe<CloudServer_Min_Order_By>;
  stddev?: InputMaybe<CloudServer_Stddev_Order_By>;
  stddev_pop?: InputMaybe<CloudServer_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<CloudServer_Stddev_Samp_Order_By>;
  sum?: InputMaybe<CloudServer_Sum_Order_By>;
  var_pop?: InputMaybe<CloudServer_Var_Pop_Order_By>;
  var_samp?: InputMaybe<CloudServer_Var_Samp_Order_By>;
  variance?: InputMaybe<CloudServer_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "shepherd_transientserver" */
export type CloudServer_Arr_Rel_Insert_Input = {
  data: Array<CloudServer_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<CloudServer_On_Conflict>;
};

/** aggregate avg on columns */
export type CloudServer_Avg_Fields = {
  __typename?: 'cloudServer_avg_fields';
  activityTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  serverProviderId?: Maybe<Scalars['Float']['output']>;
  serverRoleId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "shepherd_transientserver" */
export type CloudServer_Avg_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  serverProviderId?: InputMaybe<Order_By>;
  serverRoleId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "shepherd_transientserver". All fields are combined with a logical 'AND'. */
export type CloudServer_Bool_Exp = {
  _and?: InputMaybe<Array<CloudServer_Bool_Exp>>;
  _not?: InputMaybe<CloudServer_Bool_Exp>;
  _or?: InputMaybe<Array<CloudServer_Bool_Exp>>;
  activityType?: InputMaybe<ActivityType_Bool_Exp>;
  activityTypeId?: InputMaybe<Bigint_Comparison_Exp>;
  auxAddress?: InputMaybe<Inet_Array_Comparison_Exp>;
  domainServerConnections?: InputMaybe<DomainServerConnection_Bool_Exp>;
  domainServerConnections_aggregate?: InputMaybe<DomainServerConnection_Aggregate_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  ipAddress?: InputMaybe<Inet_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  operatorId?: InputMaybe<Bigint_Comparison_Exp>;
  project?: InputMaybe<Project_Bool_Exp>;
  projectId?: InputMaybe<Bigint_Comparison_Exp>;
  serverProvider?: InputMaybe<ServerProvider_Bool_Exp>;
  serverProviderId?: InputMaybe<Bigint_Comparison_Exp>;
  serverRole?: InputMaybe<ServerRole_Bool_Exp>;
  serverRoleId?: InputMaybe<Bigint_Comparison_Exp>;
  user?: InputMaybe<User_Bool_Exp>;
};

/** unique or primary key constraints on table "shepherd_transientserver" */
export enum CloudServer_Constraint {
  /** unique or primary key constraint on columns "id" */
  ShepherdTransientserverPkey = 'shepherd_transientserver_pkey'
}

/** input type for incrementing numeric columns in table "shepherd_transientserver" */
export type CloudServer_Inc_Input = {
  activityTypeId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  serverProviderId?: InputMaybe<Scalars['bigint']['input']>;
  serverRoleId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "shepherd_transientserver" */
export type CloudServer_Insert_Input = {
  activityType?: InputMaybe<ActivityType_Obj_Rel_Insert_Input>;
  activityTypeId?: InputMaybe<Scalars['bigint']['input']>;
  auxAddress?: InputMaybe<Array<Scalars['inet']['input']>>;
  domainServerConnections?: InputMaybe<DomainServerConnection_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  project?: InputMaybe<Project_Obj_Rel_Insert_Input>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  serverProvider?: InputMaybe<ServerProvider_Obj_Rel_Insert_Input>;
  serverProviderId?: InputMaybe<Scalars['bigint']['input']>;
  serverRole?: InputMaybe<ServerRole_Obj_Rel_Insert_Input>;
  serverRoleId?: InputMaybe<Scalars['bigint']['input']>;
  user?: InputMaybe<User_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type CloudServer_Max_Fields = {
  __typename?: 'cloudServer_max_fields';
  activityTypeId?: Maybe<Scalars['bigint']['output']>;
  auxAddress?: Maybe<Array<Scalars['inet']['output']>>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  serverProviderId?: Maybe<Scalars['bigint']['output']>;
  serverRoleId?: Maybe<Scalars['bigint']['output']>;
};

/** order by max() on columns of table "shepherd_transientserver" */
export type CloudServer_Max_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  auxAddress?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  serverProviderId?: InputMaybe<Order_By>;
  serverRoleId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type CloudServer_Min_Fields = {
  __typename?: 'cloudServer_min_fields';
  activityTypeId?: Maybe<Scalars['bigint']['output']>;
  auxAddress?: Maybe<Array<Scalars['inet']['output']>>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  serverProviderId?: Maybe<Scalars['bigint']['output']>;
  serverRoleId?: Maybe<Scalars['bigint']['output']>;
};

/** order by min() on columns of table "shepherd_transientserver" */
export type CloudServer_Min_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  auxAddress?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  serverProviderId?: InputMaybe<Order_By>;
  serverRoleId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "shepherd_transientserver" */
export type CloudServer_Mutation_Response = {
  __typename?: 'cloudServer_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<CloudServer>;
};

/** input type for inserting object relation for remote table "shepherd_transientserver" */
export type CloudServer_Obj_Rel_Insert_Input = {
  data: CloudServer_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<CloudServer_On_Conflict>;
};

/** on_conflict condition type for table "shepherd_transientserver" */
export type CloudServer_On_Conflict = {
  constraint: CloudServer_Constraint;
  update_columns?: Array<CloudServer_Update_Column>;
  where?: InputMaybe<CloudServer_Bool_Exp>;
};

/** Ordering options when selecting data from "shepherd_transientserver". */
export type CloudServer_Order_By = {
  activityType?: InputMaybe<ActivityType_Order_By>;
  activityTypeId?: InputMaybe<Order_By>;
  auxAddress?: InputMaybe<Order_By>;
  domainServerConnections_aggregate?: InputMaybe<DomainServerConnection_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  ipAddress?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  project?: InputMaybe<Project_Order_By>;
  projectId?: InputMaybe<Order_By>;
  serverProvider?: InputMaybe<ServerProvider_Order_By>;
  serverProviderId?: InputMaybe<Order_By>;
  serverRole?: InputMaybe<ServerRole_Order_By>;
  serverRoleId?: InputMaybe<Order_By>;
  user?: InputMaybe<User_Order_By>;
};

/** primary key columns input for table: shepherd_transientserver */
export type CloudServer_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "shepherd_transientserver" */
export enum CloudServer_Select_Column {
  /** column name */
  ActivityTypeId = 'activityTypeId',
  /** column name */
  AuxAddress = 'auxAddress',
  /** column name */
  Id = 'id',
  /** column name */
  IpAddress = 'ipAddress',
  /** column name */
  Name = 'name',
  /** column name */
  Note = 'note',
  /** column name */
  OperatorId = 'operatorId',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  ServerProviderId = 'serverProviderId',
  /** column name */
  ServerRoleId = 'serverRoleId'
}

/** input type for updating data in table "shepherd_transientserver" */
export type CloudServer_Set_Input = {
  activityTypeId?: InputMaybe<Scalars['bigint']['input']>;
  auxAddress?: InputMaybe<Array<Scalars['inet']['input']>>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  serverProviderId?: InputMaybe<Scalars['bigint']['input']>;
  serverRoleId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate stddev on columns */
export type CloudServer_Stddev_Fields = {
  __typename?: 'cloudServer_stddev_fields';
  activityTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  serverProviderId?: Maybe<Scalars['Float']['output']>;
  serverRoleId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "shepherd_transientserver" */
export type CloudServer_Stddev_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  serverProviderId?: InputMaybe<Order_By>;
  serverRoleId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type CloudServer_Stddev_Pop_Fields = {
  __typename?: 'cloudServer_stddev_pop_fields';
  activityTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  serverProviderId?: Maybe<Scalars['Float']['output']>;
  serverRoleId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "shepherd_transientserver" */
export type CloudServer_Stddev_Pop_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  serverProviderId?: InputMaybe<Order_By>;
  serverRoleId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type CloudServer_Stddev_Samp_Fields = {
  __typename?: 'cloudServer_stddev_samp_fields';
  activityTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  serverProviderId?: Maybe<Scalars['Float']['output']>;
  serverRoleId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "shepherd_transientserver" */
export type CloudServer_Stddev_Samp_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  serverProviderId?: InputMaybe<Order_By>;
  serverRoleId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "cloudServer" */
export type CloudServer_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: CloudServer_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type CloudServer_Stream_Cursor_Value_Input = {
  activityTypeId?: InputMaybe<Scalars['bigint']['input']>;
  auxAddress?: InputMaybe<Array<Scalars['inet']['input']>>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  serverProviderId?: InputMaybe<Scalars['bigint']['input']>;
  serverRoleId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type CloudServer_Sum_Fields = {
  __typename?: 'cloudServer_sum_fields';
  activityTypeId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  serverProviderId?: Maybe<Scalars['bigint']['output']>;
  serverRoleId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "shepherd_transientserver" */
export type CloudServer_Sum_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  serverProviderId?: InputMaybe<Order_By>;
  serverRoleId?: InputMaybe<Order_By>;
};

/** update columns of table "shepherd_transientserver" */
export enum CloudServer_Update_Column {
  /** column name */
  ActivityTypeId = 'activityTypeId',
  /** column name */
  AuxAddress = 'auxAddress',
  /** column name */
  Id = 'id',
  /** column name */
  IpAddress = 'ipAddress',
  /** column name */
  Name = 'name',
  /** column name */
  Note = 'note',
  /** column name */
  OperatorId = 'operatorId',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  ServerProviderId = 'serverProviderId',
  /** column name */
  ServerRoleId = 'serverRoleId'
}

export type CloudServer_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<CloudServer_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<CloudServer_Set_Input>;
  /** filter the rows which have to be updated */
  where: CloudServer_Bool_Exp;
};

/** aggregate var_pop on columns */
export type CloudServer_Var_Pop_Fields = {
  __typename?: 'cloudServer_var_pop_fields';
  activityTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  serverProviderId?: Maybe<Scalars['Float']['output']>;
  serverRoleId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "shepherd_transientserver" */
export type CloudServer_Var_Pop_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  serverProviderId?: InputMaybe<Order_By>;
  serverRoleId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type CloudServer_Var_Samp_Fields = {
  __typename?: 'cloudServer_var_samp_fields';
  activityTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  serverProviderId?: Maybe<Scalars['Float']['output']>;
  serverRoleId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "shepherd_transientserver" */
export type CloudServer_Var_Samp_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  serverProviderId?: InputMaybe<Order_By>;
  serverRoleId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type CloudServer_Variance_Fields = {
  __typename?: 'cloudServer_variance_fields';
  activityTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  serverProviderId?: Maybe<Scalars['Float']['output']>;
  serverRoleId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "shepherd_transientserver" */
export type CloudServer_Variance_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  serverProviderId?: InputMaybe<Order_By>;
  serverRoleId?: InputMaybe<Order_By>;
};

export type CodenameResponse = {
  __typename?: 'codenameResponse';
  codename: Scalars['String']['output'];
};

/** columns and relationships of "commandcenter_companyinformation" */
export type CompanyInfo = {
  __typename?: 'companyInfo';
  company_address: Scalars['String']['output'];
  company_short_name: Scalars['String']['output'];
  email: Scalars['String']['output'];
  id: Scalars['bigint']['output'];
  name: Scalars['String']['output'];
  twitter: Scalars['String']['output'];
};

/** aggregated selection of "commandcenter_companyinformation" */
export type CompanyInfo_Aggregate = {
  __typename?: 'companyInfo_aggregate';
  aggregate?: Maybe<CompanyInfo_Aggregate_Fields>;
  nodes: Array<CompanyInfo>;
};

/** aggregate fields of "commandcenter_companyinformation" */
export type CompanyInfo_Aggregate_Fields = {
  __typename?: 'companyInfo_aggregate_fields';
  avg?: Maybe<CompanyInfo_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<CompanyInfo_Max_Fields>;
  min?: Maybe<CompanyInfo_Min_Fields>;
  stddev?: Maybe<CompanyInfo_Stddev_Fields>;
  stddev_pop?: Maybe<CompanyInfo_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<CompanyInfo_Stddev_Samp_Fields>;
  sum?: Maybe<CompanyInfo_Sum_Fields>;
  var_pop?: Maybe<CompanyInfo_Var_Pop_Fields>;
  var_samp?: Maybe<CompanyInfo_Var_Samp_Fields>;
  variance?: Maybe<CompanyInfo_Variance_Fields>;
};


/** aggregate fields of "commandcenter_companyinformation" */
export type CompanyInfo_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<CompanyInfo_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type CompanyInfo_Avg_Fields = {
  __typename?: 'companyInfo_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "commandcenter_companyinformation". All fields are combined with a logical 'AND'. */
export type CompanyInfo_Bool_Exp = {
  _and?: InputMaybe<Array<CompanyInfo_Bool_Exp>>;
  _not?: InputMaybe<CompanyInfo_Bool_Exp>;
  _or?: InputMaybe<Array<CompanyInfo_Bool_Exp>>;
  company_address?: InputMaybe<String_Comparison_Exp>;
  company_short_name?: InputMaybe<String_Comparison_Exp>;
  email?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  twitter?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "commandcenter_companyinformation" */
export enum CompanyInfo_Constraint {
  /** unique or primary key constraint on columns "id" */
  CommandcenterCompanyinformationPkey = 'commandcenter_companyinformation_pkey'
}

/** input type for incrementing numeric columns in table "commandcenter_companyinformation" */
export type CompanyInfo_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "commandcenter_companyinformation" */
export type CompanyInfo_Insert_Input = {
  company_address?: InputMaybe<Scalars['String']['input']>;
  company_short_name?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  twitter?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type CompanyInfo_Max_Fields = {
  __typename?: 'companyInfo_max_fields';
  company_address?: Maybe<Scalars['String']['output']>;
  company_short_name?: Maybe<Scalars['String']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  twitter?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type CompanyInfo_Min_Fields = {
  __typename?: 'companyInfo_min_fields';
  company_address?: Maybe<Scalars['String']['output']>;
  company_short_name?: Maybe<Scalars['String']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  twitter?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "commandcenter_companyinformation" */
export type CompanyInfo_Mutation_Response = {
  __typename?: 'companyInfo_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<CompanyInfo>;
};

/** on_conflict condition type for table "commandcenter_companyinformation" */
export type CompanyInfo_On_Conflict = {
  constraint: CompanyInfo_Constraint;
  update_columns?: Array<CompanyInfo_Update_Column>;
  where?: InputMaybe<CompanyInfo_Bool_Exp>;
};

/** Ordering options when selecting data from "commandcenter_companyinformation". */
export type CompanyInfo_Order_By = {
  company_address?: InputMaybe<Order_By>;
  company_short_name?: InputMaybe<Order_By>;
  email?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  twitter?: InputMaybe<Order_By>;
};

/** primary key columns input for table: commandcenter_companyinformation */
export type CompanyInfo_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "commandcenter_companyinformation" */
export enum CompanyInfo_Select_Column {
  /** column name */
  CompanyAddress = 'company_address',
  /** column name */
  CompanyShortName = 'company_short_name',
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Twitter = 'twitter'
}

/** input type for updating data in table "commandcenter_companyinformation" */
export type CompanyInfo_Set_Input = {
  company_address?: InputMaybe<Scalars['String']['input']>;
  company_short_name?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  twitter?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type CompanyInfo_Stddev_Fields = {
  __typename?: 'companyInfo_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type CompanyInfo_Stddev_Pop_Fields = {
  __typename?: 'companyInfo_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type CompanyInfo_Stddev_Samp_Fields = {
  __typename?: 'companyInfo_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "companyInfo" */
export type CompanyInfo_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: CompanyInfo_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type CompanyInfo_Stream_Cursor_Value_Input = {
  company_address?: InputMaybe<Scalars['String']['input']>;
  company_short_name?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  twitter?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type CompanyInfo_Sum_Fields = {
  __typename?: 'companyInfo_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
};

/** update columns of table "commandcenter_companyinformation" */
export enum CompanyInfo_Update_Column {
  /** column name */
  CompanyAddress = 'company_address',
  /** column name */
  CompanyShortName = 'company_short_name',
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Twitter = 'twitter'
}

export type CompanyInfo_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<CompanyInfo_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<CompanyInfo_Set_Input>;
  /** filter the rows which have to be updated */
  where: CompanyInfo_Bool_Exp;
};

/** aggregate var_pop on columns */
export type CompanyInfo_Var_Pop_Fields = {
  __typename?: 'companyInfo_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type CompanyInfo_Var_Samp_Fields = {
  __typename?: 'companyInfo_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type CompanyInfo_Variance_Fields = {
  __typename?: 'companyInfo_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

export type CreateUserResponse = {
  __typename?: 'createUserResponse';
  email: Scalars['String']['output'];
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  result: Scalars['String']['output'];
  role: Scalars['String']['output'];
  user?: Maybe<User>;
  username: Scalars['String']['output'];
};

/** ordering argument of a cursor */
export enum Cursor_Ordering {
  /** ascending ordering of the cursor */
  Asc = 'ASC',
  /** descending ordering of the cursor */
  Desc = 'DESC'
}

/** Boolean expression to compare columns of type "date". All fields are combined with logical 'AND'. */
export type Date_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['date']['input']>;
  _gt?: InputMaybe<Scalars['date']['input']>;
  _gte?: InputMaybe<Scalars['date']['input']>;
  _in?: InputMaybe<Array<Scalars['date']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['date']['input']>;
  _lte?: InputMaybe<Scalars['date']['input']>;
  _neq?: InputMaybe<Scalars['date']['input']>;
  _nin?: InputMaybe<Array<Scalars['date']['input']>>;
};

/** columns and relationships of "rolodex_deconfliction" */
export type Deconfliction = {
  __typename?: 'deconfliction';
  alertSource: Scalars['String']['output'];
  alertTimestamp?: Maybe<Scalars['timestamptz']['output']>;
  createdAt: Scalars['timestamptz']['output'];
  /** An object relationship */
  deconflictionStatus?: Maybe<DeconflictionStatus>;
  description: Scalars['String']['output'];
  id: Scalars['bigint']['output'];
  /** An object relationship */
  project: Project;
  projectId: Scalars['bigint']['output'];
  reportTimestamp: Scalars['timestamptz']['output'];
  responseTimestamp?: Maybe<Scalars['timestamptz']['output']>;
  statusId?: Maybe<Scalars['bigint']['output']>;
  title: Scalars['String']['output'];
};

/** columns and relationships of "rolodex_deconflictionstatus" */
export type DeconflictionStatus = {
  __typename?: 'deconflictionStatus';
  /** An array relationship */
  deconflictions: Array<Deconfliction>;
  /** An aggregate relationship */
  deconflictions_aggregate: Deconfliction_Aggregate;
  id: Scalars['bigint']['output'];
  status: Scalars['String']['output'];
  weight: Scalars['Int']['output'];
};


/** columns and relationships of "rolodex_deconflictionstatus" */
export type DeconflictionStatusDeconflictionsArgs = {
  distinct_on?: InputMaybe<Array<Deconfliction_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Deconfliction_Order_By>>;
  where?: InputMaybe<Deconfliction_Bool_Exp>;
};


/** columns and relationships of "rolodex_deconflictionstatus" */
export type DeconflictionStatusDeconflictions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Deconfliction_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Deconfliction_Order_By>>;
  where?: InputMaybe<Deconfliction_Bool_Exp>;
};

/** aggregated selection of "rolodex_deconflictionstatus" */
export type DeconflictionStatus_Aggregate = {
  __typename?: 'deconflictionStatus_aggregate';
  aggregate?: Maybe<DeconflictionStatus_Aggregate_Fields>;
  nodes: Array<DeconflictionStatus>;
};

/** aggregate fields of "rolodex_deconflictionstatus" */
export type DeconflictionStatus_Aggregate_Fields = {
  __typename?: 'deconflictionStatus_aggregate_fields';
  avg?: Maybe<DeconflictionStatus_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<DeconflictionStatus_Max_Fields>;
  min?: Maybe<DeconflictionStatus_Min_Fields>;
  stddev?: Maybe<DeconflictionStatus_Stddev_Fields>;
  stddev_pop?: Maybe<DeconflictionStatus_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<DeconflictionStatus_Stddev_Samp_Fields>;
  sum?: Maybe<DeconflictionStatus_Sum_Fields>;
  var_pop?: Maybe<DeconflictionStatus_Var_Pop_Fields>;
  var_samp?: Maybe<DeconflictionStatus_Var_Samp_Fields>;
  variance?: Maybe<DeconflictionStatus_Variance_Fields>;
};


/** aggregate fields of "rolodex_deconflictionstatus" */
export type DeconflictionStatus_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<DeconflictionStatus_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type DeconflictionStatus_Avg_Fields = {
  __typename?: 'deconflictionStatus_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "rolodex_deconflictionstatus". All fields are combined with a logical 'AND'. */
export type DeconflictionStatus_Bool_Exp = {
  _and?: InputMaybe<Array<DeconflictionStatus_Bool_Exp>>;
  _not?: InputMaybe<DeconflictionStatus_Bool_Exp>;
  _or?: InputMaybe<Array<DeconflictionStatus_Bool_Exp>>;
  deconflictions?: InputMaybe<Deconfliction_Bool_Exp>;
  deconflictions_aggregate?: InputMaybe<Deconfliction_Aggregate_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  status?: InputMaybe<String_Comparison_Exp>;
  weight?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "rolodex_deconflictionstatus" */
export enum DeconflictionStatus_Constraint {
  /** unique or primary key constraint on columns "id" */
  RolodexDeconflictionstatusPkey = 'rolodex_deconflictionstatus_pkey',
  /** unique or primary key constraint on columns "status" */
  RolodexDeconflictionstatusStatusKey = 'rolodex_deconflictionstatus_status_key'
}

/** input type for incrementing numeric columns in table "rolodex_deconflictionstatus" */
export type DeconflictionStatus_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  weight?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "rolodex_deconflictionstatus" */
export type DeconflictionStatus_Insert_Input = {
  deconflictions?: InputMaybe<Deconfliction_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  weight?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type DeconflictionStatus_Max_Fields = {
  __typename?: 'deconflictionStatus_max_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  weight?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type DeconflictionStatus_Min_Fields = {
  __typename?: 'deconflictionStatus_min_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  status?: Maybe<Scalars['String']['output']>;
  weight?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "rolodex_deconflictionstatus" */
export type DeconflictionStatus_Mutation_Response = {
  __typename?: 'deconflictionStatus_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<DeconflictionStatus>;
};

/** input type for inserting object relation for remote table "rolodex_deconflictionstatus" */
export type DeconflictionStatus_Obj_Rel_Insert_Input = {
  data: DeconflictionStatus_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<DeconflictionStatus_On_Conflict>;
};

/** on_conflict condition type for table "rolodex_deconflictionstatus" */
export type DeconflictionStatus_On_Conflict = {
  constraint: DeconflictionStatus_Constraint;
  update_columns?: Array<DeconflictionStatus_Update_Column>;
  where?: InputMaybe<DeconflictionStatus_Bool_Exp>;
};

/** Ordering options when selecting data from "rolodex_deconflictionstatus". */
export type DeconflictionStatus_Order_By = {
  deconflictions_aggregate?: InputMaybe<Deconfliction_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  status?: InputMaybe<Order_By>;
  weight?: InputMaybe<Order_By>;
};

/** primary key columns input for table: rolodex_deconflictionstatus */
export type DeconflictionStatus_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "rolodex_deconflictionstatus" */
export enum DeconflictionStatus_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Status = 'status',
  /** column name */
  Weight = 'weight'
}

/** input type for updating data in table "rolodex_deconflictionstatus" */
export type DeconflictionStatus_Set_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  weight?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type DeconflictionStatus_Stddev_Fields = {
  __typename?: 'deconflictionStatus_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type DeconflictionStatus_Stddev_Pop_Fields = {
  __typename?: 'deconflictionStatus_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type DeconflictionStatus_Stddev_Samp_Fields = {
  __typename?: 'deconflictionStatus_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "deconflictionStatus" */
export type DeconflictionStatus_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: DeconflictionStatus_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type DeconflictionStatus_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  weight?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type DeconflictionStatus_Sum_Fields = {
  __typename?: 'deconflictionStatus_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  weight?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "rolodex_deconflictionstatus" */
export enum DeconflictionStatus_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Status = 'status',
  /** column name */
  Weight = 'weight'
}

export type DeconflictionStatus_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<DeconflictionStatus_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<DeconflictionStatus_Set_Input>;
  /** filter the rows which have to be updated */
  where: DeconflictionStatus_Bool_Exp;
};

/** aggregate var_pop on columns */
export type DeconflictionStatus_Var_Pop_Fields = {
  __typename?: 'deconflictionStatus_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type DeconflictionStatus_Var_Samp_Fields = {
  __typename?: 'deconflictionStatus_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type DeconflictionStatus_Variance_Fields = {
  __typename?: 'deconflictionStatus_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** aggregated selection of "rolodex_deconfliction" */
export type Deconfliction_Aggregate = {
  __typename?: 'deconfliction_aggregate';
  aggregate?: Maybe<Deconfliction_Aggregate_Fields>;
  nodes: Array<Deconfliction>;
};

export type Deconfliction_Aggregate_Bool_Exp = {
  count?: InputMaybe<Deconfliction_Aggregate_Bool_Exp_Count>;
};

export type Deconfliction_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Deconfliction_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Deconfliction_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "rolodex_deconfliction" */
export type Deconfliction_Aggregate_Fields = {
  __typename?: 'deconfliction_aggregate_fields';
  avg?: Maybe<Deconfliction_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Deconfliction_Max_Fields>;
  min?: Maybe<Deconfliction_Min_Fields>;
  stddev?: Maybe<Deconfliction_Stddev_Fields>;
  stddev_pop?: Maybe<Deconfliction_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Deconfliction_Stddev_Samp_Fields>;
  sum?: Maybe<Deconfliction_Sum_Fields>;
  var_pop?: Maybe<Deconfliction_Var_Pop_Fields>;
  var_samp?: Maybe<Deconfliction_Var_Samp_Fields>;
  variance?: Maybe<Deconfliction_Variance_Fields>;
};


/** aggregate fields of "rolodex_deconfliction" */
export type Deconfliction_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Deconfliction_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "rolodex_deconfliction" */
export type Deconfliction_Aggregate_Order_By = {
  avg?: InputMaybe<Deconfliction_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Deconfliction_Max_Order_By>;
  min?: InputMaybe<Deconfliction_Min_Order_By>;
  stddev?: InputMaybe<Deconfliction_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Deconfliction_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Deconfliction_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Deconfliction_Sum_Order_By>;
  var_pop?: InputMaybe<Deconfliction_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Deconfliction_Var_Samp_Order_By>;
  variance?: InputMaybe<Deconfliction_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "rolodex_deconfliction" */
export type Deconfliction_Arr_Rel_Insert_Input = {
  data: Array<Deconfliction_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Deconfliction_On_Conflict>;
};

/** aggregate avg on columns */
export type Deconfliction_Avg_Fields = {
  __typename?: 'deconfliction_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  statusId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "rolodex_deconfliction" */
export type Deconfliction_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "rolodex_deconfliction". All fields are combined with a logical 'AND'. */
export type Deconfliction_Bool_Exp = {
  _and?: InputMaybe<Array<Deconfliction_Bool_Exp>>;
  _not?: InputMaybe<Deconfliction_Bool_Exp>;
  _or?: InputMaybe<Array<Deconfliction_Bool_Exp>>;
  alertSource?: InputMaybe<String_Comparison_Exp>;
  alertTimestamp?: InputMaybe<Timestamptz_Comparison_Exp>;
  createdAt?: InputMaybe<Timestamptz_Comparison_Exp>;
  deconflictionStatus?: InputMaybe<DeconflictionStatus_Bool_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  project?: InputMaybe<Project_Bool_Exp>;
  projectId?: InputMaybe<Bigint_Comparison_Exp>;
  reportTimestamp?: InputMaybe<Timestamptz_Comparison_Exp>;
  responseTimestamp?: InputMaybe<Timestamptz_Comparison_Exp>;
  statusId?: InputMaybe<Bigint_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "rolodex_deconfliction" */
export enum Deconfliction_Constraint {
  /** unique or primary key constraint on columns "id" */
  RolodexDeconflictionPkey = 'rolodex_deconfliction_pkey'
}

/** input type for incrementing numeric columns in table "rolodex_deconfliction" */
export type Deconfliction_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  statusId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "rolodex_deconfliction" */
export type Deconfliction_Insert_Input = {
  alertSource?: InputMaybe<Scalars['String']['input']>;
  alertTimestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  deconflictionStatus?: InputMaybe<DeconflictionStatus_Obj_Rel_Insert_Input>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  project?: InputMaybe<Project_Obj_Rel_Insert_Input>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  reportTimestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  responseTimestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  statusId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Deconfliction_Max_Fields = {
  __typename?: 'deconfliction_max_fields';
  alertSource?: Maybe<Scalars['String']['output']>;
  alertTimestamp?: Maybe<Scalars['timestamptz']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  reportTimestamp?: Maybe<Scalars['timestamptz']['output']>;
  responseTimestamp?: Maybe<Scalars['timestamptz']['output']>;
  statusId?: Maybe<Scalars['bigint']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "rolodex_deconfliction" */
export type Deconfliction_Max_Order_By = {
  alertSource?: InputMaybe<Order_By>;
  alertTimestamp?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  reportTimestamp?: InputMaybe<Order_By>;
  responseTimestamp?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Deconfliction_Min_Fields = {
  __typename?: 'deconfliction_min_fields';
  alertSource?: Maybe<Scalars['String']['output']>;
  alertTimestamp?: Maybe<Scalars['timestamptz']['output']>;
  createdAt?: Maybe<Scalars['timestamptz']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  reportTimestamp?: Maybe<Scalars['timestamptz']['output']>;
  responseTimestamp?: Maybe<Scalars['timestamptz']['output']>;
  statusId?: Maybe<Scalars['bigint']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "rolodex_deconfliction" */
export type Deconfliction_Min_Order_By = {
  alertSource?: InputMaybe<Order_By>;
  alertTimestamp?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  reportTimestamp?: InputMaybe<Order_By>;
  responseTimestamp?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "rolodex_deconfliction" */
export type Deconfliction_Mutation_Response = {
  __typename?: 'deconfliction_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Deconfliction>;
};

/** on_conflict condition type for table "rolodex_deconfliction" */
export type Deconfliction_On_Conflict = {
  constraint: Deconfliction_Constraint;
  update_columns?: Array<Deconfliction_Update_Column>;
  where?: InputMaybe<Deconfliction_Bool_Exp>;
};

/** Ordering options when selecting data from "rolodex_deconfliction". */
export type Deconfliction_Order_By = {
  alertSource?: InputMaybe<Order_By>;
  alertTimestamp?: InputMaybe<Order_By>;
  createdAt?: InputMaybe<Order_By>;
  deconflictionStatus?: InputMaybe<DeconflictionStatus_Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project?: InputMaybe<Project_Order_By>;
  projectId?: InputMaybe<Order_By>;
  reportTimestamp?: InputMaybe<Order_By>;
  responseTimestamp?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** primary key columns input for table: rolodex_deconfliction */
export type Deconfliction_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "rolodex_deconfliction" */
export enum Deconfliction_Select_Column {
  /** column name */
  AlertSource = 'alertSource',
  /** column name */
  AlertTimestamp = 'alertTimestamp',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  ReportTimestamp = 'reportTimestamp',
  /** column name */
  ResponseTimestamp = 'responseTimestamp',
  /** column name */
  StatusId = 'statusId',
  /** column name */
  Title = 'title'
}

/** input type for updating data in table "rolodex_deconfliction" */
export type Deconfliction_Set_Input = {
  alertSource?: InputMaybe<Scalars['String']['input']>;
  alertTimestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  reportTimestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  responseTimestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  statusId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Deconfliction_Stddev_Fields = {
  __typename?: 'deconfliction_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  statusId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "rolodex_deconfliction" */
export type Deconfliction_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Deconfliction_Stddev_Pop_Fields = {
  __typename?: 'deconfliction_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  statusId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "rolodex_deconfliction" */
export type Deconfliction_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Deconfliction_Stddev_Samp_Fields = {
  __typename?: 'deconfliction_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  statusId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "rolodex_deconfliction" */
export type Deconfliction_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "deconfliction" */
export type Deconfliction_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Deconfliction_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Deconfliction_Stream_Cursor_Value_Input = {
  alertSource?: InputMaybe<Scalars['String']['input']>;
  alertTimestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  createdAt?: InputMaybe<Scalars['timestamptz']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  reportTimestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  responseTimestamp?: InputMaybe<Scalars['timestamptz']['input']>;
  statusId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Deconfliction_Sum_Fields = {
  __typename?: 'deconfliction_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  statusId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "rolodex_deconfliction" */
export type Deconfliction_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** update columns of table "rolodex_deconfliction" */
export enum Deconfliction_Update_Column {
  /** column name */
  AlertSource = 'alertSource',
  /** column name */
  AlertTimestamp = 'alertTimestamp',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  ReportTimestamp = 'reportTimestamp',
  /** column name */
  ResponseTimestamp = 'responseTimestamp',
  /** column name */
  StatusId = 'statusId',
  /** column name */
  Title = 'title'
}

export type Deconfliction_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Deconfliction_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Deconfliction_Set_Input>;
  /** filter the rows which have to be updated */
  where: Deconfliction_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Deconfliction_Var_Pop_Fields = {
  __typename?: 'deconfliction_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  statusId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "rolodex_deconfliction" */
export type Deconfliction_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Deconfliction_Var_Samp_Fields = {
  __typename?: 'deconfliction_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  statusId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "rolodex_deconfliction" */
export type Deconfliction_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Deconfliction_Variance_Fields = {
  __typename?: 'deconfliction_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  statusId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "rolodex_deconfliction" */
export type Deconfliction_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

export type DeleteResponse = {
  __typename?: 'deleteResponse';
  result: Scalars['String']['output'];
};

/** columns and relationships of "django_content_type" */
export type DjangoContentType = {
  __typename?: 'djangoContentType';
  appLabel: Scalars['String']['output'];
  /** An array relationship */
  authPermissions: Array<AuthPermission>;
  /** An aggregate relationship */
  authPermissions_aggregate: AuthPermission_Aggregate;
  id: Scalars['Int']['output'];
  model: Scalars['String']['output'];
  /** An array relationship */
  tags: Array<TaggedItem>;
  /** An aggregate relationship */
  tags_aggregate: TaggedItem_Aggregate;
};


/** columns and relationships of "django_content_type" */
export type DjangoContentTypeAuthPermissionsArgs = {
  distinct_on?: InputMaybe<Array<AuthPermission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AuthPermission_Order_By>>;
  where?: InputMaybe<AuthPermission_Bool_Exp>;
};


/** columns and relationships of "django_content_type" */
export type DjangoContentTypeAuthPermissions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AuthPermission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AuthPermission_Order_By>>;
  where?: InputMaybe<AuthPermission_Bool_Exp>;
};


/** columns and relationships of "django_content_type" */
export type DjangoContentTypeTagsArgs = {
  distinct_on?: InputMaybe<Array<TaggedItem_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TaggedItem_Order_By>>;
  where?: InputMaybe<TaggedItem_Bool_Exp>;
};


/** columns and relationships of "django_content_type" */
export type DjangoContentTypeTags_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TaggedItem_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TaggedItem_Order_By>>;
  where?: InputMaybe<TaggedItem_Bool_Exp>;
};

/** aggregated selection of "django_content_type" */
export type DjangoContentType_Aggregate = {
  __typename?: 'djangoContentType_aggregate';
  aggregate?: Maybe<DjangoContentType_Aggregate_Fields>;
  nodes: Array<DjangoContentType>;
};

/** aggregate fields of "django_content_type" */
export type DjangoContentType_Aggregate_Fields = {
  __typename?: 'djangoContentType_aggregate_fields';
  avg?: Maybe<DjangoContentType_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<DjangoContentType_Max_Fields>;
  min?: Maybe<DjangoContentType_Min_Fields>;
  stddev?: Maybe<DjangoContentType_Stddev_Fields>;
  stddev_pop?: Maybe<DjangoContentType_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<DjangoContentType_Stddev_Samp_Fields>;
  sum?: Maybe<DjangoContentType_Sum_Fields>;
  var_pop?: Maybe<DjangoContentType_Var_Pop_Fields>;
  var_samp?: Maybe<DjangoContentType_Var_Samp_Fields>;
  variance?: Maybe<DjangoContentType_Variance_Fields>;
};


/** aggregate fields of "django_content_type" */
export type DjangoContentType_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<DjangoContentType_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type DjangoContentType_Avg_Fields = {
  __typename?: 'djangoContentType_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "django_content_type". All fields are combined with a logical 'AND'. */
export type DjangoContentType_Bool_Exp = {
  _and?: InputMaybe<Array<DjangoContentType_Bool_Exp>>;
  _not?: InputMaybe<DjangoContentType_Bool_Exp>;
  _or?: InputMaybe<Array<DjangoContentType_Bool_Exp>>;
  appLabel?: InputMaybe<String_Comparison_Exp>;
  authPermissions?: InputMaybe<AuthPermission_Bool_Exp>;
  authPermissions_aggregate?: InputMaybe<AuthPermission_Aggregate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  model?: InputMaybe<String_Comparison_Exp>;
  tags?: InputMaybe<TaggedItem_Bool_Exp>;
  tags_aggregate?: InputMaybe<TaggedItem_Aggregate_Bool_Exp>;
};

/** unique or primary key constraints on table "django_content_type" */
export enum DjangoContentType_Constraint {
  /** unique or primary key constraint on columns "app_label", "model" */
  DjangoContentTypeAppLabelModel_76bd3d3bUniq = 'django_content_type_app_label_model_76bd3d3b_uniq',
  /** unique or primary key constraint on columns "id" */
  DjangoContentTypePkey = 'django_content_type_pkey'
}

/** input type for incrementing numeric columns in table "django_content_type" */
export type DjangoContentType_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "django_content_type" */
export type DjangoContentType_Insert_Input = {
  appLabel?: InputMaybe<Scalars['String']['input']>;
  authPermissions?: InputMaybe<AuthPermission_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['String']['input']>;
  tags?: InputMaybe<TaggedItem_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type DjangoContentType_Max_Fields = {
  __typename?: 'djangoContentType_max_fields';
  appLabel?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  model?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type DjangoContentType_Min_Fields = {
  __typename?: 'djangoContentType_min_fields';
  appLabel?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  model?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "django_content_type" */
export type DjangoContentType_Mutation_Response = {
  __typename?: 'djangoContentType_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<DjangoContentType>;
};

/** input type for inserting object relation for remote table "django_content_type" */
export type DjangoContentType_Obj_Rel_Insert_Input = {
  data: DjangoContentType_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<DjangoContentType_On_Conflict>;
};

/** on_conflict condition type for table "django_content_type" */
export type DjangoContentType_On_Conflict = {
  constraint: DjangoContentType_Constraint;
  update_columns?: Array<DjangoContentType_Update_Column>;
  where?: InputMaybe<DjangoContentType_Bool_Exp>;
};

/** Ordering options when selecting data from "django_content_type". */
export type DjangoContentType_Order_By = {
  appLabel?: InputMaybe<Order_By>;
  authPermissions_aggregate?: InputMaybe<AuthPermission_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  model?: InputMaybe<Order_By>;
  tags_aggregate?: InputMaybe<TaggedItem_Aggregate_Order_By>;
};

/** primary key columns input for table: django_content_type */
export type DjangoContentType_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "django_content_type" */
export enum DjangoContentType_Select_Column {
  /** column name */
  AppLabel = 'appLabel',
  /** column name */
  Id = 'id',
  /** column name */
  Model = 'model'
}

/** input type for updating data in table "django_content_type" */
export type DjangoContentType_Set_Input = {
  appLabel?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type DjangoContentType_Stddev_Fields = {
  __typename?: 'djangoContentType_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type DjangoContentType_Stddev_Pop_Fields = {
  __typename?: 'djangoContentType_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type DjangoContentType_Stddev_Samp_Fields = {
  __typename?: 'djangoContentType_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "djangoContentType" */
export type DjangoContentType_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: DjangoContentType_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type DjangoContentType_Stream_Cursor_Value_Input = {
  appLabel?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  model?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type DjangoContentType_Sum_Fields = {
  __typename?: 'djangoContentType_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "django_content_type" */
export enum DjangoContentType_Update_Column {
  /** column name */
  AppLabel = 'appLabel',
  /** column name */
  Id = 'id',
  /** column name */
  Model = 'model'
}

export type DjangoContentType_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<DjangoContentType_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<DjangoContentType_Set_Input>;
  /** filter the rows which have to be updated */
  where: DjangoContentType_Bool_Exp;
};

/** aggregate var_pop on columns */
export type DjangoContentType_Var_Pop_Fields = {
  __typename?: 'djangoContentType_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type DjangoContentType_Var_Samp_Fields = {
  __typename?: 'djangoContentType_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type DjangoContentType_Variance_Fields = {
  __typename?: 'djangoContentType_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "reporting_doctype" */
export type DocType = {
  __typename?: 'docType';
  docType: Scalars['String']['output'];
  extension: Scalars['String']['output'];
  id: Scalars['bigint']['output'];
  name: Scalars['String']['output'];
  /** An array relationship */
  templates: Array<Template>;
  /** An aggregate relationship */
  templates_aggregate: Template_Aggregate;
};


/** columns and relationships of "reporting_doctype" */
export type DocTypeTemplatesArgs = {
  distinct_on?: InputMaybe<Array<Template_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Template_Order_By>>;
  where?: InputMaybe<Template_Bool_Exp>;
};


/** columns and relationships of "reporting_doctype" */
export type DocTypeTemplates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Template_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Template_Order_By>>;
  where?: InputMaybe<Template_Bool_Exp>;
};

/** aggregated selection of "reporting_doctype" */
export type DocType_Aggregate = {
  __typename?: 'docType_aggregate';
  aggregate?: Maybe<DocType_Aggregate_Fields>;
  nodes: Array<DocType>;
};

/** aggregate fields of "reporting_doctype" */
export type DocType_Aggregate_Fields = {
  __typename?: 'docType_aggregate_fields';
  avg?: Maybe<DocType_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<DocType_Max_Fields>;
  min?: Maybe<DocType_Min_Fields>;
  stddev?: Maybe<DocType_Stddev_Fields>;
  stddev_pop?: Maybe<DocType_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<DocType_Stddev_Samp_Fields>;
  sum?: Maybe<DocType_Sum_Fields>;
  var_pop?: Maybe<DocType_Var_Pop_Fields>;
  var_samp?: Maybe<DocType_Var_Samp_Fields>;
  variance?: Maybe<DocType_Variance_Fields>;
};


/** aggregate fields of "reporting_doctype" */
export type DocType_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<DocType_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type DocType_Avg_Fields = {
  __typename?: 'docType_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "reporting_doctype". All fields are combined with a logical 'AND'. */
export type DocType_Bool_Exp = {
  _and?: InputMaybe<Array<DocType_Bool_Exp>>;
  _not?: InputMaybe<DocType_Bool_Exp>;
  _or?: InputMaybe<Array<DocType_Bool_Exp>>;
  docType?: InputMaybe<String_Comparison_Exp>;
  extension?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  templates?: InputMaybe<Template_Bool_Exp>;
  templates_aggregate?: InputMaybe<Template_Aggregate_Bool_Exp>;
};

/** unique or primary key constraints on table "reporting_doctype" */
export enum DocType_Constraint {
  /** unique or primary key constraint on columns "doc_type" */
  ReportingDoctypeDocTypeKey = 'reporting_doctype_doc_type_key',
  /** unique or primary key constraint on columns "id" */
  ReportingDoctypePkey = 'reporting_doctype_pkey'
}

/** input type for incrementing numeric columns in table "reporting_doctype" */
export type DocType_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "reporting_doctype" */
export type DocType_Insert_Input = {
  docType?: InputMaybe<Scalars['String']['input']>;
  extension?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  templates?: InputMaybe<Template_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type DocType_Max_Fields = {
  __typename?: 'docType_max_fields';
  docType?: Maybe<Scalars['String']['output']>;
  extension?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type DocType_Min_Fields = {
  __typename?: 'docType_min_fields';
  docType?: Maybe<Scalars['String']['output']>;
  extension?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "reporting_doctype" */
export type DocType_Mutation_Response = {
  __typename?: 'docType_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<DocType>;
};

/** input type for inserting object relation for remote table "reporting_doctype" */
export type DocType_Obj_Rel_Insert_Input = {
  data: DocType_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<DocType_On_Conflict>;
};

/** on_conflict condition type for table "reporting_doctype" */
export type DocType_On_Conflict = {
  constraint: DocType_Constraint;
  update_columns?: Array<DocType_Update_Column>;
  where?: InputMaybe<DocType_Bool_Exp>;
};

/** Ordering options when selecting data from "reporting_doctype". */
export type DocType_Order_By = {
  docType?: InputMaybe<Order_By>;
  extension?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  templates_aggregate?: InputMaybe<Template_Aggregate_Order_By>;
};

/** primary key columns input for table: reporting_doctype */
export type DocType_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "reporting_doctype" */
export enum DocType_Select_Column {
  /** column name */
  DocType = 'docType',
  /** column name */
  Extension = 'extension',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "reporting_doctype" */
export type DocType_Set_Input = {
  docType?: InputMaybe<Scalars['String']['input']>;
  extension?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type DocType_Stddev_Fields = {
  __typename?: 'docType_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type DocType_Stddev_Pop_Fields = {
  __typename?: 'docType_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type DocType_Stddev_Samp_Fields = {
  __typename?: 'docType_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "docType" */
export type DocType_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: DocType_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type DocType_Stream_Cursor_Value_Input = {
  docType?: InputMaybe<Scalars['String']['input']>;
  extension?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type DocType_Sum_Fields = {
  __typename?: 'docType_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
};

/** update columns of table "reporting_doctype" */
export enum DocType_Update_Column {
  /** column name */
  DocType = 'docType',
  /** column name */
  Extension = 'extension',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type DocType_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<DocType_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<DocType_Set_Input>;
  /** filter the rows which have to be updated */
  where: DocType_Bool_Exp;
};

/** aggregate var_pop on columns */
export type DocType_Var_Pop_Fields = {
  __typename?: 'docType_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type DocType_Var_Samp_Fields = {
  __typename?: 'docType_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type DocType_Variance_Fields = {
  __typename?: 'docType_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "shepherd_domain" */
export type Domain = {
  __typename?: 'domain';
  autoRenew: Scalars['Boolean']['output'];
  burned_explanation: Scalars['String']['output'];
  categorization?: Maybe<Scalars['jsonb']['output']>;
  /** An array relationship */
  checkouts: Array<DomainCheckout>;
  /** An aggregate relationship */
  checkouts_aggregate: DomainCheckout_Aggregate;
  /** An array relationship */
  comments: Array<DomainNote>;
  /** An aggregate relationship */
  comments_aggregate: DomainNote_Aggregate;
  creation: Scalars['date']['output'];
  dns?: Maybe<Scalars['jsonb']['output']>;
  /** An object relationship */
  domainStatus?: Maybe<DomainStatus>;
  domainStatusId?: Maybe<Scalars['bigint']['output']>;
  expiration: Scalars['date']['output'];
  expired: Scalars['Boolean']['output'];
  extraFields: Scalars['jsonb']['output'];
  /** An object relationship */
  healthStatus?: Maybe<HealthStatus>;
  healthStatusId?: Maybe<Scalars['bigint']['output']>;
  id: Scalars['bigint']['output'];
  lastHealthCheck?: Maybe<Scalars['date']['output']>;
  lastUsedById?: Maybe<Scalars['bigint']['output']>;
  name: Scalars['String']['output'];
  note: Scalars['String']['output'];
  registrar: Scalars['String']['output'];
  resetDns: Scalars['Boolean']['output'];
  /** An object relationship */
  user?: Maybe<User>;
  vtPermalink: Scalars['String']['output'];
  /** An object relationship */
  whoisStatus?: Maybe<WhoisStatus>;
  whoisStatusId?: Maybe<Scalars['bigint']['output']>;
};


/** columns and relationships of "shepherd_domain" */
export type DomainCategorizationArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "shepherd_domain" */
export type DomainCheckoutsArgs = {
  distinct_on?: InputMaybe<Array<DomainCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainCheckout_Order_By>>;
  where?: InputMaybe<DomainCheckout_Bool_Exp>;
};


/** columns and relationships of "shepherd_domain" */
export type DomainCheckouts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DomainCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainCheckout_Order_By>>;
  where?: InputMaybe<DomainCheckout_Bool_Exp>;
};


/** columns and relationships of "shepherd_domain" */
export type DomainCommentsArgs = {
  distinct_on?: InputMaybe<Array<DomainNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainNote_Order_By>>;
  where?: InputMaybe<DomainNote_Bool_Exp>;
};


/** columns and relationships of "shepherd_domain" */
export type DomainComments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DomainNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainNote_Order_By>>;
  where?: InputMaybe<DomainNote_Bool_Exp>;
};


/** columns and relationships of "shepherd_domain" */
export type DomainDnsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "shepherd_domain" */
export type DomainExtraFieldsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "shepherd_history" */
export type DomainCheckout = {
  __typename?: 'domainCheckout';
  /** An object relationship */
  activityType: ActivityType;
  activityTypeId: Scalars['bigint']['output'];
  /** An object relationship */
  client: Client;
  clientId: Scalars['bigint']['output'];
  /** An object relationship */
  domain: Domain;
  domainId: Scalars['bigint']['output'];
  /** An array relationship */
  domainServerConnections: Array<DomainServerConnection>;
  /** An aggregate relationship */
  domainServerConnections_aggregate: DomainServerConnection_Aggregate;
  endDate: Scalars['date']['output'];
  id: Scalars['bigint']['output'];
  note: Scalars['String']['output'];
  operatorId?: Maybe<Scalars['bigint']['output']>;
  /** An object relationship */
  project?: Maybe<Project>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  startDate: Scalars['date']['output'];
  /** An object relationship */
  user?: Maybe<User>;
};


/** columns and relationships of "shepherd_history" */
export type DomainCheckoutDomainServerConnectionsArgs = {
  distinct_on?: InputMaybe<Array<DomainServerConnection_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainServerConnection_Order_By>>;
  where?: InputMaybe<DomainServerConnection_Bool_Exp>;
};


/** columns and relationships of "shepherd_history" */
export type DomainCheckoutDomainServerConnections_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DomainServerConnection_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainServerConnection_Order_By>>;
  where?: InputMaybe<DomainServerConnection_Bool_Exp>;
};

/** aggregated selection of "shepherd_history" */
export type DomainCheckout_Aggregate = {
  __typename?: 'domainCheckout_aggregate';
  aggregate?: Maybe<DomainCheckout_Aggregate_Fields>;
  nodes: Array<DomainCheckout>;
};

export type DomainCheckout_Aggregate_Bool_Exp = {
  count?: InputMaybe<DomainCheckout_Aggregate_Bool_Exp_Count>;
};

export type DomainCheckout_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<DomainCheckout_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<DomainCheckout_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "shepherd_history" */
export type DomainCheckout_Aggregate_Fields = {
  __typename?: 'domainCheckout_aggregate_fields';
  avg?: Maybe<DomainCheckout_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<DomainCheckout_Max_Fields>;
  min?: Maybe<DomainCheckout_Min_Fields>;
  stddev?: Maybe<DomainCheckout_Stddev_Fields>;
  stddev_pop?: Maybe<DomainCheckout_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<DomainCheckout_Stddev_Samp_Fields>;
  sum?: Maybe<DomainCheckout_Sum_Fields>;
  var_pop?: Maybe<DomainCheckout_Var_Pop_Fields>;
  var_samp?: Maybe<DomainCheckout_Var_Samp_Fields>;
  variance?: Maybe<DomainCheckout_Variance_Fields>;
};


/** aggregate fields of "shepherd_history" */
export type DomainCheckout_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<DomainCheckout_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "shepherd_history" */
export type DomainCheckout_Aggregate_Order_By = {
  avg?: InputMaybe<DomainCheckout_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<DomainCheckout_Max_Order_By>;
  min?: InputMaybe<DomainCheckout_Min_Order_By>;
  stddev?: InputMaybe<DomainCheckout_Stddev_Order_By>;
  stddev_pop?: InputMaybe<DomainCheckout_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<DomainCheckout_Stddev_Samp_Order_By>;
  sum?: InputMaybe<DomainCheckout_Sum_Order_By>;
  var_pop?: InputMaybe<DomainCheckout_Var_Pop_Order_By>;
  var_samp?: InputMaybe<DomainCheckout_Var_Samp_Order_By>;
  variance?: InputMaybe<DomainCheckout_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "shepherd_history" */
export type DomainCheckout_Arr_Rel_Insert_Input = {
  data: Array<DomainCheckout_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<DomainCheckout_On_Conflict>;
};

/** aggregate avg on columns */
export type DomainCheckout_Avg_Fields = {
  __typename?: 'domainCheckout_avg_fields';
  activityTypeId?: Maybe<Scalars['Float']['output']>;
  clientId?: Maybe<Scalars['Float']['output']>;
  domainId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "shepherd_history" */
export type DomainCheckout_Avg_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "shepherd_history". All fields are combined with a logical 'AND'. */
export type DomainCheckout_Bool_Exp = {
  _and?: InputMaybe<Array<DomainCheckout_Bool_Exp>>;
  _not?: InputMaybe<DomainCheckout_Bool_Exp>;
  _or?: InputMaybe<Array<DomainCheckout_Bool_Exp>>;
  activityType?: InputMaybe<ActivityType_Bool_Exp>;
  activityTypeId?: InputMaybe<Bigint_Comparison_Exp>;
  client?: InputMaybe<Client_Bool_Exp>;
  clientId?: InputMaybe<Bigint_Comparison_Exp>;
  domain?: InputMaybe<Domain_Bool_Exp>;
  domainId?: InputMaybe<Bigint_Comparison_Exp>;
  domainServerConnections?: InputMaybe<DomainServerConnection_Bool_Exp>;
  domainServerConnections_aggregate?: InputMaybe<DomainServerConnection_Aggregate_Bool_Exp>;
  endDate?: InputMaybe<Date_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  operatorId?: InputMaybe<Bigint_Comparison_Exp>;
  project?: InputMaybe<Project_Bool_Exp>;
  projectId?: InputMaybe<Bigint_Comparison_Exp>;
  startDate?: InputMaybe<Date_Comparison_Exp>;
  user?: InputMaybe<User_Bool_Exp>;
};

/** unique or primary key constraints on table "shepherd_history" */
export enum DomainCheckout_Constraint {
  /** unique or primary key constraint on columns "id" */
  ShepherdHistoryPkey = 'shepherd_history_pkey'
}

/** input type for incrementing numeric columns in table "shepherd_history" */
export type DomainCheckout_Inc_Input = {
  activityTypeId?: InputMaybe<Scalars['bigint']['input']>;
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  domainId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "shepherd_history" */
export type DomainCheckout_Insert_Input = {
  activityType?: InputMaybe<ActivityType_Obj_Rel_Insert_Input>;
  activityTypeId?: InputMaybe<Scalars['bigint']['input']>;
  client?: InputMaybe<Client_Obj_Rel_Insert_Input>;
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  domain?: InputMaybe<Domain_Obj_Rel_Insert_Input>;
  domainId?: InputMaybe<Scalars['bigint']['input']>;
  domainServerConnections?: InputMaybe<DomainServerConnection_Arr_Rel_Insert_Input>;
  endDate?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  project?: InputMaybe<Project_Obj_Rel_Insert_Input>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  startDate?: InputMaybe<Scalars['date']['input']>;
  user?: InputMaybe<User_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type DomainCheckout_Max_Fields = {
  __typename?: 'domainCheckout_max_fields';
  activityTypeId?: Maybe<Scalars['bigint']['output']>;
  clientId?: Maybe<Scalars['bigint']['output']>;
  domainId?: Maybe<Scalars['bigint']['output']>;
  endDate?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  startDate?: Maybe<Scalars['date']['output']>;
};

/** order by max() on columns of table "shepherd_history" */
export type DomainCheckout_Max_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  domainId?: InputMaybe<Order_By>;
  endDate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  startDate?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type DomainCheckout_Min_Fields = {
  __typename?: 'domainCheckout_min_fields';
  activityTypeId?: Maybe<Scalars['bigint']['output']>;
  clientId?: Maybe<Scalars['bigint']['output']>;
  domainId?: Maybe<Scalars['bigint']['output']>;
  endDate?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  startDate?: Maybe<Scalars['date']['output']>;
};

/** order by min() on columns of table "shepherd_history" */
export type DomainCheckout_Min_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  domainId?: InputMaybe<Order_By>;
  endDate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  startDate?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "shepherd_history" */
export type DomainCheckout_Mutation_Response = {
  __typename?: 'domainCheckout_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<DomainCheckout>;
};

/** input type for inserting object relation for remote table "shepherd_history" */
export type DomainCheckout_Obj_Rel_Insert_Input = {
  data: DomainCheckout_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<DomainCheckout_On_Conflict>;
};

/** on_conflict condition type for table "shepherd_history" */
export type DomainCheckout_On_Conflict = {
  constraint: DomainCheckout_Constraint;
  update_columns?: Array<DomainCheckout_Update_Column>;
  where?: InputMaybe<DomainCheckout_Bool_Exp>;
};

/** Ordering options when selecting data from "shepherd_history". */
export type DomainCheckout_Order_By = {
  activityType?: InputMaybe<ActivityType_Order_By>;
  activityTypeId?: InputMaybe<Order_By>;
  client?: InputMaybe<Client_Order_By>;
  clientId?: InputMaybe<Order_By>;
  domain?: InputMaybe<Domain_Order_By>;
  domainId?: InputMaybe<Order_By>;
  domainServerConnections_aggregate?: InputMaybe<DomainServerConnection_Aggregate_Order_By>;
  endDate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  project?: InputMaybe<Project_Order_By>;
  projectId?: InputMaybe<Order_By>;
  startDate?: InputMaybe<Order_By>;
  user?: InputMaybe<User_Order_By>;
};

/** primary key columns input for table: shepherd_history */
export type DomainCheckout_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "shepherd_history" */
export enum DomainCheckout_Select_Column {
  /** column name */
  ActivityTypeId = 'activityTypeId',
  /** column name */
  ClientId = 'clientId',
  /** column name */
  DomainId = 'domainId',
  /** column name */
  EndDate = 'endDate',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  OperatorId = 'operatorId',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  StartDate = 'startDate'
}

/** input type for updating data in table "shepherd_history" */
export type DomainCheckout_Set_Input = {
  activityTypeId?: InputMaybe<Scalars['bigint']['input']>;
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  domainId?: InputMaybe<Scalars['bigint']['input']>;
  endDate?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  startDate?: InputMaybe<Scalars['date']['input']>;
};

/** aggregate stddev on columns */
export type DomainCheckout_Stddev_Fields = {
  __typename?: 'domainCheckout_stddev_fields';
  activityTypeId?: Maybe<Scalars['Float']['output']>;
  clientId?: Maybe<Scalars['Float']['output']>;
  domainId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "shepherd_history" */
export type DomainCheckout_Stddev_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type DomainCheckout_Stddev_Pop_Fields = {
  __typename?: 'domainCheckout_stddev_pop_fields';
  activityTypeId?: Maybe<Scalars['Float']['output']>;
  clientId?: Maybe<Scalars['Float']['output']>;
  domainId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "shepherd_history" */
export type DomainCheckout_Stddev_Pop_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type DomainCheckout_Stddev_Samp_Fields = {
  __typename?: 'domainCheckout_stddev_samp_fields';
  activityTypeId?: Maybe<Scalars['Float']['output']>;
  clientId?: Maybe<Scalars['Float']['output']>;
  domainId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "shepherd_history" */
export type DomainCheckout_Stddev_Samp_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "domainCheckout" */
export type DomainCheckout_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: DomainCheckout_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type DomainCheckout_Stream_Cursor_Value_Input = {
  activityTypeId?: InputMaybe<Scalars['bigint']['input']>;
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  domainId?: InputMaybe<Scalars['bigint']['input']>;
  endDate?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  startDate?: InputMaybe<Scalars['date']['input']>;
};

/** aggregate sum on columns */
export type DomainCheckout_Sum_Fields = {
  __typename?: 'domainCheckout_sum_fields';
  activityTypeId?: Maybe<Scalars['bigint']['output']>;
  clientId?: Maybe<Scalars['bigint']['output']>;
  domainId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "shepherd_history" */
export type DomainCheckout_Sum_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** update columns of table "shepherd_history" */
export enum DomainCheckout_Update_Column {
  /** column name */
  ActivityTypeId = 'activityTypeId',
  /** column name */
  ClientId = 'clientId',
  /** column name */
  DomainId = 'domainId',
  /** column name */
  EndDate = 'endDate',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  OperatorId = 'operatorId',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  StartDate = 'startDate'
}

export type DomainCheckout_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<DomainCheckout_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<DomainCheckout_Set_Input>;
  /** filter the rows which have to be updated */
  where: DomainCheckout_Bool_Exp;
};

/** aggregate var_pop on columns */
export type DomainCheckout_Var_Pop_Fields = {
  __typename?: 'domainCheckout_var_pop_fields';
  activityTypeId?: Maybe<Scalars['Float']['output']>;
  clientId?: Maybe<Scalars['Float']['output']>;
  domainId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "shepherd_history" */
export type DomainCheckout_Var_Pop_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type DomainCheckout_Var_Samp_Fields = {
  __typename?: 'domainCheckout_var_samp_fields';
  activityTypeId?: Maybe<Scalars['Float']['output']>;
  clientId?: Maybe<Scalars['Float']['output']>;
  domainId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "shepherd_history" */
export type DomainCheckout_Var_Samp_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type DomainCheckout_Variance_Fields = {
  __typename?: 'domainCheckout_variance_fields';
  activityTypeId?: Maybe<Scalars['Float']['output']>;
  clientId?: Maybe<Scalars['Float']['output']>;
  domainId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "shepherd_history" */
export type DomainCheckout_Variance_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** columns and relationships of "shepherd_domainnote" */
export type DomainNote = {
  __typename?: 'domainNote';
  /** An object relationship */
  domain: Domain;
  domainId: Scalars['bigint']['output'];
  id: Scalars['bigint']['output'];
  note: Scalars['String']['output'];
  operatorId?: Maybe<Scalars['bigint']['output']>;
  timestamp: Scalars['date']['output'];
  /** An object relationship */
  user?: Maybe<User>;
};

/** aggregated selection of "shepherd_domainnote" */
export type DomainNote_Aggregate = {
  __typename?: 'domainNote_aggregate';
  aggregate?: Maybe<DomainNote_Aggregate_Fields>;
  nodes: Array<DomainNote>;
};

export type DomainNote_Aggregate_Bool_Exp = {
  count?: InputMaybe<DomainNote_Aggregate_Bool_Exp_Count>;
};

export type DomainNote_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<DomainNote_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<DomainNote_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "shepherd_domainnote" */
export type DomainNote_Aggregate_Fields = {
  __typename?: 'domainNote_aggregate_fields';
  avg?: Maybe<DomainNote_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<DomainNote_Max_Fields>;
  min?: Maybe<DomainNote_Min_Fields>;
  stddev?: Maybe<DomainNote_Stddev_Fields>;
  stddev_pop?: Maybe<DomainNote_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<DomainNote_Stddev_Samp_Fields>;
  sum?: Maybe<DomainNote_Sum_Fields>;
  var_pop?: Maybe<DomainNote_Var_Pop_Fields>;
  var_samp?: Maybe<DomainNote_Var_Samp_Fields>;
  variance?: Maybe<DomainNote_Variance_Fields>;
};


/** aggregate fields of "shepherd_domainnote" */
export type DomainNote_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<DomainNote_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "shepherd_domainnote" */
export type DomainNote_Aggregate_Order_By = {
  avg?: InputMaybe<DomainNote_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<DomainNote_Max_Order_By>;
  min?: InputMaybe<DomainNote_Min_Order_By>;
  stddev?: InputMaybe<DomainNote_Stddev_Order_By>;
  stddev_pop?: InputMaybe<DomainNote_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<DomainNote_Stddev_Samp_Order_By>;
  sum?: InputMaybe<DomainNote_Sum_Order_By>;
  var_pop?: InputMaybe<DomainNote_Var_Pop_Order_By>;
  var_samp?: InputMaybe<DomainNote_Var_Samp_Order_By>;
  variance?: InputMaybe<DomainNote_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "shepherd_domainnote" */
export type DomainNote_Arr_Rel_Insert_Input = {
  data: Array<DomainNote_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<DomainNote_On_Conflict>;
};

/** aggregate avg on columns */
export type DomainNote_Avg_Fields = {
  __typename?: 'domainNote_avg_fields';
  domainId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "shepherd_domainnote" */
export type DomainNote_Avg_Order_By = {
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "shepherd_domainnote". All fields are combined with a logical 'AND'. */
export type DomainNote_Bool_Exp = {
  _and?: InputMaybe<Array<DomainNote_Bool_Exp>>;
  _not?: InputMaybe<DomainNote_Bool_Exp>;
  _or?: InputMaybe<Array<DomainNote_Bool_Exp>>;
  domain?: InputMaybe<Domain_Bool_Exp>;
  domainId?: InputMaybe<Bigint_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  operatorId?: InputMaybe<Bigint_Comparison_Exp>;
  timestamp?: InputMaybe<Date_Comparison_Exp>;
  user?: InputMaybe<User_Bool_Exp>;
};

/** unique or primary key constraints on table "shepherd_domainnote" */
export enum DomainNote_Constraint {
  /** unique or primary key constraint on columns "id" */
  ShepherdDomainnotePkey = 'shepherd_domainnote_pkey'
}

/** input type for incrementing numeric columns in table "shepherd_domainnote" */
export type DomainNote_Inc_Input = {
  domainId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "shepherd_domainnote" */
export type DomainNote_Insert_Input = {
  domain?: InputMaybe<Domain_Obj_Rel_Insert_Input>;
  domainId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  timestamp?: InputMaybe<Scalars['date']['input']>;
  user?: InputMaybe<User_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type DomainNote_Max_Fields = {
  __typename?: 'domainNote_max_fields';
  domainId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  timestamp?: Maybe<Scalars['date']['output']>;
};

/** order by max() on columns of table "shepherd_domainnote" */
export type DomainNote_Max_Order_By = {
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type DomainNote_Min_Fields = {
  __typename?: 'domainNote_min_fields';
  domainId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  timestamp?: Maybe<Scalars['date']['output']>;
};

/** order by min() on columns of table "shepherd_domainnote" */
export type DomainNote_Min_Order_By = {
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "shepherd_domainnote" */
export type DomainNote_Mutation_Response = {
  __typename?: 'domainNote_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<DomainNote>;
};

/** on_conflict condition type for table "shepherd_domainnote" */
export type DomainNote_On_Conflict = {
  constraint: DomainNote_Constraint;
  update_columns?: Array<DomainNote_Update_Column>;
  where?: InputMaybe<DomainNote_Bool_Exp>;
};

/** Ordering options when selecting data from "shepherd_domainnote". */
export type DomainNote_Order_By = {
  domain?: InputMaybe<Domain_Order_By>;
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  user?: InputMaybe<User_Order_By>;
};

/** primary key columns input for table: shepherd_domainnote */
export type DomainNote_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "shepherd_domainnote" */
export enum DomainNote_Select_Column {
  /** column name */
  DomainId = 'domainId',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  OperatorId = 'operatorId',
  /** column name */
  Timestamp = 'timestamp'
}

/** input type for updating data in table "shepherd_domainnote" */
export type DomainNote_Set_Input = {
  domainId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  timestamp?: InputMaybe<Scalars['date']['input']>;
};

/** aggregate stddev on columns */
export type DomainNote_Stddev_Fields = {
  __typename?: 'domainNote_stddev_fields';
  domainId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "shepherd_domainnote" */
export type DomainNote_Stddev_Order_By = {
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type DomainNote_Stddev_Pop_Fields = {
  __typename?: 'domainNote_stddev_pop_fields';
  domainId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "shepherd_domainnote" */
export type DomainNote_Stddev_Pop_Order_By = {
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type DomainNote_Stddev_Samp_Fields = {
  __typename?: 'domainNote_stddev_samp_fields';
  domainId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "shepherd_domainnote" */
export type DomainNote_Stddev_Samp_Order_By = {
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "domainNote" */
export type DomainNote_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: DomainNote_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type DomainNote_Stream_Cursor_Value_Input = {
  domainId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  timestamp?: InputMaybe<Scalars['date']['input']>;
};

/** aggregate sum on columns */
export type DomainNote_Sum_Fields = {
  __typename?: 'domainNote_sum_fields';
  domainId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "shepherd_domainnote" */
export type DomainNote_Sum_Order_By = {
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** update columns of table "shepherd_domainnote" */
export enum DomainNote_Update_Column {
  /** column name */
  DomainId = 'domainId',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  OperatorId = 'operatorId',
  /** column name */
  Timestamp = 'timestamp'
}

export type DomainNote_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<DomainNote_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<DomainNote_Set_Input>;
  /** filter the rows which have to be updated */
  where: DomainNote_Bool_Exp;
};

/** aggregate var_pop on columns */
export type DomainNote_Var_Pop_Fields = {
  __typename?: 'domainNote_var_pop_fields';
  domainId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "shepherd_domainnote" */
export type DomainNote_Var_Pop_Order_By = {
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type DomainNote_Var_Samp_Fields = {
  __typename?: 'domainNote_var_samp_fields';
  domainId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "shepherd_domainnote" */
export type DomainNote_Var_Samp_Order_By = {
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type DomainNote_Variance_Fields = {
  __typename?: 'domainNote_variance_fields';
  domainId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "shepherd_domainnote" */
export type DomainNote_Variance_Order_By = {
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** columns and relationships of "shepherd_domainserverconnection" */
export type DomainServerConnection = {
  __typename?: 'domainServerConnection';
  /** An object relationship */
  cloudServer?: Maybe<CloudServer>;
  /** An object relationship */
  domain: DomainCheckout;
  domainId: Scalars['bigint']['output'];
  endpoint: Scalars['String']['output'];
  id: Scalars['bigint']['output'];
  /** An object relationship */
  project: Project;
  projectId: Scalars['bigint']['output'];
  /** An object relationship */
  staticServer?: Maybe<ServerCheckout>;
  staticServerId?: Maybe<Scalars['bigint']['output']>;
  subdomain: Scalars['String']['output'];
  transientServerId?: Maybe<Scalars['bigint']['output']>;
};

/** aggregated selection of "shepherd_domainserverconnection" */
export type DomainServerConnection_Aggregate = {
  __typename?: 'domainServerConnection_aggregate';
  aggregate?: Maybe<DomainServerConnection_Aggregate_Fields>;
  nodes: Array<DomainServerConnection>;
};

export type DomainServerConnection_Aggregate_Bool_Exp = {
  count?: InputMaybe<DomainServerConnection_Aggregate_Bool_Exp_Count>;
};

export type DomainServerConnection_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<DomainServerConnection_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<DomainServerConnection_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "shepherd_domainserverconnection" */
export type DomainServerConnection_Aggregate_Fields = {
  __typename?: 'domainServerConnection_aggregate_fields';
  avg?: Maybe<DomainServerConnection_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<DomainServerConnection_Max_Fields>;
  min?: Maybe<DomainServerConnection_Min_Fields>;
  stddev?: Maybe<DomainServerConnection_Stddev_Fields>;
  stddev_pop?: Maybe<DomainServerConnection_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<DomainServerConnection_Stddev_Samp_Fields>;
  sum?: Maybe<DomainServerConnection_Sum_Fields>;
  var_pop?: Maybe<DomainServerConnection_Var_Pop_Fields>;
  var_samp?: Maybe<DomainServerConnection_Var_Samp_Fields>;
  variance?: Maybe<DomainServerConnection_Variance_Fields>;
};


/** aggregate fields of "shepherd_domainserverconnection" */
export type DomainServerConnection_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<DomainServerConnection_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "shepherd_domainserverconnection" */
export type DomainServerConnection_Aggregate_Order_By = {
  avg?: InputMaybe<DomainServerConnection_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<DomainServerConnection_Max_Order_By>;
  min?: InputMaybe<DomainServerConnection_Min_Order_By>;
  stddev?: InputMaybe<DomainServerConnection_Stddev_Order_By>;
  stddev_pop?: InputMaybe<DomainServerConnection_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<DomainServerConnection_Stddev_Samp_Order_By>;
  sum?: InputMaybe<DomainServerConnection_Sum_Order_By>;
  var_pop?: InputMaybe<DomainServerConnection_Var_Pop_Order_By>;
  var_samp?: InputMaybe<DomainServerConnection_Var_Samp_Order_By>;
  variance?: InputMaybe<DomainServerConnection_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "shepherd_domainserverconnection" */
export type DomainServerConnection_Arr_Rel_Insert_Input = {
  data: Array<DomainServerConnection_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<DomainServerConnection_On_Conflict>;
};

/** aggregate avg on columns */
export type DomainServerConnection_Avg_Fields = {
  __typename?: 'domainServerConnection_avg_fields';
  domainId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  staticServerId?: Maybe<Scalars['Float']['output']>;
  transientServerId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "shepherd_domainserverconnection" */
export type DomainServerConnection_Avg_Order_By = {
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  staticServerId?: InputMaybe<Order_By>;
  transientServerId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "shepherd_domainserverconnection". All fields are combined with a logical 'AND'. */
export type DomainServerConnection_Bool_Exp = {
  _and?: InputMaybe<Array<DomainServerConnection_Bool_Exp>>;
  _not?: InputMaybe<DomainServerConnection_Bool_Exp>;
  _or?: InputMaybe<Array<DomainServerConnection_Bool_Exp>>;
  cloudServer?: InputMaybe<CloudServer_Bool_Exp>;
  domain?: InputMaybe<DomainCheckout_Bool_Exp>;
  domainId?: InputMaybe<Bigint_Comparison_Exp>;
  endpoint?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  project?: InputMaybe<Project_Bool_Exp>;
  projectId?: InputMaybe<Bigint_Comparison_Exp>;
  staticServer?: InputMaybe<ServerCheckout_Bool_Exp>;
  staticServerId?: InputMaybe<Bigint_Comparison_Exp>;
  subdomain?: InputMaybe<String_Comparison_Exp>;
  transientServerId?: InputMaybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "shepherd_domainserverconnection" */
export enum DomainServerConnection_Constraint {
  /** unique or primary key constraint on columns "id" */
  ShepherdDomainserverconnectionPkey = 'shepherd_domainserverconnection_pkey'
}

/** input type for incrementing numeric columns in table "shepherd_domainserverconnection" */
export type DomainServerConnection_Inc_Input = {
  domainId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  staticServerId?: InputMaybe<Scalars['bigint']['input']>;
  transientServerId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "shepherd_domainserverconnection" */
export type DomainServerConnection_Insert_Input = {
  cloudServer?: InputMaybe<CloudServer_Obj_Rel_Insert_Input>;
  domain?: InputMaybe<DomainCheckout_Obj_Rel_Insert_Input>;
  domainId?: InputMaybe<Scalars['bigint']['input']>;
  endpoint?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  project?: InputMaybe<Project_Obj_Rel_Insert_Input>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  staticServer?: InputMaybe<ServerCheckout_Obj_Rel_Insert_Input>;
  staticServerId?: InputMaybe<Scalars['bigint']['input']>;
  subdomain?: InputMaybe<Scalars['String']['input']>;
  transientServerId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate max on columns */
export type DomainServerConnection_Max_Fields = {
  __typename?: 'domainServerConnection_max_fields';
  domainId?: Maybe<Scalars['bigint']['output']>;
  endpoint?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  staticServerId?: Maybe<Scalars['bigint']['output']>;
  subdomain?: Maybe<Scalars['String']['output']>;
  transientServerId?: Maybe<Scalars['bigint']['output']>;
};

/** order by max() on columns of table "shepherd_domainserverconnection" */
export type DomainServerConnection_Max_Order_By = {
  domainId?: InputMaybe<Order_By>;
  endpoint?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  staticServerId?: InputMaybe<Order_By>;
  subdomain?: InputMaybe<Order_By>;
  transientServerId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type DomainServerConnection_Min_Fields = {
  __typename?: 'domainServerConnection_min_fields';
  domainId?: Maybe<Scalars['bigint']['output']>;
  endpoint?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  staticServerId?: Maybe<Scalars['bigint']['output']>;
  subdomain?: Maybe<Scalars['String']['output']>;
  transientServerId?: Maybe<Scalars['bigint']['output']>;
};

/** order by min() on columns of table "shepherd_domainserverconnection" */
export type DomainServerConnection_Min_Order_By = {
  domainId?: InputMaybe<Order_By>;
  endpoint?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  staticServerId?: InputMaybe<Order_By>;
  subdomain?: InputMaybe<Order_By>;
  transientServerId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "shepherd_domainserverconnection" */
export type DomainServerConnection_Mutation_Response = {
  __typename?: 'domainServerConnection_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<DomainServerConnection>;
};

/** on_conflict condition type for table "shepherd_domainserverconnection" */
export type DomainServerConnection_On_Conflict = {
  constraint: DomainServerConnection_Constraint;
  update_columns?: Array<DomainServerConnection_Update_Column>;
  where?: InputMaybe<DomainServerConnection_Bool_Exp>;
};

/** Ordering options when selecting data from "shepherd_domainserverconnection". */
export type DomainServerConnection_Order_By = {
  cloudServer?: InputMaybe<CloudServer_Order_By>;
  domain?: InputMaybe<DomainCheckout_Order_By>;
  domainId?: InputMaybe<Order_By>;
  endpoint?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project?: InputMaybe<Project_Order_By>;
  projectId?: InputMaybe<Order_By>;
  staticServer?: InputMaybe<ServerCheckout_Order_By>;
  staticServerId?: InputMaybe<Order_By>;
  subdomain?: InputMaybe<Order_By>;
  transientServerId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: shepherd_domainserverconnection */
export type DomainServerConnection_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "shepherd_domainserverconnection" */
export enum DomainServerConnection_Select_Column {
  /** column name */
  DomainId = 'domainId',
  /** column name */
  Endpoint = 'endpoint',
  /** column name */
  Id = 'id',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  StaticServerId = 'staticServerId',
  /** column name */
  Subdomain = 'subdomain',
  /** column name */
  TransientServerId = 'transientServerId'
}

/** input type for updating data in table "shepherd_domainserverconnection" */
export type DomainServerConnection_Set_Input = {
  domainId?: InputMaybe<Scalars['bigint']['input']>;
  endpoint?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  staticServerId?: InputMaybe<Scalars['bigint']['input']>;
  subdomain?: InputMaybe<Scalars['String']['input']>;
  transientServerId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate stddev on columns */
export type DomainServerConnection_Stddev_Fields = {
  __typename?: 'domainServerConnection_stddev_fields';
  domainId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  staticServerId?: Maybe<Scalars['Float']['output']>;
  transientServerId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "shepherd_domainserverconnection" */
export type DomainServerConnection_Stddev_Order_By = {
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  staticServerId?: InputMaybe<Order_By>;
  transientServerId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type DomainServerConnection_Stddev_Pop_Fields = {
  __typename?: 'domainServerConnection_stddev_pop_fields';
  domainId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  staticServerId?: Maybe<Scalars['Float']['output']>;
  transientServerId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "shepherd_domainserverconnection" */
export type DomainServerConnection_Stddev_Pop_Order_By = {
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  staticServerId?: InputMaybe<Order_By>;
  transientServerId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type DomainServerConnection_Stddev_Samp_Fields = {
  __typename?: 'domainServerConnection_stddev_samp_fields';
  domainId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  staticServerId?: Maybe<Scalars['Float']['output']>;
  transientServerId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "shepherd_domainserverconnection" */
export type DomainServerConnection_Stddev_Samp_Order_By = {
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  staticServerId?: InputMaybe<Order_By>;
  transientServerId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "domainServerConnection" */
export type DomainServerConnection_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: DomainServerConnection_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type DomainServerConnection_Stream_Cursor_Value_Input = {
  domainId?: InputMaybe<Scalars['bigint']['input']>;
  endpoint?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  staticServerId?: InputMaybe<Scalars['bigint']['input']>;
  subdomain?: InputMaybe<Scalars['String']['input']>;
  transientServerId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type DomainServerConnection_Sum_Fields = {
  __typename?: 'domainServerConnection_sum_fields';
  domainId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  staticServerId?: Maybe<Scalars['bigint']['output']>;
  transientServerId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "shepherd_domainserverconnection" */
export type DomainServerConnection_Sum_Order_By = {
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  staticServerId?: InputMaybe<Order_By>;
  transientServerId?: InputMaybe<Order_By>;
};

/** update columns of table "shepherd_domainserverconnection" */
export enum DomainServerConnection_Update_Column {
  /** column name */
  DomainId = 'domainId',
  /** column name */
  Endpoint = 'endpoint',
  /** column name */
  Id = 'id',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  StaticServerId = 'staticServerId',
  /** column name */
  Subdomain = 'subdomain',
  /** column name */
  TransientServerId = 'transientServerId'
}

export type DomainServerConnection_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<DomainServerConnection_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<DomainServerConnection_Set_Input>;
  /** filter the rows which have to be updated */
  where: DomainServerConnection_Bool_Exp;
};

/** aggregate var_pop on columns */
export type DomainServerConnection_Var_Pop_Fields = {
  __typename?: 'domainServerConnection_var_pop_fields';
  domainId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  staticServerId?: Maybe<Scalars['Float']['output']>;
  transientServerId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "shepherd_domainserverconnection" */
export type DomainServerConnection_Var_Pop_Order_By = {
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  staticServerId?: InputMaybe<Order_By>;
  transientServerId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type DomainServerConnection_Var_Samp_Fields = {
  __typename?: 'domainServerConnection_var_samp_fields';
  domainId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  staticServerId?: Maybe<Scalars['Float']['output']>;
  transientServerId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "shepherd_domainserverconnection" */
export type DomainServerConnection_Var_Samp_Order_By = {
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  staticServerId?: InputMaybe<Order_By>;
  transientServerId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type DomainServerConnection_Variance_Fields = {
  __typename?: 'domainServerConnection_variance_fields';
  domainId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  staticServerId?: Maybe<Scalars['Float']['output']>;
  transientServerId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "shepherd_domainserverconnection" */
export type DomainServerConnection_Variance_Order_By = {
  domainId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  staticServerId?: InputMaybe<Order_By>;
  transientServerId?: InputMaybe<Order_By>;
};

/** columns and relationships of "shepherd_domainstatus" */
export type DomainStatus = {
  __typename?: 'domainStatus';
  domainStatus: Scalars['String']['output'];
  /** An array relationship */
  domains: Array<Domain>;
  /** An aggregate relationship */
  domains_aggregate: Domain_Aggregate;
  id: Scalars['bigint']['output'];
};


/** columns and relationships of "shepherd_domainstatus" */
export type DomainStatusDomainsArgs = {
  distinct_on?: InputMaybe<Array<Domain_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Domain_Order_By>>;
  where?: InputMaybe<Domain_Bool_Exp>;
};


/** columns and relationships of "shepherd_domainstatus" */
export type DomainStatusDomains_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Domain_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Domain_Order_By>>;
  where?: InputMaybe<Domain_Bool_Exp>;
};

/** aggregated selection of "shepherd_domainstatus" */
export type DomainStatus_Aggregate = {
  __typename?: 'domainStatus_aggregate';
  aggregate?: Maybe<DomainStatus_Aggregate_Fields>;
  nodes: Array<DomainStatus>;
};

/** aggregate fields of "shepherd_domainstatus" */
export type DomainStatus_Aggregate_Fields = {
  __typename?: 'domainStatus_aggregate_fields';
  avg?: Maybe<DomainStatus_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<DomainStatus_Max_Fields>;
  min?: Maybe<DomainStatus_Min_Fields>;
  stddev?: Maybe<DomainStatus_Stddev_Fields>;
  stddev_pop?: Maybe<DomainStatus_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<DomainStatus_Stddev_Samp_Fields>;
  sum?: Maybe<DomainStatus_Sum_Fields>;
  var_pop?: Maybe<DomainStatus_Var_Pop_Fields>;
  var_samp?: Maybe<DomainStatus_Var_Samp_Fields>;
  variance?: Maybe<DomainStatus_Variance_Fields>;
};


/** aggregate fields of "shepherd_domainstatus" */
export type DomainStatus_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<DomainStatus_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type DomainStatus_Avg_Fields = {
  __typename?: 'domainStatus_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "shepherd_domainstatus". All fields are combined with a logical 'AND'. */
export type DomainStatus_Bool_Exp = {
  _and?: InputMaybe<Array<DomainStatus_Bool_Exp>>;
  _not?: InputMaybe<DomainStatus_Bool_Exp>;
  _or?: InputMaybe<Array<DomainStatus_Bool_Exp>>;
  domainStatus?: InputMaybe<String_Comparison_Exp>;
  domains?: InputMaybe<Domain_Bool_Exp>;
  domains_aggregate?: InputMaybe<Domain_Aggregate_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "shepherd_domainstatus" */
export enum DomainStatus_Constraint {
  /** unique or primary key constraint on columns "domain_status" */
  ShepherdDomainstatusDomainStatusKey = 'shepherd_domainstatus_domain_status_key',
  /** unique or primary key constraint on columns "id" */
  ShepherdDomainstatusPkey = 'shepherd_domainstatus_pkey'
}

/** input type for incrementing numeric columns in table "shepherd_domainstatus" */
export type DomainStatus_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "shepherd_domainstatus" */
export type DomainStatus_Insert_Input = {
  domainStatus?: InputMaybe<Scalars['String']['input']>;
  domains?: InputMaybe<Domain_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate max on columns */
export type DomainStatus_Max_Fields = {
  __typename?: 'domainStatus_max_fields';
  domainStatus?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
};

/** aggregate min on columns */
export type DomainStatus_Min_Fields = {
  __typename?: 'domainStatus_min_fields';
  domainStatus?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
};

/** response of any mutation on the table "shepherd_domainstatus" */
export type DomainStatus_Mutation_Response = {
  __typename?: 'domainStatus_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<DomainStatus>;
};

/** input type for inserting object relation for remote table "shepherd_domainstatus" */
export type DomainStatus_Obj_Rel_Insert_Input = {
  data: DomainStatus_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<DomainStatus_On_Conflict>;
};

/** on_conflict condition type for table "shepherd_domainstatus" */
export type DomainStatus_On_Conflict = {
  constraint: DomainStatus_Constraint;
  update_columns?: Array<DomainStatus_Update_Column>;
  where?: InputMaybe<DomainStatus_Bool_Exp>;
};

/** Ordering options when selecting data from "shepherd_domainstatus". */
export type DomainStatus_Order_By = {
  domainStatus?: InputMaybe<Order_By>;
  domains_aggregate?: InputMaybe<Domain_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: shepherd_domainstatus */
export type DomainStatus_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "shepherd_domainstatus" */
export enum DomainStatus_Select_Column {
  /** column name */
  DomainStatus = 'domainStatus',
  /** column name */
  Id = 'id'
}

/** input type for updating data in table "shepherd_domainstatus" */
export type DomainStatus_Set_Input = {
  domainStatus?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate stddev on columns */
export type DomainStatus_Stddev_Fields = {
  __typename?: 'domainStatus_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type DomainStatus_Stddev_Pop_Fields = {
  __typename?: 'domainStatus_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type DomainStatus_Stddev_Samp_Fields = {
  __typename?: 'domainStatus_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "domainStatus" */
export type DomainStatus_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: DomainStatus_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type DomainStatus_Stream_Cursor_Value_Input = {
  domainStatus?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type DomainStatus_Sum_Fields = {
  __typename?: 'domainStatus_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
};

/** update columns of table "shepherd_domainstatus" */
export enum DomainStatus_Update_Column {
  /** column name */
  DomainStatus = 'domainStatus',
  /** column name */
  Id = 'id'
}

export type DomainStatus_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<DomainStatus_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<DomainStatus_Set_Input>;
  /** filter the rows which have to be updated */
  where: DomainStatus_Bool_Exp;
};

/** aggregate var_pop on columns */
export type DomainStatus_Var_Pop_Fields = {
  __typename?: 'domainStatus_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type DomainStatus_Var_Samp_Fields = {
  __typename?: 'domainStatus_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type DomainStatus_Variance_Fields = {
  __typename?: 'domainStatus_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregated selection of "shepherd_domain" */
export type Domain_Aggregate = {
  __typename?: 'domain_aggregate';
  aggregate?: Maybe<Domain_Aggregate_Fields>;
  nodes: Array<Domain>;
};

export type Domain_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Domain_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Domain_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Domain_Aggregate_Bool_Exp_Count>;
};

export type Domain_Aggregate_Bool_Exp_Bool_And = {
  arguments: Domain_Select_Column_Domain_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Domain_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Domain_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Domain_Select_Column_Domain_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Domain_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Domain_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Domain_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Domain_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "shepherd_domain" */
export type Domain_Aggregate_Fields = {
  __typename?: 'domain_aggregate_fields';
  avg?: Maybe<Domain_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Domain_Max_Fields>;
  min?: Maybe<Domain_Min_Fields>;
  stddev?: Maybe<Domain_Stddev_Fields>;
  stddev_pop?: Maybe<Domain_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Domain_Stddev_Samp_Fields>;
  sum?: Maybe<Domain_Sum_Fields>;
  var_pop?: Maybe<Domain_Var_Pop_Fields>;
  var_samp?: Maybe<Domain_Var_Samp_Fields>;
  variance?: Maybe<Domain_Variance_Fields>;
};


/** aggregate fields of "shepherd_domain" */
export type Domain_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Domain_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "shepherd_domain" */
export type Domain_Aggregate_Order_By = {
  avg?: InputMaybe<Domain_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Domain_Max_Order_By>;
  min?: InputMaybe<Domain_Min_Order_By>;
  stddev?: InputMaybe<Domain_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Domain_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Domain_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Domain_Sum_Order_By>;
  var_pop?: InputMaybe<Domain_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Domain_Var_Samp_Order_By>;
  variance?: InputMaybe<Domain_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Domain_Append_Input = {
  categorization?: InputMaybe<Scalars['jsonb']['input']>;
  dns?: InputMaybe<Scalars['jsonb']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "shepherd_domain" */
export type Domain_Arr_Rel_Insert_Input = {
  data: Array<Domain_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Domain_On_Conflict>;
};

/** aggregate avg on columns */
export type Domain_Avg_Fields = {
  __typename?: 'domain_avg_fields';
  domainStatusId?: Maybe<Scalars['Float']['output']>;
  healthStatusId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  lastUsedById?: Maybe<Scalars['Float']['output']>;
  whoisStatusId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "shepherd_domain" */
export type Domain_Avg_Order_By = {
  domainStatusId?: InputMaybe<Order_By>;
  healthStatusId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastUsedById?: InputMaybe<Order_By>;
  whoisStatusId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "shepherd_domain". All fields are combined with a logical 'AND'. */
export type Domain_Bool_Exp = {
  _and?: InputMaybe<Array<Domain_Bool_Exp>>;
  _not?: InputMaybe<Domain_Bool_Exp>;
  _or?: InputMaybe<Array<Domain_Bool_Exp>>;
  autoRenew?: InputMaybe<Boolean_Comparison_Exp>;
  burned_explanation?: InputMaybe<String_Comparison_Exp>;
  categorization?: InputMaybe<Jsonb_Comparison_Exp>;
  checkouts?: InputMaybe<DomainCheckout_Bool_Exp>;
  checkouts_aggregate?: InputMaybe<DomainCheckout_Aggregate_Bool_Exp>;
  comments?: InputMaybe<DomainNote_Bool_Exp>;
  comments_aggregate?: InputMaybe<DomainNote_Aggregate_Bool_Exp>;
  creation?: InputMaybe<Date_Comparison_Exp>;
  dns?: InputMaybe<Jsonb_Comparison_Exp>;
  domainStatus?: InputMaybe<DomainStatus_Bool_Exp>;
  domainStatusId?: InputMaybe<Bigint_Comparison_Exp>;
  expiration?: InputMaybe<Date_Comparison_Exp>;
  expired?: InputMaybe<Boolean_Comparison_Exp>;
  extraFields?: InputMaybe<Jsonb_Comparison_Exp>;
  healthStatus?: InputMaybe<HealthStatus_Bool_Exp>;
  healthStatusId?: InputMaybe<Bigint_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  lastHealthCheck?: InputMaybe<Date_Comparison_Exp>;
  lastUsedById?: InputMaybe<Bigint_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  registrar?: InputMaybe<String_Comparison_Exp>;
  resetDns?: InputMaybe<Boolean_Comparison_Exp>;
  user?: InputMaybe<User_Bool_Exp>;
  vtPermalink?: InputMaybe<String_Comparison_Exp>;
  whoisStatus?: InputMaybe<WhoisStatus_Bool_Exp>;
  whoisStatusId?: InputMaybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "shepherd_domain" */
export enum Domain_Constraint {
  /** unique or primary key constraint on columns "name" */
  ShepherdDomainNameKey = 'shepherd_domain_name_key',
  /** unique or primary key constraint on columns "id" */
  ShepherdDomainPkey = 'shepherd_domain_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Domain_Delete_At_Path_Input = {
  categorization?: InputMaybe<Array<Scalars['String']['input']>>;
  dns?: InputMaybe<Array<Scalars['String']['input']>>;
  extraFields?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Domain_Delete_Elem_Input = {
  categorization?: InputMaybe<Scalars['Int']['input']>;
  dns?: InputMaybe<Scalars['Int']['input']>;
  extraFields?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Domain_Delete_Key_Input = {
  categorization?: InputMaybe<Scalars['String']['input']>;
  dns?: InputMaybe<Scalars['String']['input']>;
  extraFields?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "shepherd_domain" */
export type Domain_Inc_Input = {
  domainStatusId?: InputMaybe<Scalars['bigint']['input']>;
  healthStatusId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  lastUsedById?: InputMaybe<Scalars['bigint']['input']>;
  whoisStatusId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "shepherd_domain" */
export type Domain_Insert_Input = {
  autoRenew?: InputMaybe<Scalars['Boolean']['input']>;
  burned_explanation?: InputMaybe<Scalars['String']['input']>;
  categorization?: InputMaybe<Scalars['jsonb']['input']>;
  checkouts?: InputMaybe<DomainCheckout_Arr_Rel_Insert_Input>;
  comments?: InputMaybe<DomainNote_Arr_Rel_Insert_Input>;
  creation?: InputMaybe<Scalars['date']['input']>;
  dns?: InputMaybe<Scalars['jsonb']['input']>;
  domainStatus?: InputMaybe<DomainStatus_Obj_Rel_Insert_Input>;
  domainStatusId?: InputMaybe<Scalars['bigint']['input']>;
  expiration?: InputMaybe<Scalars['date']['input']>;
  expired?: InputMaybe<Scalars['Boolean']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  healthStatus?: InputMaybe<HealthStatus_Obj_Rel_Insert_Input>;
  healthStatusId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  lastHealthCheck?: InputMaybe<Scalars['date']['input']>;
  lastUsedById?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  registrar?: InputMaybe<Scalars['String']['input']>;
  resetDns?: InputMaybe<Scalars['Boolean']['input']>;
  user?: InputMaybe<User_Obj_Rel_Insert_Input>;
  vtPermalink?: InputMaybe<Scalars['String']['input']>;
  whoisStatus?: InputMaybe<WhoisStatus_Obj_Rel_Insert_Input>;
  whoisStatusId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate max on columns */
export type Domain_Max_Fields = {
  __typename?: 'domain_max_fields';
  burned_explanation?: Maybe<Scalars['String']['output']>;
  creation?: Maybe<Scalars['date']['output']>;
  domainStatusId?: Maybe<Scalars['bigint']['output']>;
  expiration?: Maybe<Scalars['date']['output']>;
  healthStatusId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  lastHealthCheck?: Maybe<Scalars['date']['output']>;
  lastUsedById?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  registrar?: Maybe<Scalars['String']['output']>;
  vtPermalink?: Maybe<Scalars['String']['output']>;
  whoisStatusId?: Maybe<Scalars['bigint']['output']>;
};

/** order by max() on columns of table "shepherd_domain" */
export type Domain_Max_Order_By = {
  burned_explanation?: InputMaybe<Order_By>;
  creation?: InputMaybe<Order_By>;
  domainStatusId?: InputMaybe<Order_By>;
  expiration?: InputMaybe<Order_By>;
  healthStatusId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastHealthCheck?: InputMaybe<Order_By>;
  lastUsedById?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  registrar?: InputMaybe<Order_By>;
  vtPermalink?: InputMaybe<Order_By>;
  whoisStatusId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Domain_Min_Fields = {
  __typename?: 'domain_min_fields';
  burned_explanation?: Maybe<Scalars['String']['output']>;
  creation?: Maybe<Scalars['date']['output']>;
  domainStatusId?: Maybe<Scalars['bigint']['output']>;
  expiration?: Maybe<Scalars['date']['output']>;
  healthStatusId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  lastHealthCheck?: Maybe<Scalars['date']['output']>;
  lastUsedById?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  registrar?: Maybe<Scalars['String']['output']>;
  vtPermalink?: Maybe<Scalars['String']['output']>;
  whoisStatusId?: Maybe<Scalars['bigint']['output']>;
};

/** order by min() on columns of table "shepherd_domain" */
export type Domain_Min_Order_By = {
  burned_explanation?: InputMaybe<Order_By>;
  creation?: InputMaybe<Order_By>;
  domainStatusId?: InputMaybe<Order_By>;
  expiration?: InputMaybe<Order_By>;
  healthStatusId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastHealthCheck?: InputMaybe<Order_By>;
  lastUsedById?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  registrar?: InputMaybe<Order_By>;
  vtPermalink?: InputMaybe<Order_By>;
  whoisStatusId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "shepherd_domain" */
export type Domain_Mutation_Response = {
  __typename?: 'domain_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Domain>;
};

/** input type for inserting object relation for remote table "shepherd_domain" */
export type Domain_Obj_Rel_Insert_Input = {
  data: Domain_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Domain_On_Conflict>;
};

/** on_conflict condition type for table "shepherd_domain" */
export type Domain_On_Conflict = {
  constraint: Domain_Constraint;
  update_columns?: Array<Domain_Update_Column>;
  where?: InputMaybe<Domain_Bool_Exp>;
};

/** Ordering options when selecting data from "shepherd_domain". */
export type Domain_Order_By = {
  autoRenew?: InputMaybe<Order_By>;
  burned_explanation?: InputMaybe<Order_By>;
  categorization?: InputMaybe<Order_By>;
  checkouts_aggregate?: InputMaybe<DomainCheckout_Aggregate_Order_By>;
  comments_aggregate?: InputMaybe<DomainNote_Aggregate_Order_By>;
  creation?: InputMaybe<Order_By>;
  dns?: InputMaybe<Order_By>;
  domainStatus?: InputMaybe<DomainStatus_Order_By>;
  domainStatusId?: InputMaybe<Order_By>;
  expiration?: InputMaybe<Order_By>;
  expired?: InputMaybe<Order_By>;
  extraFields?: InputMaybe<Order_By>;
  healthStatus?: InputMaybe<HealthStatus_Order_By>;
  healthStatusId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastHealthCheck?: InputMaybe<Order_By>;
  lastUsedById?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  registrar?: InputMaybe<Order_By>;
  resetDns?: InputMaybe<Order_By>;
  user?: InputMaybe<User_Order_By>;
  vtPermalink?: InputMaybe<Order_By>;
  whoisStatus?: InputMaybe<WhoisStatus_Order_By>;
  whoisStatusId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: shepherd_domain */
export type Domain_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Domain_Prepend_Input = {
  categorization?: InputMaybe<Scalars['jsonb']['input']>;
  dns?: InputMaybe<Scalars['jsonb']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "shepherd_domain" */
export enum Domain_Select_Column {
  /** column name */
  AutoRenew = 'autoRenew',
  /** column name */
  BurnedExplanation = 'burned_explanation',
  /** column name */
  Categorization = 'categorization',
  /** column name */
  Creation = 'creation',
  /** column name */
  Dns = 'dns',
  /** column name */
  DomainStatusId = 'domainStatusId',
  /** column name */
  Expiration = 'expiration',
  /** column name */
  Expired = 'expired',
  /** column name */
  ExtraFields = 'extraFields',
  /** column name */
  HealthStatusId = 'healthStatusId',
  /** column name */
  Id = 'id',
  /** column name */
  LastHealthCheck = 'lastHealthCheck',
  /** column name */
  LastUsedById = 'lastUsedById',
  /** column name */
  Name = 'name',
  /** column name */
  Note = 'note',
  /** column name */
  Registrar = 'registrar',
  /** column name */
  ResetDns = 'resetDns',
  /** column name */
  VtPermalink = 'vtPermalink',
  /** column name */
  WhoisStatusId = 'whoisStatusId'
}

/** select "domain_aggregate_bool_exp_bool_and_arguments_columns" columns of table "shepherd_domain" */
export enum Domain_Select_Column_Domain_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  AutoRenew = 'autoRenew',
  /** column name */
  Expired = 'expired',
  /** column name */
  ResetDns = 'resetDns'
}

/** select "domain_aggregate_bool_exp_bool_or_arguments_columns" columns of table "shepherd_domain" */
export enum Domain_Select_Column_Domain_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  AutoRenew = 'autoRenew',
  /** column name */
  Expired = 'expired',
  /** column name */
  ResetDns = 'resetDns'
}

/** input type for updating data in table "shepherd_domain" */
export type Domain_Set_Input = {
  autoRenew?: InputMaybe<Scalars['Boolean']['input']>;
  burned_explanation?: InputMaybe<Scalars['String']['input']>;
  categorization?: InputMaybe<Scalars['jsonb']['input']>;
  creation?: InputMaybe<Scalars['date']['input']>;
  dns?: InputMaybe<Scalars['jsonb']['input']>;
  domainStatusId?: InputMaybe<Scalars['bigint']['input']>;
  expiration?: InputMaybe<Scalars['date']['input']>;
  expired?: InputMaybe<Scalars['Boolean']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  healthStatusId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  lastHealthCheck?: InputMaybe<Scalars['date']['input']>;
  lastUsedById?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  registrar?: InputMaybe<Scalars['String']['input']>;
  resetDns?: InputMaybe<Scalars['Boolean']['input']>;
  vtPermalink?: InputMaybe<Scalars['String']['input']>;
  whoisStatusId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate stddev on columns */
export type Domain_Stddev_Fields = {
  __typename?: 'domain_stddev_fields';
  domainStatusId?: Maybe<Scalars['Float']['output']>;
  healthStatusId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  lastUsedById?: Maybe<Scalars['Float']['output']>;
  whoisStatusId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "shepherd_domain" */
export type Domain_Stddev_Order_By = {
  domainStatusId?: InputMaybe<Order_By>;
  healthStatusId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastUsedById?: InputMaybe<Order_By>;
  whoisStatusId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Domain_Stddev_Pop_Fields = {
  __typename?: 'domain_stddev_pop_fields';
  domainStatusId?: Maybe<Scalars['Float']['output']>;
  healthStatusId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  lastUsedById?: Maybe<Scalars['Float']['output']>;
  whoisStatusId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "shepherd_domain" */
export type Domain_Stddev_Pop_Order_By = {
  domainStatusId?: InputMaybe<Order_By>;
  healthStatusId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastUsedById?: InputMaybe<Order_By>;
  whoisStatusId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Domain_Stddev_Samp_Fields = {
  __typename?: 'domain_stddev_samp_fields';
  domainStatusId?: Maybe<Scalars['Float']['output']>;
  healthStatusId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  lastUsedById?: Maybe<Scalars['Float']['output']>;
  whoisStatusId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "shepherd_domain" */
export type Domain_Stddev_Samp_Order_By = {
  domainStatusId?: InputMaybe<Order_By>;
  healthStatusId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastUsedById?: InputMaybe<Order_By>;
  whoisStatusId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "domain" */
export type Domain_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Domain_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Domain_Stream_Cursor_Value_Input = {
  autoRenew?: InputMaybe<Scalars['Boolean']['input']>;
  burned_explanation?: InputMaybe<Scalars['String']['input']>;
  categorization?: InputMaybe<Scalars['jsonb']['input']>;
  creation?: InputMaybe<Scalars['date']['input']>;
  dns?: InputMaybe<Scalars['jsonb']['input']>;
  domainStatusId?: InputMaybe<Scalars['bigint']['input']>;
  expiration?: InputMaybe<Scalars['date']['input']>;
  expired?: InputMaybe<Scalars['Boolean']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  healthStatusId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  lastHealthCheck?: InputMaybe<Scalars['date']['input']>;
  lastUsedById?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  registrar?: InputMaybe<Scalars['String']['input']>;
  resetDns?: InputMaybe<Scalars['Boolean']['input']>;
  vtPermalink?: InputMaybe<Scalars['String']['input']>;
  whoisStatusId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type Domain_Sum_Fields = {
  __typename?: 'domain_sum_fields';
  domainStatusId?: Maybe<Scalars['bigint']['output']>;
  healthStatusId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  lastUsedById?: Maybe<Scalars['bigint']['output']>;
  whoisStatusId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "shepherd_domain" */
export type Domain_Sum_Order_By = {
  domainStatusId?: InputMaybe<Order_By>;
  healthStatusId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastUsedById?: InputMaybe<Order_By>;
  whoisStatusId?: InputMaybe<Order_By>;
};

/** update columns of table "shepherd_domain" */
export enum Domain_Update_Column {
  /** column name */
  AutoRenew = 'autoRenew',
  /** column name */
  BurnedExplanation = 'burned_explanation',
  /** column name */
  Categorization = 'categorization',
  /** column name */
  Creation = 'creation',
  /** column name */
  Dns = 'dns',
  /** column name */
  DomainStatusId = 'domainStatusId',
  /** column name */
  Expiration = 'expiration',
  /** column name */
  Expired = 'expired',
  /** column name */
  ExtraFields = 'extraFields',
  /** column name */
  HealthStatusId = 'healthStatusId',
  /** column name */
  Id = 'id',
  /** column name */
  LastHealthCheck = 'lastHealthCheck',
  /** column name */
  LastUsedById = 'lastUsedById',
  /** column name */
  Name = 'name',
  /** column name */
  Note = 'note',
  /** column name */
  Registrar = 'registrar',
  /** column name */
  ResetDns = 'resetDns',
  /** column name */
  VtPermalink = 'vtPermalink',
  /** column name */
  WhoisStatusId = 'whoisStatusId'
}

export type Domain_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Domain_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Domain_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Domain_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Domain_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Domain_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Domain_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Domain_Set_Input>;
  /** filter the rows which have to be updated */
  where: Domain_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Domain_Var_Pop_Fields = {
  __typename?: 'domain_var_pop_fields';
  domainStatusId?: Maybe<Scalars['Float']['output']>;
  healthStatusId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  lastUsedById?: Maybe<Scalars['Float']['output']>;
  whoisStatusId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "shepherd_domain" */
export type Domain_Var_Pop_Order_By = {
  domainStatusId?: InputMaybe<Order_By>;
  healthStatusId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastUsedById?: InputMaybe<Order_By>;
  whoisStatusId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Domain_Var_Samp_Fields = {
  __typename?: 'domain_var_samp_fields';
  domainStatusId?: Maybe<Scalars['Float']['output']>;
  healthStatusId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  lastUsedById?: Maybe<Scalars['Float']['output']>;
  whoisStatusId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "shepherd_domain" */
export type Domain_Var_Samp_Order_By = {
  domainStatusId?: InputMaybe<Order_By>;
  healthStatusId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastUsedById?: InputMaybe<Order_By>;
  whoisStatusId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Domain_Variance_Fields = {
  __typename?: 'domain_variance_fields';
  domainStatusId?: Maybe<Scalars['Float']['output']>;
  healthStatusId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  lastUsedById?: Maybe<Scalars['Float']['output']>;
  whoisStatusId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "shepherd_domain" */
export type Domain_Variance_Order_By = {
  domainStatusId?: InputMaybe<Order_By>;
  healthStatusId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastUsedById?: InputMaybe<Order_By>;
  whoisStatusId?: InputMaybe<Order_By>;
};

/** columns and relationships of "reporting_evidence" */
export type Evidence = {
  __typename?: 'evidence';
  caption: Scalars['String']['output'];
  description: Scalars['String']['output'];
  document: Scalars['String']['output'];
  /** An object relationship */
  finding?: Maybe<ReportedFinding>;
  findingId?: Maybe<Scalars['bigint']['output']>;
  friendlyName: Scalars['String']['output'];
  id: Scalars['bigint']['output'];
  /** An object relationship */
  report?: Maybe<Report>;
  report_id?: Maybe<Scalars['bigint']['output']>;
  uploadDate: Scalars['date']['output'];
  uploadedById?: Maybe<Scalars['bigint']['output']>;
  /** An object relationship */
  user?: Maybe<User>;
};

/** aggregated selection of "reporting_evidence" */
export type Evidence_Aggregate = {
  __typename?: 'evidence_aggregate';
  aggregate?: Maybe<Evidence_Aggregate_Fields>;
  nodes: Array<Evidence>;
};

export type Evidence_Aggregate_Bool_Exp = {
  count?: InputMaybe<Evidence_Aggregate_Bool_Exp_Count>;
};

export type Evidence_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Evidence_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Evidence_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "reporting_evidence" */
export type Evidence_Aggregate_Fields = {
  __typename?: 'evidence_aggregate_fields';
  avg?: Maybe<Evidence_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Evidence_Max_Fields>;
  min?: Maybe<Evidence_Min_Fields>;
  stddev?: Maybe<Evidence_Stddev_Fields>;
  stddev_pop?: Maybe<Evidence_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Evidence_Stddev_Samp_Fields>;
  sum?: Maybe<Evidence_Sum_Fields>;
  var_pop?: Maybe<Evidence_Var_Pop_Fields>;
  var_samp?: Maybe<Evidence_Var_Samp_Fields>;
  variance?: Maybe<Evidence_Variance_Fields>;
};


/** aggregate fields of "reporting_evidence" */
export type Evidence_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Evidence_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "reporting_evidence" */
export type Evidence_Aggregate_Order_By = {
  avg?: InputMaybe<Evidence_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Evidence_Max_Order_By>;
  min?: InputMaybe<Evidence_Min_Order_By>;
  stddev?: InputMaybe<Evidence_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Evidence_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Evidence_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Evidence_Sum_Order_By>;
  var_pop?: InputMaybe<Evidence_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Evidence_Var_Samp_Order_By>;
  variance?: InputMaybe<Evidence_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "reporting_evidence" */
export type Evidence_Arr_Rel_Insert_Input = {
  data: Array<Evidence_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Evidence_On_Conflict>;
};

/** aggregate avg on columns */
export type Evidence_Avg_Fields = {
  __typename?: 'evidence_avg_fields';
  findingId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  report_id?: Maybe<Scalars['Float']['output']>;
  uploadedById?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "reporting_evidence" */
export type Evidence_Avg_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  report_id?: InputMaybe<Order_By>;
  uploadedById?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "reporting_evidence". All fields are combined with a logical 'AND'. */
export type Evidence_Bool_Exp = {
  _and?: InputMaybe<Array<Evidence_Bool_Exp>>;
  _not?: InputMaybe<Evidence_Bool_Exp>;
  _or?: InputMaybe<Array<Evidence_Bool_Exp>>;
  caption?: InputMaybe<String_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  document?: InputMaybe<String_Comparison_Exp>;
  finding?: InputMaybe<ReportedFinding_Bool_Exp>;
  findingId?: InputMaybe<Bigint_Comparison_Exp>;
  friendlyName?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  report?: InputMaybe<Report_Bool_Exp>;
  report_id?: InputMaybe<Bigint_Comparison_Exp>;
  uploadDate?: InputMaybe<Date_Comparison_Exp>;
  uploadedById?: InputMaybe<Bigint_Comparison_Exp>;
  user?: InputMaybe<User_Bool_Exp>;
};

/** unique or primary key constraints on table "reporting_evidence" */
export enum Evidence_Constraint {
  /** unique or primary key constraint on columns "id" */
  ReportingEvidencePkey = 'reporting_evidence_pkey'
}

/** input type for incrementing numeric columns in table "reporting_evidence" */
export type Evidence_Inc_Input = {
  findingId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  report_id?: InputMaybe<Scalars['bigint']['input']>;
  uploadedById?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "reporting_evidence" */
export type Evidence_Insert_Input = {
  caption?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  document?: InputMaybe<Scalars['String']['input']>;
  finding?: InputMaybe<ReportedFinding_Obj_Rel_Insert_Input>;
  findingId?: InputMaybe<Scalars['bigint']['input']>;
  friendlyName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  report?: InputMaybe<Report_Obj_Rel_Insert_Input>;
  report_id?: InputMaybe<Scalars['bigint']['input']>;
  uploadDate?: InputMaybe<Scalars['date']['input']>;
  uploadedById?: InputMaybe<Scalars['bigint']['input']>;
  user?: InputMaybe<User_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Evidence_Max_Fields = {
  __typename?: 'evidence_max_fields';
  caption?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  document?: Maybe<Scalars['String']['output']>;
  findingId?: Maybe<Scalars['bigint']['output']>;
  friendlyName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  report_id?: Maybe<Scalars['bigint']['output']>;
  uploadDate?: Maybe<Scalars['date']['output']>;
  uploadedById?: Maybe<Scalars['bigint']['output']>;
};

/** order by max() on columns of table "reporting_evidence" */
export type Evidence_Max_Order_By = {
  caption?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  document?: InputMaybe<Order_By>;
  findingId?: InputMaybe<Order_By>;
  friendlyName?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  report_id?: InputMaybe<Order_By>;
  uploadDate?: InputMaybe<Order_By>;
  uploadedById?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Evidence_Min_Fields = {
  __typename?: 'evidence_min_fields';
  caption?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  document?: Maybe<Scalars['String']['output']>;
  findingId?: Maybe<Scalars['bigint']['output']>;
  friendlyName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  report_id?: Maybe<Scalars['bigint']['output']>;
  uploadDate?: Maybe<Scalars['date']['output']>;
  uploadedById?: Maybe<Scalars['bigint']['output']>;
};

/** order by min() on columns of table "reporting_evidence" */
export type Evidence_Min_Order_By = {
  caption?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  document?: InputMaybe<Order_By>;
  findingId?: InputMaybe<Order_By>;
  friendlyName?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  report_id?: InputMaybe<Order_By>;
  uploadDate?: InputMaybe<Order_By>;
  uploadedById?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "reporting_evidence" */
export type Evidence_Mutation_Response = {
  __typename?: 'evidence_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Evidence>;
};

/** on_conflict condition type for table "reporting_evidence" */
export type Evidence_On_Conflict = {
  constraint: Evidence_Constraint;
  update_columns?: Array<Evidence_Update_Column>;
  where?: InputMaybe<Evidence_Bool_Exp>;
};

/** Ordering options when selecting data from "reporting_evidence". */
export type Evidence_Order_By = {
  caption?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  document?: InputMaybe<Order_By>;
  finding?: InputMaybe<ReportedFinding_Order_By>;
  findingId?: InputMaybe<Order_By>;
  friendlyName?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  report?: InputMaybe<Report_Order_By>;
  report_id?: InputMaybe<Order_By>;
  uploadDate?: InputMaybe<Order_By>;
  uploadedById?: InputMaybe<Order_By>;
  user?: InputMaybe<User_Order_By>;
};

/** primary key columns input for table: reporting_evidence */
export type Evidence_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "reporting_evidence" */
export enum Evidence_Select_Column {
  /** column name */
  Caption = 'caption',
  /** column name */
  Description = 'description',
  /** column name */
  Document = 'document',
  /** column name */
  FindingId = 'findingId',
  /** column name */
  FriendlyName = 'friendlyName',
  /** column name */
  Id = 'id',
  /** column name */
  ReportId = 'report_id',
  /** column name */
  UploadDate = 'uploadDate',
  /** column name */
  UploadedById = 'uploadedById'
}

/** input type for updating data in table "reporting_evidence" */
export type Evidence_Set_Input = {
  caption?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  document?: InputMaybe<Scalars['String']['input']>;
  findingId?: InputMaybe<Scalars['bigint']['input']>;
  friendlyName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  report_id?: InputMaybe<Scalars['bigint']['input']>;
  uploadDate?: InputMaybe<Scalars['date']['input']>;
  uploadedById?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate stddev on columns */
export type Evidence_Stddev_Fields = {
  __typename?: 'evidence_stddev_fields';
  findingId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  report_id?: Maybe<Scalars['Float']['output']>;
  uploadedById?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "reporting_evidence" */
export type Evidence_Stddev_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  report_id?: InputMaybe<Order_By>;
  uploadedById?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Evidence_Stddev_Pop_Fields = {
  __typename?: 'evidence_stddev_pop_fields';
  findingId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  report_id?: Maybe<Scalars['Float']['output']>;
  uploadedById?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "reporting_evidence" */
export type Evidence_Stddev_Pop_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  report_id?: InputMaybe<Order_By>;
  uploadedById?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Evidence_Stddev_Samp_Fields = {
  __typename?: 'evidence_stddev_samp_fields';
  findingId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  report_id?: Maybe<Scalars['Float']['output']>;
  uploadedById?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "reporting_evidence" */
export type Evidence_Stddev_Samp_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  report_id?: InputMaybe<Order_By>;
  uploadedById?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "evidence" */
export type Evidence_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Evidence_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Evidence_Stream_Cursor_Value_Input = {
  caption?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  document?: InputMaybe<Scalars['String']['input']>;
  findingId?: InputMaybe<Scalars['bigint']['input']>;
  friendlyName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  report_id?: InputMaybe<Scalars['bigint']['input']>;
  uploadDate?: InputMaybe<Scalars['date']['input']>;
  uploadedById?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type Evidence_Sum_Fields = {
  __typename?: 'evidence_sum_fields';
  findingId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  report_id?: Maybe<Scalars['bigint']['output']>;
  uploadedById?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "reporting_evidence" */
export type Evidence_Sum_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  report_id?: InputMaybe<Order_By>;
  uploadedById?: InputMaybe<Order_By>;
};

/** update columns of table "reporting_evidence" */
export enum Evidence_Update_Column {
  /** column name */
  Caption = 'caption',
  /** column name */
  Description = 'description',
  /** column name */
  Document = 'document',
  /** column name */
  FindingId = 'findingId',
  /** column name */
  FriendlyName = 'friendlyName',
  /** column name */
  Id = 'id',
  /** column name */
  ReportId = 'report_id',
  /** column name */
  UploadDate = 'uploadDate',
  /** column name */
  UploadedById = 'uploadedById'
}

export type Evidence_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Evidence_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Evidence_Set_Input>;
  /** filter the rows which have to be updated */
  where: Evidence_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Evidence_Var_Pop_Fields = {
  __typename?: 'evidence_var_pop_fields';
  findingId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  report_id?: Maybe<Scalars['Float']['output']>;
  uploadedById?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "reporting_evidence" */
export type Evidence_Var_Pop_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  report_id?: InputMaybe<Order_By>;
  uploadedById?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Evidence_Var_Samp_Fields = {
  __typename?: 'evidence_var_samp_fields';
  findingId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  report_id?: Maybe<Scalars['Float']['output']>;
  uploadedById?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "reporting_evidence" */
export type Evidence_Var_Samp_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  report_id?: InputMaybe<Order_By>;
  uploadedById?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Evidence_Variance_Fields = {
  __typename?: 'evidence_variance_fields';
  findingId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  report_id?: Maybe<Scalars['Float']['output']>;
  uploadedById?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "reporting_evidence" */
export type Evidence_Variance_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  report_id?: InputMaybe<Order_By>;
  uploadedById?: InputMaybe<Order_By>;
};

/** columns and relationships of "commandcenter_extrafieldmodel" */
export type ExtraFieldModel = {
  __typename?: 'extraFieldModel';
  is_collab_editable: Scalars['Boolean']['output'];
  modelDisplayName: Scalars['String']['output'];
  modelInternalName: Scalars['String']['output'];
};

/** aggregated selection of "commandcenter_extrafieldmodel" */
export type ExtraFieldModel_Aggregate = {
  __typename?: 'extraFieldModel_aggregate';
  aggregate?: Maybe<ExtraFieldModel_Aggregate_Fields>;
  nodes: Array<ExtraFieldModel>;
};

/** aggregate fields of "commandcenter_extrafieldmodel" */
export type ExtraFieldModel_Aggregate_Fields = {
  __typename?: 'extraFieldModel_aggregate_fields';
  count: Scalars['Int']['output'];
  max?: Maybe<ExtraFieldModel_Max_Fields>;
  min?: Maybe<ExtraFieldModel_Min_Fields>;
};


/** aggregate fields of "commandcenter_extrafieldmodel" */
export type ExtraFieldModel_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ExtraFieldModel_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** Boolean expression to filter rows from the table "commandcenter_extrafieldmodel". All fields are combined with a logical 'AND'. */
export type ExtraFieldModel_Bool_Exp = {
  _and?: InputMaybe<Array<ExtraFieldModel_Bool_Exp>>;
  _not?: InputMaybe<ExtraFieldModel_Bool_Exp>;
  _or?: InputMaybe<Array<ExtraFieldModel_Bool_Exp>>;
  is_collab_editable?: InputMaybe<Boolean_Comparison_Exp>;
  modelDisplayName?: InputMaybe<String_Comparison_Exp>;
  modelInternalName?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "commandcenter_extrafieldmodel" */
export enum ExtraFieldModel_Constraint {
  /** unique or primary key constraint on columns "model_internal_name" */
  CommandcenterExtrafieldmodelPkey = 'commandcenter_extrafieldmodel_pkey'
}

/** input type for inserting data into table "commandcenter_extrafieldmodel" */
export type ExtraFieldModel_Insert_Input = {
  is_collab_editable?: InputMaybe<Scalars['Boolean']['input']>;
  modelDisplayName?: InputMaybe<Scalars['String']['input']>;
  modelInternalName?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type ExtraFieldModel_Max_Fields = {
  __typename?: 'extraFieldModel_max_fields';
  modelDisplayName?: Maybe<Scalars['String']['output']>;
  modelInternalName?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type ExtraFieldModel_Min_Fields = {
  __typename?: 'extraFieldModel_min_fields';
  modelDisplayName?: Maybe<Scalars['String']['output']>;
  modelInternalName?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "commandcenter_extrafieldmodel" */
export type ExtraFieldModel_Mutation_Response = {
  __typename?: 'extraFieldModel_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ExtraFieldModel>;
};

/** input type for inserting object relation for remote table "commandcenter_extrafieldmodel" */
export type ExtraFieldModel_Obj_Rel_Insert_Input = {
  data: ExtraFieldModel_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ExtraFieldModel_On_Conflict>;
};

/** on_conflict condition type for table "commandcenter_extrafieldmodel" */
export type ExtraFieldModel_On_Conflict = {
  constraint: ExtraFieldModel_Constraint;
  update_columns?: Array<ExtraFieldModel_Update_Column>;
  where?: InputMaybe<ExtraFieldModel_Bool_Exp>;
};

/** Ordering options when selecting data from "commandcenter_extrafieldmodel". */
export type ExtraFieldModel_Order_By = {
  is_collab_editable?: InputMaybe<Order_By>;
  modelDisplayName?: InputMaybe<Order_By>;
  modelInternalName?: InputMaybe<Order_By>;
};

/** primary key columns input for table: commandcenter_extrafieldmodel */
export type ExtraFieldModel_Pk_Columns_Input = {
  modelInternalName: Scalars['String']['input'];
};

/** select columns of table "commandcenter_extrafieldmodel" */
export enum ExtraFieldModel_Select_Column {
  /** column name */
  IsCollabEditable = 'is_collab_editable',
  /** column name */
  ModelDisplayName = 'modelDisplayName',
  /** column name */
  ModelInternalName = 'modelInternalName'
}

/** input type for updating data in table "commandcenter_extrafieldmodel" */
export type ExtraFieldModel_Set_Input = {
  is_collab_editable?: InputMaybe<Scalars['Boolean']['input']>;
  modelDisplayName?: InputMaybe<Scalars['String']['input']>;
  modelInternalName?: InputMaybe<Scalars['String']['input']>;
};

/** Streaming cursor of the table "extraFieldModel" */
export type ExtraFieldModel_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ExtraFieldModel_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ExtraFieldModel_Stream_Cursor_Value_Input = {
  is_collab_editable?: InputMaybe<Scalars['Boolean']['input']>;
  modelDisplayName?: InputMaybe<Scalars['String']['input']>;
  modelInternalName?: InputMaybe<Scalars['String']['input']>;
};

/** update columns of table "commandcenter_extrafieldmodel" */
export enum ExtraFieldModel_Update_Column {
  /** column name */
  IsCollabEditable = 'is_collab_editable',
  /** column name */
  ModelDisplayName = 'modelDisplayName',
  /** column name */
  ModelInternalName = 'modelInternalName'
}

export type ExtraFieldModel_Updates = {
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ExtraFieldModel_Set_Input>;
  /** filter the rows which have to be updated */
  where: ExtraFieldModel_Bool_Exp;
};

/** columns and relationships of "commandcenter_extrafieldspec" */
export type ExtraFieldSpec = {
  __typename?: 'extraFieldSpec';
  _order: Scalars['Int']['output'];
  defaultValue: Scalars['String']['output'];
  description: Scalars['String']['output'];
  displayName: Scalars['String']['output'];
  /** An object relationship */
  extraFieldModel: ExtraFieldModel;
  id: Scalars['bigint']['output'];
  internalName: Scalars['String']['output'];
  targetModel: Scalars['String']['output'];
  type: Scalars['String']['output'];
};

/** aggregated selection of "commandcenter_extrafieldspec" */
export type ExtraFieldSpec_Aggregate = {
  __typename?: 'extraFieldSpec_aggregate';
  aggregate?: Maybe<ExtraFieldSpec_Aggregate_Fields>;
  nodes: Array<ExtraFieldSpec>;
};

/** aggregate fields of "commandcenter_extrafieldspec" */
export type ExtraFieldSpec_Aggregate_Fields = {
  __typename?: 'extraFieldSpec_aggregate_fields';
  avg?: Maybe<ExtraFieldSpec_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ExtraFieldSpec_Max_Fields>;
  min?: Maybe<ExtraFieldSpec_Min_Fields>;
  stddev?: Maybe<ExtraFieldSpec_Stddev_Fields>;
  stddev_pop?: Maybe<ExtraFieldSpec_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ExtraFieldSpec_Stddev_Samp_Fields>;
  sum?: Maybe<ExtraFieldSpec_Sum_Fields>;
  var_pop?: Maybe<ExtraFieldSpec_Var_Pop_Fields>;
  var_samp?: Maybe<ExtraFieldSpec_Var_Samp_Fields>;
  variance?: Maybe<ExtraFieldSpec_Variance_Fields>;
};


/** aggregate fields of "commandcenter_extrafieldspec" */
export type ExtraFieldSpec_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ExtraFieldSpec_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type ExtraFieldSpec_Avg_Fields = {
  __typename?: 'extraFieldSpec_avg_fields';
  _order?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "commandcenter_extrafieldspec". All fields are combined with a logical 'AND'. */
export type ExtraFieldSpec_Bool_Exp = {
  _and?: InputMaybe<Array<ExtraFieldSpec_Bool_Exp>>;
  _not?: InputMaybe<ExtraFieldSpec_Bool_Exp>;
  _or?: InputMaybe<Array<ExtraFieldSpec_Bool_Exp>>;
  _order?: InputMaybe<Int_Comparison_Exp>;
  defaultValue?: InputMaybe<String_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  displayName?: InputMaybe<String_Comparison_Exp>;
  extraFieldModel?: InputMaybe<ExtraFieldModel_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  internalName?: InputMaybe<String_Comparison_Exp>;
  targetModel?: InputMaybe<String_Comparison_Exp>;
  type?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "commandcenter_extrafieldspec" */
export enum ExtraFieldSpec_Constraint {
  /** unique or primary key constraint on columns "internal_name", "target_model_id" */
  CommandcenterExtrafieldTargetModelIdInternal_75bb84caUniq = 'commandcenter_extrafield_target_model_id_internal_75bb84ca_uniq',
  /** unique or primary key constraint on columns "id" */
  CommandcenterExtrafieldspecPkey = 'commandcenter_extrafieldspec_pkey'
}

/** input type for incrementing numeric columns in table "commandcenter_extrafieldspec" */
export type ExtraFieldSpec_Inc_Input = {
  _order?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "commandcenter_extrafieldspec" */
export type ExtraFieldSpec_Insert_Input = {
  _order?: InputMaybe<Scalars['Int']['input']>;
  defaultValue?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  extraFieldModel?: InputMaybe<ExtraFieldModel_Obj_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  internalName?: InputMaybe<Scalars['String']['input']>;
  targetModel?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type ExtraFieldSpec_Max_Fields = {
  __typename?: 'extraFieldSpec_max_fields';
  _order?: Maybe<Scalars['Int']['output']>;
  defaultValue?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  internalName?: Maybe<Scalars['String']['output']>;
  targetModel?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type ExtraFieldSpec_Min_Fields = {
  __typename?: 'extraFieldSpec_min_fields';
  _order?: Maybe<Scalars['Int']['output']>;
  defaultValue?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  displayName?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  internalName?: Maybe<Scalars['String']['output']>;
  targetModel?: Maybe<Scalars['String']['output']>;
  type?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "commandcenter_extrafieldspec" */
export type ExtraFieldSpec_Mutation_Response = {
  __typename?: 'extraFieldSpec_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ExtraFieldSpec>;
};

/** on_conflict condition type for table "commandcenter_extrafieldspec" */
export type ExtraFieldSpec_On_Conflict = {
  constraint: ExtraFieldSpec_Constraint;
  update_columns?: Array<ExtraFieldSpec_Update_Column>;
  where?: InputMaybe<ExtraFieldSpec_Bool_Exp>;
};

/** Ordering options when selecting data from "commandcenter_extrafieldspec". */
export type ExtraFieldSpec_Order_By = {
  _order?: InputMaybe<Order_By>;
  defaultValue?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  displayName?: InputMaybe<Order_By>;
  extraFieldModel?: InputMaybe<ExtraFieldModel_Order_By>;
  id?: InputMaybe<Order_By>;
  internalName?: InputMaybe<Order_By>;
  targetModel?: InputMaybe<Order_By>;
  type?: InputMaybe<Order_By>;
};

/** primary key columns input for table: commandcenter_extrafieldspec */
export type ExtraFieldSpec_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "commandcenter_extrafieldspec" */
export enum ExtraFieldSpec_Select_Column {
  /** column name */
  Order = '_order',
  /** column name */
  DefaultValue = 'defaultValue',
  /** column name */
  Description = 'description',
  /** column name */
  DisplayName = 'displayName',
  /** column name */
  Id = 'id',
  /** column name */
  InternalName = 'internalName',
  /** column name */
  TargetModel = 'targetModel',
  /** column name */
  Type = 'type'
}

/** input type for updating data in table "commandcenter_extrafieldspec" */
export type ExtraFieldSpec_Set_Input = {
  _order?: InputMaybe<Scalars['Int']['input']>;
  defaultValue?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  internalName?: InputMaybe<Scalars['String']['input']>;
  targetModel?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type ExtraFieldSpec_Stddev_Fields = {
  __typename?: 'extraFieldSpec_stddev_fields';
  _order?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type ExtraFieldSpec_Stddev_Pop_Fields = {
  __typename?: 'extraFieldSpec_stddev_pop_fields';
  _order?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type ExtraFieldSpec_Stddev_Samp_Fields = {
  __typename?: 'extraFieldSpec_stddev_samp_fields';
  _order?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "extraFieldSpec" */
export type ExtraFieldSpec_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ExtraFieldSpec_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ExtraFieldSpec_Stream_Cursor_Value_Input = {
  _order?: InputMaybe<Scalars['Int']['input']>;
  defaultValue?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  internalName?: InputMaybe<Scalars['String']['input']>;
  targetModel?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type ExtraFieldSpec_Sum_Fields = {
  __typename?: 'extraFieldSpec_sum_fields';
  _order?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
};

/** update columns of table "commandcenter_extrafieldspec" */
export enum ExtraFieldSpec_Update_Column {
  /** column name */
  Order = '_order',
  /** column name */
  DefaultValue = 'defaultValue',
  /** column name */
  Description = 'description',
  /** column name */
  DisplayName = 'displayName',
  /** column name */
  Id = 'id',
  /** column name */
  InternalName = 'internalName',
  /** column name */
  TargetModel = 'targetModel',
  /** column name */
  Type = 'type'
}

export type ExtraFieldSpec_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ExtraFieldSpec_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ExtraFieldSpec_Set_Input>;
  /** filter the rows which have to be updated */
  where: ExtraFieldSpec_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ExtraFieldSpec_Var_Pop_Fields = {
  __typename?: 'extraFieldSpec_var_pop_fields';
  _order?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type ExtraFieldSpec_Var_Samp_Fields = {
  __typename?: 'extraFieldSpec_var_samp_fields';
  _order?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type ExtraFieldSpec_Variance_Fields = {
  __typename?: 'extraFieldSpec_variance_fields';
  _order?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "reporting_finding" */
export type Finding = {
  __typename?: 'finding';
  /** An array relationship */
  comments: Array<FindingNote>;
  /** An aggregate relationship */
  comments_aggregate: FindingNote_Aggregate;
  cvssScore?: Maybe<Scalars['float8']['output']>;
  cvssVector: Scalars['String']['output'];
  description: Scalars['String']['output'];
  extraFields: Scalars['jsonb']['output'];
  findingGuidance: Scalars['String']['output'];
  findingTypeId: Scalars['bigint']['output'];
  hostDetectionTechniques: Scalars['String']['output'];
  id: Scalars['bigint']['output'];
  impact: Scalars['String']['output'];
  mitigation: Scalars['String']['output'];
  networkDetectionTechniques: Scalars['String']['output'];
  references: Scalars['String']['output'];
  replication_steps: Scalars['String']['output'];
  /** An object relationship */
  severity: FindingSeverity;
  severityId: Scalars['bigint']['output'];
  title: Scalars['String']['output'];
  /** An object relationship */
  type: FindingType;
};


/** columns and relationships of "reporting_finding" */
export type FindingCommentsArgs = {
  distinct_on?: InputMaybe<Array<FindingNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<FindingNote_Order_By>>;
  where?: InputMaybe<FindingNote_Bool_Exp>;
};


/** columns and relationships of "reporting_finding" */
export type FindingComments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<FindingNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<FindingNote_Order_By>>;
  where?: InputMaybe<FindingNote_Bool_Exp>;
};


/** columns and relationships of "reporting_finding" */
export type FindingExtraFieldsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "reporting_findingnote" */
export type FindingNote = {
  __typename?: 'findingNote';
  /** An object relationship */
  finding: Finding;
  findingId: Scalars['bigint']['output'];
  id: Scalars['bigint']['output'];
  note: Scalars['String']['output'];
  operatorId?: Maybe<Scalars['bigint']['output']>;
  timestamp: Scalars['date']['output'];
  /** An object relationship */
  user?: Maybe<User>;
};

/** aggregated selection of "reporting_findingnote" */
export type FindingNote_Aggregate = {
  __typename?: 'findingNote_aggregate';
  aggregate?: Maybe<FindingNote_Aggregate_Fields>;
  nodes: Array<FindingNote>;
};

export type FindingNote_Aggregate_Bool_Exp = {
  count?: InputMaybe<FindingNote_Aggregate_Bool_Exp_Count>;
};

export type FindingNote_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<FindingNote_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<FindingNote_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "reporting_findingnote" */
export type FindingNote_Aggregate_Fields = {
  __typename?: 'findingNote_aggregate_fields';
  avg?: Maybe<FindingNote_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<FindingNote_Max_Fields>;
  min?: Maybe<FindingNote_Min_Fields>;
  stddev?: Maybe<FindingNote_Stddev_Fields>;
  stddev_pop?: Maybe<FindingNote_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<FindingNote_Stddev_Samp_Fields>;
  sum?: Maybe<FindingNote_Sum_Fields>;
  var_pop?: Maybe<FindingNote_Var_Pop_Fields>;
  var_samp?: Maybe<FindingNote_Var_Samp_Fields>;
  variance?: Maybe<FindingNote_Variance_Fields>;
};


/** aggregate fields of "reporting_findingnote" */
export type FindingNote_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<FindingNote_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "reporting_findingnote" */
export type FindingNote_Aggregate_Order_By = {
  avg?: InputMaybe<FindingNote_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<FindingNote_Max_Order_By>;
  min?: InputMaybe<FindingNote_Min_Order_By>;
  stddev?: InputMaybe<FindingNote_Stddev_Order_By>;
  stddev_pop?: InputMaybe<FindingNote_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<FindingNote_Stddev_Samp_Order_By>;
  sum?: InputMaybe<FindingNote_Sum_Order_By>;
  var_pop?: InputMaybe<FindingNote_Var_Pop_Order_By>;
  var_samp?: InputMaybe<FindingNote_Var_Samp_Order_By>;
  variance?: InputMaybe<FindingNote_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "reporting_findingnote" */
export type FindingNote_Arr_Rel_Insert_Input = {
  data: Array<FindingNote_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<FindingNote_On_Conflict>;
};

/** aggregate avg on columns */
export type FindingNote_Avg_Fields = {
  __typename?: 'findingNote_avg_fields';
  findingId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "reporting_findingnote" */
export type FindingNote_Avg_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "reporting_findingnote". All fields are combined with a logical 'AND'. */
export type FindingNote_Bool_Exp = {
  _and?: InputMaybe<Array<FindingNote_Bool_Exp>>;
  _not?: InputMaybe<FindingNote_Bool_Exp>;
  _or?: InputMaybe<Array<FindingNote_Bool_Exp>>;
  finding?: InputMaybe<Finding_Bool_Exp>;
  findingId?: InputMaybe<Bigint_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  operatorId?: InputMaybe<Bigint_Comparison_Exp>;
  timestamp?: InputMaybe<Date_Comparison_Exp>;
  user?: InputMaybe<User_Bool_Exp>;
};

/** unique or primary key constraints on table "reporting_findingnote" */
export enum FindingNote_Constraint {
  /** unique or primary key constraint on columns "id" */
  ReportingFindingnotePkey = 'reporting_findingnote_pkey'
}

/** input type for incrementing numeric columns in table "reporting_findingnote" */
export type FindingNote_Inc_Input = {
  findingId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "reporting_findingnote" */
export type FindingNote_Insert_Input = {
  finding?: InputMaybe<Finding_Obj_Rel_Insert_Input>;
  findingId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  timestamp?: InputMaybe<Scalars['date']['input']>;
  user?: InputMaybe<User_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type FindingNote_Max_Fields = {
  __typename?: 'findingNote_max_fields';
  findingId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  timestamp?: Maybe<Scalars['date']['output']>;
};

/** order by max() on columns of table "reporting_findingnote" */
export type FindingNote_Max_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type FindingNote_Min_Fields = {
  __typename?: 'findingNote_min_fields';
  findingId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  timestamp?: Maybe<Scalars['date']['output']>;
};

/** order by min() on columns of table "reporting_findingnote" */
export type FindingNote_Min_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "reporting_findingnote" */
export type FindingNote_Mutation_Response = {
  __typename?: 'findingNote_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<FindingNote>;
};

/** on_conflict condition type for table "reporting_findingnote" */
export type FindingNote_On_Conflict = {
  constraint: FindingNote_Constraint;
  update_columns?: Array<FindingNote_Update_Column>;
  where?: InputMaybe<FindingNote_Bool_Exp>;
};

/** Ordering options when selecting data from "reporting_findingnote". */
export type FindingNote_Order_By = {
  finding?: InputMaybe<Finding_Order_By>;
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  user?: InputMaybe<User_Order_By>;
};

/** primary key columns input for table: reporting_findingnote */
export type FindingNote_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "reporting_findingnote" */
export enum FindingNote_Select_Column {
  /** column name */
  FindingId = 'findingId',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  OperatorId = 'operatorId',
  /** column name */
  Timestamp = 'timestamp'
}

/** input type for updating data in table "reporting_findingnote" */
export type FindingNote_Set_Input = {
  findingId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  timestamp?: InputMaybe<Scalars['date']['input']>;
};

/** aggregate stddev on columns */
export type FindingNote_Stddev_Fields = {
  __typename?: 'findingNote_stddev_fields';
  findingId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "reporting_findingnote" */
export type FindingNote_Stddev_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type FindingNote_Stddev_Pop_Fields = {
  __typename?: 'findingNote_stddev_pop_fields';
  findingId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "reporting_findingnote" */
export type FindingNote_Stddev_Pop_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type FindingNote_Stddev_Samp_Fields = {
  __typename?: 'findingNote_stddev_samp_fields';
  findingId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "reporting_findingnote" */
export type FindingNote_Stddev_Samp_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "findingNote" */
export type FindingNote_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: FindingNote_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type FindingNote_Stream_Cursor_Value_Input = {
  findingId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  timestamp?: InputMaybe<Scalars['date']['input']>;
};

/** aggregate sum on columns */
export type FindingNote_Sum_Fields = {
  __typename?: 'findingNote_sum_fields';
  findingId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "reporting_findingnote" */
export type FindingNote_Sum_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** update columns of table "reporting_findingnote" */
export enum FindingNote_Update_Column {
  /** column name */
  FindingId = 'findingId',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  OperatorId = 'operatorId',
  /** column name */
  Timestamp = 'timestamp'
}

export type FindingNote_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<FindingNote_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<FindingNote_Set_Input>;
  /** filter the rows which have to be updated */
  where: FindingNote_Bool_Exp;
};

/** aggregate var_pop on columns */
export type FindingNote_Var_Pop_Fields = {
  __typename?: 'findingNote_var_pop_fields';
  findingId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "reporting_findingnote" */
export type FindingNote_Var_Pop_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type FindingNote_Var_Samp_Fields = {
  __typename?: 'findingNote_var_samp_fields';
  findingId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "reporting_findingnote" */
export type FindingNote_Var_Samp_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type FindingNote_Variance_Fields = {
  __typename?: 'findingNote_variance_fields';
  findingId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "reporting_findingnote" */
export type FindingNote_Variance_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** columns and relationships of "reporting_severity" */
export type FindingSeverity = {
  __typename?: 'findingSeverity';
  color: Scalars['String']['output'];
  /** An array relationship */
  findings: Array<Finding>;
  /** An aggregate relationship */
  findings_aggregate: Finding_Aggregate;
  id: Scalars['bigint']['output'];
  /** An array relationship */
  reportedFindings: Array<ReportedFinding>;
  /** An aggregate relationship */
  reportedFindings_aggregate: ReportedFinding_Aggregate;
  severity: Scalars['String']['output'];
  weight: Scalars['Int']['output'];
};


/** columns and relationships of "reporting_severity" */
export type FindingSeverityFindingsArgs = {
  distinct_on?: InputMaybe<Array<Finding_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Finding_Order_By>>;
  where?: InputMaybe<Finding_Bool_Exp>;
};


/** columns and relationships of "reporting_severity" */
export type FindingSeverityFindings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Finding_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Finding_Order_By>>;
  where?: InputMaybe<Finding_Bool_Exp>;
};


/** columns and relationships of "reporting_severity" */
export type FindingSeverityReportedFindingsArgs = {
  distinct_on?: InputMaybe<Array<ReportedFinding_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportedFinding_Order_By>>;
  where?: InputMaybe<ReportedFinding_Bool_Exp>;
};


/** columns and relationships of "reporting_severity" */
export type FindingSeverityReportedFindings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ReportedFinding_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportedFinding_Order_By>>;
  where?: InputMaybe<ReportedFinding_Bool_Exp>;
};

/** aggregated selection of "reporting_severity" */
export type FindingSeverity_Aggregate = {
  __typename?: 'findingSeverity_aggregate';
  aggregate?: Maybe<FindingSeverity_Aggregate_Fields>;
  nodes: Array<FindingSeverity>;
};

/** aggregate fields of "reporting_severity" */
export type FindingSeverity_Aggregate_Fields = {
  __typename?: 'findingSeverity_aggregate_fields';
  avg?: Maybe<FindingSeverity_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<FindingSeverity_Max_Fields>;
  min?: Maybe<FindingSeverity_Min_Fields>;
  stddev?: Maybe<FindingSeverity_Stddev_Fields>;
  stddev_pop?: Maybe<FindingSeverity_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<FindingSeverity_Stddev_Samp_Fields>;
  sum?: Maybe<FindingSeverity_Sum_Fields>;
  var_pop?: Maybe<FindingSeverity_Var_Pop_Fields>;
  var_samp?: Maybe<FindingSeverity_Var_Samp_Fields>;
  variance?: Maybe<FindingSeverity_Variance_Fields>;
};


/** aggregate fields of "reporting_severity" */
export type FindingSeverity_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<FindingSeverity_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type FindingSeverity_Avg_Fields = {
  __typename?: 'findingSeverity_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "reporting_severity". All fields are combined with a logical 'AND'. */
export type FindingSeverity_Bool_Exp = {
  _and?: InputMaybe<Array<FindingSeverity_Bool_Exp>>;
  _not?: InputMaybe<FindingSeverity_Bool_Exp>;
  _or?: InputMaybe<Array<FindingSeverity_Bool_Exp>>;
  color?: InputMaybe<String_Comparison_Exp>;
  findings?: InputMaybe<Finding_Bool_Exp>;
  findings_aggregate?: InputMaybe<Finding_Aggregate_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  reportedFindings?: InputMaybe<ReportedFinding_Bool_Exp>;
  reportedFindings_aggregate?: InputMaybe<ReportedFinding_Aggregate_Bool_Exp>;
  severity?: InputMaybe<String_Comparison_Exp>;
  weight?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "reporting_severity" */
export enum FindingSeverity_Constraint {
  /** unique or primary key constraint on columns "id" */
  ReportingSeverityPkey = 'reporting_severity_pkey',
  /** unique or primary key constraint on columns "severity" */
  ReportingSeveritySeverityKey = 'reporting_severity_severity_key'
}

/** input type for incrementing numeric columns in table "reporting_severity" */
export type FindingSeverity_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  weight?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "reporting_severity" */
export type FindingSeverity_Insert_Input = {
  color?: InputMaybe<Scalars['String']['input']>;
  findings?: InputMaybe<Finding_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  reportedFindings?: InputMaybe<ReportedFinding_Arr_Rel_Insert_Input>;
  severity?: InputMaybe<Scalars['String']['input']>;
  weight?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type FindingSeverity_Max_Fields = {
  __typename?: 'findingSeverity_max_fields';
  color?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  severity?: Maybe<Scalars['String']['output']>;
  weight?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type FindingSeverity_Min_Fields = {
  __typename?: 'findingSeverity_min_fields';
  color?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  severity?: Maybe<Scalars['String']['output']>;
  weight?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "reporting_severity" */
export type FindingSeverity_Mutation_Response = {
  __typename?: 'findingSeverity_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<FindingSeverity>;
};

/** input type for inserting object relation for remote table "reporting_severity" */
export type FindingSeverity_Obj_Rel_Insert_Input = {
  data: FindingSeverity_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<FindingSeverity_On_Conflict>;
};

/** on_conflict condition type for table "reporting_severity" */
export type FindingSeverity_On_Conflict = {
  constraint: FindingSeverity_Constraint;
  update_columns?: Array<FindingSeverity_Update_Column>;
  where?: InputMaybe<FindingSeverity_Bool_Exp>;
};

/** Ordering options when selecting data from "reporting_severity". */
export type FindingSeverity_Order_By = {
  color?: InputMaybe<Order_By>;
  findings_aggregate?: InputMaybe<Finding_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  reportedFindings_aggregate?: InputMaybe<ReportedFinding_Aggregate_Order_By>;
  severity?: InputMaybe<Order_By>;
  weight?: InputMaybe<Order_By>;
};

/** primary key columns input for table: reporting_severity */
export type FindingSeverity_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "reporting_severity" */
export enum FindingSeverity_Select_Column {
  /** column name */
  Color = 'color',
  /** column name */
  Id = 'id',
  /** column name */
  Severity = 'severity',
  /** column name */
  Weight = 'weight'
}

/** input type for updating data in table "reporting_severity" */
export type FindingSeverity_Set_Input = {
  color?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  severity?: InputMaybe<Scalars['String']['input']>;
  weight?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type FindingSeverity_Stddev_Fields = {
  __typename?: 'findingSeverity_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type FindingSeverity_Stddev_Pop_Fields = {
  __typename?: 'findingSeverity_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type FindingSeverity_Stddev_Samp_Fields = {
  __typename?: 'findingSeverity_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "findingSeverity" */
export type FindingSeverity_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: FindingSeverity_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type FindingSeverity_Stream_Cursor_Value_Input = {
  color?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  severity?: InputMaybe<Scalars['String']['input']>;
  weight?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type FindingSeverity_Sum_Fields = {
  __typename?: 'findingSeverity_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  weight?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "reporting_severity" */
export enum FindingSeverity_Update_Column {
  /** column name */
  Color = 'color',
  /** column name */
  Id = 'id',
  /** column name */
  Severity = 'severity',
  /** column name */
  Weight = 'weight'
}

export type FindingSeverity_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<FindingSeverity_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<FindingSeverity_Set_Input>;
  /** filter the rows which have to be updated */
  where: FindingSeverity_Bool_Exp;
};

/** aggregate var_pop on columns */
export type FindingSeverity_Var_Pop_Fields = {
  __typename?: 'findingSeverity_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type FindingSeverity_Var_Samp_Fields = {
  __typename?: 'findingSeverity_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type FindingSeverity_Variance_Fields = {
  __typename?: 'findingSeverity_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "reporting_findingtype" */
export type FindingType = {
  __typename?: 'findingType';
  findingType: Scalars['String']['output'];
  /** An array relationship */
  findings: Array<Finding>;
  /** An aggregate relationship */
  findings_aggregate: Finding_Aggregate;
  id: Scalars['bigint']['output'];
  /** An array relationship */
  reportedFindings: Array<ReportedFinding>;
  /** An aggregate relationship */
  reportedFindings_aggregate: ReportedFinding_Aggregate;
};


/** columns and relationships of "reporting_findingtype" */
export type FindingTypeFindingsArgs = {
  distinct_on?: InputMaybe<Array<Finding_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Finding_Order_By>>;
  where?: InputMaybe<Finding_Bool_Exp>;
};


/** columns and relationships of "reporting_findingtype" */
export type FindingTypeFindings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Finding_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Finding_Order_By>>;
  where?: InputMaybe<Finding_Bool_Exp>;
};


/** columns and relationships of "reporting_findingtype" */
export type FindingTypeReportedFindingsArgs = {
  distinct_on?: InputMaybe<Array<ReportedFinding_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportedFinding_Order_By>>;
  where?: InputMaybe<ReportedFinding_Bool_Exp>;
};


/** columns and relationships of "reporting_findingtype" */
export type FindingTypeReportedFindings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ReportedFinding_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportedFinding_Order_By>>;
  where?: InputMaybe<ReportedFinding_Bool_Exp>;
};

/** aggregated selection of "reporting_findingtype" */
export type FindingType_Aggregate = {
  __typename?: 'findingType_aggregate';
  aggregate?: Maybe<FindingType_Aggregate_Fields>;
  nodes: Array<FindingType>;
};

/** aggregate fields of "reporting_findingtype" */
export type FindingType_Aggregate_Fields = {
  __typename?: 'findingType_aggregate_fields';
  avg?: Maybe<FindingType_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<FindingType_Max_Fields>;
  min?: Maybe<FindingType_Min_Fields>;
  stddev?: Maybe<FindingType_Stddev_Fields>;
  stddev_pop?: Maybe<FindingType_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<FindingType_Stddev_Samp_Fields>;
  sum?: Maybe<FindingType_Sum_Fields>;
  var_pop?: Maybe<FindingType_Var_Pop_Fields>;
  var_samp?: Maybe<FindingType_Var_Samp_Fields>;
  variance?: Maybe<FindingType_Variance_Fields>;
};


/** aggregate fields of "reporting_findingtype" */
export type FindingType_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<FindingType_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type FindingType_Avg_Fields = {
  __typename?: 'findingType_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "reporting_findingtype". All fields are combined with a logical 'AND'. */
export type FindingType_Bool_Exp = {
  _and?: InputMaybe<Array<FindingType_Bool_Exp>>;
  _not?: InputMaybe<FindingType_Bool_Exp>;
  _or?: InputMaybe<Array<FindingType_Bool_Exp>>;
  findingType?: InputMaybe<String_Comparison_Exp>;
  findings?: InputMaybe<Finding_Bool_Exp>;
  findings_aggregate?: InputMaybe<Finding_Aggregate_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  reportedFindings?: InputMaybe<ReportedFinding_Bool_Exp>;
  reportedFindings_aggregate?: InputMaybe<ReportedFinding_Aggregate_Bool_Exp>;
};

/** unique or primary key constraints on table "reporting_findingtype" */
export enum FindingType_Constraint {
  /** unique or primary key constraint on columns "finding_type" */
  ReportingFindingtypeFindingTypeKey = 'reporting_findingtype_finding_type_key',
  /** unique or primary key constraint on columns "id" */
  ReportingFindingtypePkey = 'reporting_findingtype_pkey'
}

/** input type for incrementing numeric columns in table "reporting_findingtype" */
export type FindingType_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "reporting_findingtype" */
export type FindingType_Insert_Input = {
  findingType?: InputMaybe<Scalars['String']['input']>;
  findings?: InputMaybe<Finding_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  reportedFindings?: InputMaybe<ReportedFinding_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type FindingType_Max_Fields = {
  __typename?: 'findingType_max_fields';
  findingType?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
};

/** aggregate min on columns */
export type FindingType_Min_Fields = {
  __typename?: 'findingType_min_fields';
  findingType?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
};

/** response of any mutation on the table "reporting_findingtype" */
export type FindingType_Mutation_Response = {
  __typename?: 'findingType_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<FindingType>;
};

/** input type for inserting object relation for remote table "reporting_findingtype" */
export type FindingType_Obj_Rel_Insert_Input = {
  data: FindingType_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<FindingType_On_Conflict>;
};

/** on_conflict condition type for table "reporting_findingtype" */
export type FindingType_On_Conflict = {
  constraint: FindingType_Constraint;
  update_columns?: Array<FindingType_Update_Column>;
  where?: InputMaybe<FindingType_Bool_Exp>;
};

/** Ordering options when selecting data from "reporting_findingtype". */
export type FindingType_Order_By = {
  findingType?: InputMaybe<Order_By>;
  findings_aggregate?: InputMaybe<Finding_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  reportedFindings_aggregate?: InputMaybe<ReportedFinding_Aggregate_Order_By>;
};

/** primary key columns input for table: reporting_findingtype */
export type FindingType_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "reporting_findingtype" */
export enum FindingType_Select_Column {
  /** column name */
  FindingType = 'findingType',
  /** column name */
  Id = 'id'
}

/** input type for updating data in table "reporting_findingtype" */
export type FindingType_Set_Input = {
  findingType?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate stddev on columns */
export type FindingType_Stddev_Fields = {
  __typename?: 'findingType_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type FindingType_Stddev_Pop_Fields = {
  __typename?: 'findingType_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type FindingType_Stddev_Samp_Fields = {
  __typename?: 'findingType_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "findingType" */
export type FindingType_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: FindingType_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type FindingType_Stream_Cursor_Value_Input = {
  findingType?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type FindingType_Sum_Fields = {
  __typename?: 'findingType_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
};

/** update columns of table "reporting_findingtype" */
export enum FindingType_Update_Column {
  /** column name */
  FindingType = 'findingType',
  /** column name */
  Id = 'id'
}

export type FindingType_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<FindingType_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<FindingType_Set_Input>;
  /** filter the rows which have to be updated */
  where: FindingType_Bool_Exp;
};

/** aggregate var_pop on columns */
export type FindingType_Var_Pop_Fields = {
  __typename?: 'findingType_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type FindingType_Var_Samp_Fields = {
  __typename?: 'findingType_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type FindingType_Variance_Fields = {
  __typename?: 'findingType_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregated selection of "reporting_finding" */
export type Finding_Aggregate = {
  __typename?: 'finding_aggregate';
  aggregate?: Maybe<Finding_Aggregate_Fields>;
  nodes: Array<Finding>;
};

export type Finding_Aggregate_Bool_Exp = {
  avg?: InputMaybe<Finding_Aggregate_Bool_Exp_Avg>;
  corr?: InputMaybe<Finding_Aggregate_Bool_Exp_Corr>;
  count?: InputMaybe<Finding_Aggregate_Bool_Exp_Count>;
  covar_samp?: InputMaybe<Finding_Aggregate_Bool_Exp_Covar_Samp>;
  max?: InputMaybe<Finding_Aggregate_Bool_Exp_Max>;
  min?: InputMaybe<Finding_Aggregate_Bool_Exp_Min>;
  stddev_samp?: InputMaybe<Finding_Aggregate_Bool_Exp_Stddev_Samp>;
  sum?: InputMaybe<Finding_Aggregate_Bool_Exp_Sum>;
  var_samp?: InputMaybe<Finding_Aggregate_Bool_Exp_Var_Samp>;
};

export type Finding_Aggregate_Bool_Exp_Avg = {
  arguments: Finding_Select_Column_Finding_Aggregate_Bool_Exp_Avg_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Finding_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Finding_Aggregate_Bool_Exp_Corr = {
  arguments: Finding_Aggregate_Bool_Exp_Corr_Arguments;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Finding_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Finding_Aggregate_Bool_Exp_Corr_Arguments = {
  X: Finding_Select_Column_Finding_Aggregate_Bool_Exp_Corr_Arguments_Columns;
  Y: Finding_Select_Column_Finding_Aggregate_Bool_Exp_Corr_Arguments_Columns;
};

export type Finding_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Finding_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Finding_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

export type Finding_Aggregate_Bool_Exp_Covar_Samp = {
  arguments: Finding_Aggregate_Bool_Exp_Covar_Samp_Arguments;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Finding_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Finding_Aggregate_Bool_Exp_Covar_Samp_Arguments = {
  X: Finding_Select_Column_Finding_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns;
  Y: Finding_Select_Column_Finding_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns;
};

export type Finding_Aggregate_Bool_Exp_Max = {
  arguments: Finding_Select_Column_Finding_Aggregate_Bool_Exp_Max_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Finding_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Finding_Aggregate_Bool_Exp_Min = {
  arguments: Finding_Select_Column_Finding_Aggregate_Bool_Exp_Min_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Finding_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Finding_Aggregate_Bool_Exp_Stddev_Samp = {
  arguments: Finding_Select_Column_Finding_Aggregate_Bool_Exp_Stddev_Samp_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Finding_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Finding_Aggregate_Bool_Exp_Sum = {
  arguments: Finding_Select_Column_Finding_Aggregate_Bool_Exp_Sum_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Finding_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Finding_Aggregate_Bool_Exp_Var_Samp = {
  arguments: Finding_Select_Column_Finding_Aggregate_Bool_Exp_Var_Samp_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Finding_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

/** aggregate fields of "reporting_finding" */
export type Finding_Aggregate_Fields = {
  __typename?: 'finding_aggregate_fields';
  avg?: Maybe<Finding_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Finding_Max_Fields>;
  min?: Maybe<Finding_Min_Fields>;
  stddev?: Maybe<Finding_Stddev_Fields>;
  stddev_pop?: Maybe<Finding_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Finding_Stddev_Samp_Fields>;
  sum?: Maybe<Finding_Sum_Fields>;
  var_pop?: Maybe<Finding_Var_Pop_Fields>;
  var_samp?: Maybe<Finding_Var_Samp_Fields>;
  variance?: Maybe<Finding_Variance_Fields>;
};


/** aggregate fields of "reporting_finding" */
export type Finding_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Finding_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "reporting_finding" */
export type Finding_Aggregate_Order_By = {
  avg?: InputMaybe<Finding_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Finding_Max_Order_By>;
  min?: InputMaybe<Finding_Min_Order_By>;
  stddev?: InputMaybe<Finding_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Finding_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Finding_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Finding_Sum_Order_By>;
  var_pop?: InputMaybe<Finding_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Finding_Var_Samp_Order_By>;
  variance?: InputMaybe<Finding_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Finding_Append_Input = {
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "reporting_finding" */
export type Finding_Arr_Rel_Insert_Input = {
  data: Array<Finding_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Finding_On_Conflict>;
};

/** aggregate avg on columns */
export type Finding_Avg_Fields = {
  __typename?: 'finding_avg_fields';
  cvssScore?: Maybe<Scalars['Float']['output']>;
  findingTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  severityId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "reporting_finding" */
export type Finding_Avg_Order_By = {
  cvssScore?: InputMaybe<Order_By>;
  findingTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severityId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "reporting_finding". All fields are combined with a logical 'AND'. */
export type Finding_Bool_Exp = {
  _and?: InputMaybe<Array<Finding_Bool_Exp>>;
  _not?: InputMaybe<Finding_Bool_Exp>;
  _or?: InputMaybe<Array<Finding_Bool_Exp>>;
  comments?: InputMaybe<FindingNote_Bool_Exp>;
  comments_aggregate?: InputMaybe<FindingNote_Aggregate_Bool_Exp>;
  cvssScore?: InputMaybe<Float8_Comparison_Exp>;
  cvssVector?: InputMaybe<String_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  extraFields?: InputMaybe<Jsonb_Comparison_Exp>;
  findingGuidance?: InputMaybe<String_Comparison_Exp>;
  findingTypeId?: InputMaybe<Bigint_Comparison_Exp>;
  hostDetectionTechniques?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  impact?: InputMaybe<String_Comparison_Exp>;
  mitigation?: InputMaybe<String_Comparison_Exp>;
  networkDetectionTechniques?: InputMaybe<String_Comparison_Exp>;
  references?: InputMaybe<String_Comparison_Exp>;
  replication_steps?: InputMaybe<String_Comparison_Exp>;
  severity?: InputMaybe<FindingSeverity_Bool_Exp>;
  severityId?: InputMaybe<Bigint_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  type?: InputMaybe<FindingType_Bool_Exp>;
};

/** unique or primary key constraints on table "reporting_finding" */
export enum Finding_Constraint {
  /** unique or primary key constraint on columns "id" */
  ReportingFindingPkey = 'reporting_finding_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Finding_Delete_At_Path_Input = {
  extraFields?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Finding_Delete_Elem_Input = {
  extraFields?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Finding_Delete_Key_Input = {
  extraFields?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "reporting_finding" */
export type Finding_Inc_Input = {
  cvssScore?: InputMaybe<Scalars['float8']['input']>;
  findingTypeId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  severityId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "reporting_finding" */
export type Finding_Insert_Input = {
  comments?: InputMaybe<FindingNote_Arr_Rel_Insert_Input>;
  cvssScore?: InputMaybe<Scalars['float8']['input']>;
  cvssVector?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  findingGuidance?: InputMaybe<Scalars['String']['input']>;
  findingTypeId?: InputMaybe<Scalars['bigint']['input']>;
  hostDetectionTechniques?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  impact?: InputMaybe<Scalars['String']['input']>;
  mitigation?: InputMaybe<Scalars['String']['input']>;
  networkDetectionTechniques?: InputMaybe<Scalars['String']['input']>;
  references?: InputMaybe<Scalars['String']['input']>;
  replication_steps?: InputMaybe<Scalars['String']['input']>;
  severity?: InputMaybe<FindingSeverity_Obj_Rel_Insert_Input>;
  severityId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<FindingType_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Finding_Max_Fields = {
  __typename?: 'finding_max_fields';
  cvssScore?: Maybe<Scalars['float8']['output']>;
  cvssVector?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  findingGuidance?: Maybe<Scalars['String']['output']>;
  findingTypeId?: Maybe<Scalars['bigint']['output']>;
  hostDetectionTechniques?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  impact?: Maybe<Scalars['String']['output']>;
  mitigation?: Maybe<Scalars['String']['output']>;
  networkDetectionTechniques?: Maybe<Scalars['String']['output']>;
  references?: Maybe<Scalars['String']['output']>;
  replication_steps?: Maybe<Scalars['String']['output']>;
  severityId?: Maybe<Scalars['bigint']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "reporting_finding" */
export type Finding_Max_Order_By = {
  cvssScore?: InputMaybe<Order_By>;
  cvssVector?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  findingGuidance?: InputMaybe<Order_By>;
  findingTypeId?: InputMaybe<Order_By>;
  hostDetectionTechniques?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  impact?: InputMaybe<Order_By>;
  mitigation?: InputMaybe<Order_By>;
  networkDetectionTechniques?: InputMaybe<Order_By>;
  references?: InputMaybe<Order_By>;
  replication_steps?: InputMaybe<Order_By>;
  severityId?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Finding_Min_Fields = {
  __typename?: 'finding_min_fields';
  cvssScore?: Maybe<Scalars['float8']['output']>;
  cvssVector?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  findingGuidance?: Maybe<Scalars['String']['output']>;
  findingTypeId?: Maybe<Scalars['bigint']['output']>;
  hostDetectionTechniques?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  impact?: Maybe<Scalars['String']['output']>;
  mitigation?: Maybe<Scalars['String']['output']>;
  networkDetectionTechniques?: Maybe<Scalars['String']['output']>;
  references?: Maybe<Scalars['String']['output']>;
  replication_steps?: Maybe<Scalars['String']['output']>;
  severityId?: Maybe<Scalars['bigint']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "reporting_finding" */
export type Finding_Min_Order_By = {
  cvssScore?: InputMaybe<Order_By>;
  cvssVector?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  findingGuidance?: InputMaybe<Order_By>;
  findingTypeId?: InputMaybe<Order_By>;
  hostDetectionTechniques?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  impact?: InputMaybe<Order_By>;
  mitigation?: InputMaybe<Order_By>;
  networkDetectionTechniques?: InputMaybe<Order_By>;
  references?: InputMaybe<Order_By>;
  replication_steps?: InputMaybe<Order_By>;
  severityId?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "reporting_finding" */
export type Finding_Mutation_Response = {
  __typename?: 'finding_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Finding>;
};

/** input type for inserting object relation for remote table "reporting_finding" */
export type Finding_Obj_Rel_Insert_Input = {
  data: Finding_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Finding_On_Conflict>;
};

/** on_conflict condition type for table "reporting_finding" */
export type Finding_On_Conflict = {
  constraint: Finding_Constraint;
  update_columns?: Array<Finding_Update_Column>;
  where?: InputMaybe<Finding_Bool_Exp>;
};

/** Ordering options when selecting data from "reporting_finding". */
export type Finding_Order_By = {
  comments_aggregate?: InputMaybe<FindingNote_Aggregate_Order_By>;
  cvssScore?: InputMaybe<Order_By>;
  cvssVector?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  extraFields?: InputMaybe<Order_By>;
  findingGuidance?: InputMaybe<Order_By>;
  findingTypeId?: InputMaybe<Order_By>;
  hostDetectionTechniques?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  impact?: InputMaybe<Order_By>;
  mitigation?: InputMaybe<Order_By>;
  networkDetectionTechniques?: InputMaybe<Order_By>;
  references?: InputMaybe<Order_By>;
  replication_steps?: InputMaybe<Order_By>;
  severity?: InputMaybe<FindingSeverity_Order_By>;
  severityId?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  type?: InputMaybe<FindingType_Order_By>;
};

/** primary key columns input for table: reporting_finding */
export type Finding_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Finding_Prepend_Input = {
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "reporting_finding" */
export enum Finding_Select_Column {
  /** column name */
  CvssScore = 'cvssScore',
  /** column name */
  CvssVector = 'cvssVector',
  /** column name */
  Description = 'description',
  /** column name */
  ExtraFields = 'extraFields',
  /** column name */
  FindingGuidance = 'findingGuidance',
  /** column name */
  FindingTypeId = 'findingTypeId',
  /** column name */
  HostDetectionTechniques = 'hostDetectionTechniques',
  /** column name */
  Id = 'id',
  /** column name */
  Impact = 'impact',
  /** column name */
  Mitigation = 'mitigation',
  /** column name */
  NetworkDetectionTechniques = 'networkDetectionTechniques',
  /** column name */
  References = 'references',
  /** column name */
  ReplicationSteps = 'replication_steps',
  /** column name */
  SeverityId = 'severityId',
  /** column name */
  Title = 'title'
}

/** select "finding_aggregate_bool_exp_avg_arguments_columns" columns of table "reporting_finding" */
export enum Finding_Select_Column_Finding_Aggregate_Bool_Exp_Avg_Arguments_Columns {
  /** column name */
  CvssScore = 'cvssScore'
}

/** select "finding_aggregate_bool_exp_corr_arguments_columns" columns of table "reporting_finding" */
export enum Finding_Select_Column_Finding_Aggregate_Bool_Exp_Corr_Arguments_Columns {
  /** column name */
  CvssScore = 'cvssScore'
}

/** select "finding_aggregate_bool_exp_covar_samp_arguments_columns" columns of table "reporting_finding" */
export enum Finding_Select_Column_Finding_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns {
  /** column name */
  CvssScore = 'cvssScore'
}

/** select "finding_aggregate_bool_exp_max_arguments_columns" columns of table "reporting_finding" */
export enum Finding_Select_Column_Finding_Aggregate_Bool_Exp_Max_Arguments_Columns {
  /** column name */
  CvssScore = 'cvssScore'
}

/** select "finding_aggregate_bool_exp_min_arguments_columns" columns of table "reporting_finding" */
export enum Finding_Select_Column_Finding_Aggregate_Bool_Exp_Min_Arguments_Columns {
  /** column name */
  CvssScore = 'cvssScore'
}

/** select "finding_aggregate_bool_exp_stddev_samp_arguments_columns" columns of table "reporting_finding" */
export enum Finding_Select_Column_Finding_Aggregate_Bool_Exp_Stddev_Samp_Arguments_Columns {
  /** column name */
  CvssScore = 'cvssScore'
}

/** select "finding_aggregate_bool_exp_sum_arguments_columns" columns of table "reporting_finding" */
export enum Finding_Select_Column_Finding_Aggregate_Bool_Exp_Sum_Arguments_Columns {
  /** column name */
  CvssScore = 'cvssScore'
}

/** select "finding_aggregate_bool_exp_var_samp_arguments_columns" columns of table "reporting_finding" */
export enum Finding_Select_Column_Finding_Aggregate_Bool_Exp_Var_Samp_Arguments_Columns {
  /** column name */
  CvssScore = 'cvssScore'
}

/** input type for updating data in table "reporting_finding" */
export type Finding_Set_Input = {
  cvssScore?: InputMaybe<Scalars['float8']['input']>;
  cvssVector?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  findingGuidance?: InputMaybe<Scalars['String']['input']>;
  findingTypeId?: InputMaybe<Scalars['bigint']['input']>;
  hostDetectionTechniques?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  impact?: InputMaybe<Scalars['String']['input']>;
  mitigation?: InputMaybe<Scalars['String']['input']>;
  networkDetectionTechniques?: InputMaybe<Scalars['String']['input']>;
  references?: InputMaybe<Scalars['String']['input']>;
  replication_steps?: InputMaybe<Scalars['String']['input']>;
  severityId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Finding_Stddev_Fields = {
  __typename?: 'finding_stddev_fields';
  cvssScore?: Maybe<Scalars['Float']['output']>;
  findingTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  severityId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "reporting_finding" */
export type Finding_Stddev_Order_By = {
  cvssScore?: InputMaybe<Order_By>;
  findingTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severityId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Finding_Stddev_Pop_Fields = {
  __typename?: 'finding_stddev_pop_fields';
  cvssScore?: Maybe<Scalars['Float']['output']>;
  findingTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  severityId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "reporting_finding" */
export type Finding_Stddev_Pop_Order_By = {
  cvssScore?: InputMaybe<Order_By>;
  findingTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severityId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Finding_Stddev_Samp_Fields = {
  __typename?: 'finding_stddev_samp_fields';
  cvssScore?: Maybe<Scalars['Float']['output']>;
  findingTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  severityId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "reporting_finding" */
export type Finding_Stddev_Samp_Order_By = {
  cvssScore?: InputMaybe<Order_By>;
  findingTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severityId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "finding" */
export type Finding_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Finding_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Finding_Stream_Cursor_Value_Input = {
  cvssScore?: InputMaybe<Scalars['float8']['input']>;
  cvssVector?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  findingGuidance?: InputMaybe<Scalars['String']['input']>;
  findingTypeId?: InputMaybe<Scalars['bigint']['input']>;
  hostDetectionTechniques?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  impact?: InputMaybe<Scalars['String']['input']>;
  mitigation?: InputMaybe<Scalars['String']['input']>;
  networkDetectionTechniques?: InputMaybe<Scalars['String']['input']>;
  references?: InputMaybe<Scalars['String']['input']>;
  replication_steps?: InputMaybe<Scalars['String']['input']>;
  severityId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Finding_Sum_Fields = {
  __typename?: 'finding_sum_fields';
  cvssScore?: Maybe<Scalars['float8']['output']>;
  findingTypeId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  severityId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "reporting_finding" */
export type Finding_Sum_Order_By = {
  cvssScore?: InputMaybe<Order_By>;
  findingTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severityId?: InputMaybe<Order_By>;
};

/** update columns of table "reporting_finding" */
export enum Finding_Update_Column {
  /** column name */
  CvssScore = 'cvssScore',
  /** column name */
  CvssVector = 'cvssVector',
  /** column name */
  Description = 'description',
  /** column name */
  ExtraFields = 'extraFields',
  /** column name */
  FindingGuidance = 'findingGuidance',
  /** column name */
  FindingTypeId = 'findingTypeId',
  /** column name */
  HostDetectionTechniques = 'hostDetectionTechniques',
  /** column name */
  Id = 'id',
  /** column name */
  Impact = 'impact',
  /** column name */
  Mitigation = 'mitigation',
  /** column name */
  NetworkDetectionTechniques = 'networkDetectionTechniques',
  /** column name */
  References = 'references',
  /** column name */
  ReplicationSteps = 'replication_steps',
  /** column name */
  SeverityId = 'severityId',
  /** column name */
  Title = 'title'
}

export type Finding_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Finding_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Finding_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Finding_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Finding_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Finding_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Finding_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Finding_Set_Input>;
  /** filter the rows which have to be updated */
  where: Finding_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Finding_Var_Pop_Fields = {
  __typename?: 'finding_var_pop_fields';
  cvssScore?: Maybe<Scalars['Float']['output']>;
  findingTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  severityId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "reporting_finding" */
export type Finding_Var_Pop_Order_By = {
  cvssScore?: InputMaybe<Order_By>;
  findingTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severityId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Finding_Var_Samp_Fields = {
  __typename?: 'finding_var_samp_fields';
  cvssScore?: Maybe<Scalars['Float']['output']>;
  findingTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  severityId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "reporting_finding" */
export type Finding_Var_Samp_Order_By = {
  cvssScore?: InputMaybe<Order_By>;
  findingTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severityId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Finding_Variance_Fields = {
  __typename?: 'finding_variance_fields';
  cvssScore?: Maybe<Scalars['Float']['output']>;
  findingTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  severityId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "reporting_finding" */
export type Finding_Variance_Order_By = {
  cvssScore?: InputMaybe<Order_By>;
  findingTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  severityId?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'. */
export type Float8_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['float8']['input']>;
  _gt?: InputMaybe<Scalars['float8']['input']>;
  _gte?: InputMaybe<Scalars['float8']['input']>;
  _in?: InputMaybe<Array<Scalars['float8']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['float8']['input']>;
  _lte?: InputMaybe<Scalars['float8']['input']>;
  _neq?: InputMaybe<Scalars['float8']['input']>;
  _nin?: InputMaybe<Array<Scalars['float8']['input']>>;
};

/** columns and relationships of "auth_group" */
export type Group = {
  __typename?: 'group';
  /** An array relationship */
  groupPermissions: Array<GroupPermission>;
  /** An aggregate relationship */
  groupPermissions_aggregate: GroupPermission_Aggregate;
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  /** An array relationship */
  users: Array<UserGroup>;
  /** An aggregate relationship */
  users_aggregate: UserGroup_Aggregate;
};


/** columns and relationships of "auth_group" */
export type GroupGroupPermissionsArgs = {
  distinct_on?: InputMaybe<Array<GroupPermission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<GroupPermission_Order_By>>;
  where?: InputMaybe<GroupPermission_Bool_Exp>;
};


/** columns and relationships of "auth_group" */
export type GroupGroupPermissions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<GroupPermission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<GroupPermission_Order_By>>;
  where?: InputMaybe<GroupPermission_Bool_Exp>;
};


/** columns and relationships of "auth_group" */
export type GroupUsersArgs = {
  distinct_on?: InputMaybe<Array<UserGroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<UserGroup_Order_By>>;
  where?: InputMaybe<UserGroup_Bool_Exp>;
};


/** columns and relationships of "auth_group" */
export type GroupUsers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<UserGroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<UserGroup_Order_By>>;
  where?: InputMaybe<UserGroup_Bool_Exp>;
};

/** columns and relationships of "auth_group_permissions" */
export type GroupPermission = {
  __typename?: 'groupPermission';
  /** An object relationship */
  authGroup: Group;
  /** An object relationship */
  authPermission: AuthPermission;
  groupId: Scalars['Int']['output'];
  id: Scalars['bigint']['output'];
  permissionId: Scalars['Int']['output'];
};

/** aggregated selection of "auth_group_permissions" */
export type GroupPermission_Aggregate = {
  __typename?: 'groupPermission_aggregate';
  aggregate?: Maybe<GroupPermission_Aggregate_Fields>;
  nodes: Array<GroupPermission>;
};

export type GroupPermission_Aggregate_Bool_Exp = {
  count?: InputMaybe<GroupPermission_Aggregate_Bool_Exp_Count>;
};

export type GroupPermission_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<GroupPermission_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<GroupPermission_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "auth_group_permissions" */
export type GroupPermission_Aggregate_Fields = {
  __typename?: 'groupPermission_aggregate_fields';
  avg?: Maybe<GroupPermission_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<GroupPermission_Max_Fields>;
  min?: Maybe<GroupPermission_Min_Fields>;
  stddev?: Maybe<GroupPermission_Stddev_Fields>;
  stddev_pop?: Maybe<GroupPermission_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<GroupPermission_Stddev_Samp_Fields>;
  sum?: Maybe<GroupPermission_Sum_Fields>;
  var_pop?: Maybe<GroupPermission_Var_Pop_Fields>;
  var_samp?: Maybe<GroupPermission_Var_Samp_Fields>;
  variance?: Maybe<GroupPermission_Variance_Fields>;
};


/** aggregate fields of "auth_group_permissions" */
export type GroupPermission_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<GroupPermission_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "auth_group_permissions" */
export type GroupPermission_Aggregate_Order_By = {
  avg?: InputMaybe<GroupPermission_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<GroupPermission_Max_Order_By>;
  min?: InputMaybe<GroupPermission_Min_Order_By>;
  stddev?: InputMaybe<GroupPermission_Stddev_Order_By>;
  stddev_pop?: InputMaybe<GroupPermission_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<GroupPermission_Stddev_Samp_Order_By>;
  sum?: InputMaybe<GroupPermission_Sum_Order_By>;
  var_pop?: InputMaybe<GroupPermission_Var_Pop_Order_By>;
  var_samp?: InputMaybe<GroupPermission_Var_Samp_Order_By>;
  variance?: InputMaybe<GroupPermission_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "auth_group_permissions" */
export type GroupPermission_Arr_Rel_Insert_Input = {
  data: Array<GroupPermission_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<GroupPermission_On_Conflict>;
};

/** aggregate avg on columns */
export type GroupPermission_Avg_Fields = {
  __typename?: 'groupPermission_avg_fields';
  groupId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  permissionId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "auth_group_permissions" */
export type GroupPermission_Avg_Order_By = {
  groupId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  permissionId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "auth_group_permissions". All fields are combined with a logical 'AND'. */
export type GroupPermission_Bool_Exp = {
  _and?: InputMaybe<Array<GroupPermission_Bool_Exp>>;
  _not?: InputMaybe<GroupPermission_Bool_Exp>;
  _or?: InputMaybe<Array<GroupPermission_Bool_Exp>>;
  authGroup?: InputMaybe<Group_Bool_Exp>;
  authPermission?: InputMaybe<AuthPermission_Bool_Exp>;
  groupId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  permissionId?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "auth_group_permissions" */
export enum GroupPermission_Constraint {
  /** unique or primary key constraint on columns "permission_id", "group_id" */
  AuthGroupPermissionsGroupIdPermissionId_0cd325b0Uniq = 'auth_group_permissions_group_id_permission_id_0cd325b0_uniq',
  /** unique or primary key constraint on columns "id" */
  AuthGroupPermissionsPkey = 'auth_group_permissions_pkey'
}

/** input type for incrementing numeric columns in table "auth_group_permissions" */
export type GroupPermission_Inc_Input = {
  groupId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  permissionId?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "auth_group_permissions" */
export type GroupPermission_Insert_Input = {
  authGroup?: InputMaybe<Group_Obj_Rel_Insert_Input>;
  authPermission?: InputMaybe<AuthPermission_Obj_Rel_Insert_Input>;
  groupId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  permissionId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type GroupPermission_Max_Fields = {
  __typename?: 'groupPermission_max_fields';
  groupId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  permissionId?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "auth_group_permissions" */
export type GroupPermission_Max_Order_By = {
  groupId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  permissionId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type GroupPermission_Min_Fields = {
  __typename?: 'groupPermission_min_fields';
  groupId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  permissionId?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "auth_group_permissions" */
export type GroupPermission_Min_Order_By = {
  groupId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  permissionId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "auth_group_permissions" */
export type GroupPermission_Mutation_Response = {
  __typename?: 'groupPermission_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<GroupPermission>;
};

/** on_conflict condition type for table "auth_group_permissions" */
export type GroupPermission_On_Conflict = {
  constraint: GroupPermission_Constraint;
  update_columns?: Array<GroupPermission_Update_Column>;
  where?: InputMaybe<GroupPermission_Bool_Exp>;
};

/** Ordering options when selecting data from "auth_group_permissions". */
export type GroupPermission_Order_By = {
  authGroup?: InputMaybe<Group_Order_By>;
  authPermission?: InputMaybe<AuthPermission_Order_By>;
  groupId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  permissionId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: auth_group_permissions */
export type GroupPermission_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "auth_group_permissions" */
export enum GroupPermission_Select_Column {
  /** column name */
  GroupId = 'groupId',
  /** column name */
  Id = 'id',
  /** column name */
  PermissionId = 'permissionId'
}

/** input type for updating data in table "auth_group_permissions" */
export type GroupPermission_Set_Input = {
  groupId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  permissionId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type GroupPermission_Stddev_Fields = {
  __typename?: 'groupPermission_stddev_fields';
  groupId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  permissionId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "auth_group_permissions" */
export type GroupPermission_Stddev_Order_By = {
  groupId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  permissionId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type GroupPermission_Stddev_Pop_Fields = {
  __typename?: 'groupPermission_stddev_pop_fields';
  groupId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  permissionId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "auth_group_permissions" */
export type GroupPermission_Stddev_Pop_Order_By = {
  groupId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  permissionId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type GroupPermission_Stddev_Samp_Fields = {
  __typename?: 'groupPermission_stddev_samp_fields';
  groupId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  permissionId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "auth_group_permissions" */
export type GroupPermission_Stddev_Samp_Order_By = {
  groupId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  permissionId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "groupPermission" */
export type GroupPermission_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: GroupPermission_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type GroupPermission_Stream_Cursor_Value_Input = {
  groupId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  permissionId?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type GroupPermission_Sum_Fields = {
  __typename?: 'groupPermission_sum_fields';
  groupId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  permissionId?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "auth_group_permissions" */
export type GroupPermission_Sum_Order_By = {
  groupId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  permissionId?: InputMaybe<Order_By>;
};

/** update columns of table "auth_group_permissions" */
export enum GroupPermission_Update_Column {
  /** column name */
  GroupId = 'groupId',
  /** column name */
  Id = 'id',
  /** column name */
  PermissionId = 'permissionId'
}

export type GroupPermission_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<GroupPermission_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<GroupPermission_Set_Input>;
  /** filter the rows which have to be updated */
  where: GroupPermission_Bool_Exp;
};

/** aggregate var_pop on columns */
export type GroupPermission_Var_Pop_Fields = {
  __typename?: 'groupPermission_var_pop_fields';
  groupId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  permissionId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "auth_group_permissions" */
export type GroupPermission_Var_Pop_Order_By = {
  groupId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  permissionId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type GroupPermission_Var_Samp_Fields = {
  __typename?: 'groupPermission_var_samp_fields';
  groupId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  permissionId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "auth_group_permissions" */
export type GroupPermission_Var_Samp_Order_By = {
  groupId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  permissionId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type GroupPermission_Variance_Fields = {
  __typename?: 'groupPermission_variance_fields';
  groupId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  permissionId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "auth_group_permissions" */
export type GroupPermission_Variance_Order_By = {
  groupId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  permissionId?: InputMaybe<Order_By>;
};

/** aggregated selection of "auth_group" */
export type Group_Aggregate = {
  __typename?: 'group_aggregate';
  aggregate?: Maybe<Group_Aggregate_Fields>;
  nodes: Array<Group>;
};

/** aggregate fields of "auth_group" */
export type Group_Aggregate_Fields = {
  __typename?: 'group_aggregate_fields';
  avg?: Maybe<Group_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Group_Max_Fields>;
  min?: Maybe<Group_Min_Fields>;
  stddev?: Maybe<Group_Stddev_Fields>;
  stddev_pop?: Maybe<Group_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Group_Stddev_Samp_Fields>;
  sum?: Maybe<Group_Sum_Fields>;
  var_pop?: Maybe<Group_Var_Pop_Fields>;
  var_samp?: Maybe<Group_Var_Samp_Fields>;
  variance?: Maybe<Group_Variance_Fields>;
};


/** aggregate fields of "auth_group" */
export type Group_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Group_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Group_Avg_Fields = {
  __typename?: 'group_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "auth_group". All fields are combined with a logical 'AND'. */
export type Group_Bool_Exp = {
  _and?: InputMaybe<Array<Group_Bool_Exp>>;
  _not?: InputMaybe<Group_Bool_Exp>;
  _or?: InputMaybe<Array<Group_Bool_Exp>>;
  groupPermissions?: InputMaybe<GroupPermission_Bool_Exp>;
  groupPermissions_aggregate?: InputMaybe<GroupPermission_Aggregate_Bool_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  users?: InputMaybe<UserGroup_Bool_Exp>;
  users_aggregate?: InputMaybe<UserGroup_Aggregate_Bool_Exp>;
};

/** unique or primary key constraints on table "auth_group" */
export enum Group_Constraint {
  /** unique or primary key constraint on columns "name" */
  AuthGroupNameKey = 'auth_group_name_key',
  /** unique or primary key constraint on columns "id" */
  AuthGroupPkey = 'auth_group_pkey'
}

/** input type for incrementing numeric columns in table "auth_group" */
export type Group_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "auth_group" */
export type Group_Insert_Input = {
  groupPermissions?: InputMaybe<GroupPermission_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  users?: InputMaybe<UserGroup_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Group_Max_Fields = {
  __typename?: 'group_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Group_Min_Fields = {
  __typename?: 'group_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "auth_group" */
export type Group_Mutation_Response = {
  __typename?: 'group_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Group>;
};

/** input type for inserting object relation for remote table "auth_group" */
export type Group_Obj_Rel_Insert_Input = {
  data: Group_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Group_On_Conflict>;
};

/** on_conflict condition type for table "auth_group" */
export type Group_On_Conflict = {
  constraint: Group_Constraint;
  update_columns?: Array<Group_Update_Column>;
  where?: InputMaybe<Group_Bool_Exp>;
};

/** Ordering options when selecting data from "auth_group". */
export type Group_Order_By = {
  groupPermissions_aggregate?: InputMaybe<GroupPermission_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  users_aggregate?: InputMaybe<UserGroup_Aggregate_Order_By>;
};

/** primary key columns input for table: auth_group */
export type Group_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "auth_group" */
export enum Group_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "auth_group" */
export type Group_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Group_Stddev_Fields = {
  __typename?: 'group_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Group_Stddev_Pop_Fields = {
  __typename?: 'group_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Group_Stddev_Samp_Fields = {
  __typename?: 'group_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "group" */
export type Group_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Group_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Group_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Group_Sum_Fields = {
  __typename?: 'group_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "auth_group" */
export enum Group_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name'
}

export type Group_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Group_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Group_Set_Input>;
  /** filter the rows which have to be updated */
  where: Group_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Group_Var_Pop_Fields = {
  __typename?: 'group_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Group_Var_Samp_Fields = {
  __typename?: 'group_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Group_Variance_Fields = {
  __typename?: 'group_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "shepherd_healthstatus" */
export type HealthStatus = {
  __typename?: 'healthStatus';
  /** An array relationship */
  domains: Array<Domain>;
  /** An aggregate relationship */
  domains_aggregate: Domain_Aggregate;
  healthStatus: Scalars['String']['output'];
  id: Scalars['bigint']['output'];
};


/** columns and relationships of "shepherd_healthstatus" */
export type HealthStatusDomainsArgs = {
  distinct_on?: InputMaybe<Array<Domain_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Domain_Order_By>>;
  where?: InputMaybe<Domain_Bool_Exp>;
};


/** columns and relationships of "shepherd_healthstatus" */
export type HealthStatusDomains_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Domain_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Domain_Order_By>>;
  where?: InputMaybe<Domain_Bool_Exp>;
};

/** aggregated selection of "shepherd_healthstatus" */
export type HealthStatus_Aggregate = {
  __typename?: 'healthStatus_aggregate';
  aggregate?: Maybe<HealthStatus_Aggregate_Fields>;
  nodes: Array<HealthStatus>;
};

/** aggregate fields of "shepherd_healthstatus" */
export type HealthStatus_Aggregate_Fields = {
  __typename?: 'healthStatus_aggregate_fields';
  avg?: Maybe<HealthStatus_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<HealthStatus_Max_Fields>;
  min?: Maybe<HealthStatus_Min_Fields>;
  stddev?: Maybe<HealthStatus_Stddev_Fields>;
  stddev_pop?: Maybe<HealthStatus_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<HealthStatus_Stddev_Samp_Fields>;
  sum?: Maybe<HealthStatus_Sum_Fields>;
  var_pop?: Maybe<HealthStatus_Var_Pop_Fields>;
  var_samp?: Maybe<HealthStatus_Var_Samp_Fields>;
  variance?: Maybe<HealthStatus_Variance_Fields>;
};


/** aggregate fields of "shepherd_healthstatus" */
export type HealthStatus_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<HealthStatus_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type HealthStatus_Avg_Fields = {
  __typename?: 'healthStatus_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "shepherd_healthstatus". All fields are combined with a logical 'AND'. */
export type HealthStatus_Bool_Exp = {
  _and?: InputMaybe<Array<HealthStatus_Bool_Exp>>;
  _not?: InputMaybe<HealthStatus_Bool_Exp>;
  _or?: InputMaybe<Array<HealthStatus_Bool_Exp>>;
  domains?: InputMaybe<Domain_Bool_Exp>;
  domains_aggregate?: InputMaybe<Domain_Aggregate_Bool_Exp>;
  healthStatus?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "shepherd_healthstatus" */
export enum HealthStatus_Constraint {
  /** unique or primary key constraint on columns "health_status" */
  ShepherdHealthstatusHealthStatusKey = 'shepherd_healthstatus_health_status_key',
  /** unique or primary key constraint on columns "id" */
  ShepherdHealthstatusPkey = 'shepherd_healthstatus_pkey'
}

/** input type for incrementing numeric columns in table "shepherd_healthstatus" */
export type HealthStatus_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "shepherd_healthstatus" */
export type HealthStatus_Insert_Input = {
  domains?: InputMaybe<Domain_Arr_Rel_Insert_Input>;
  healthStatus?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate max on columns */
export type HealthStatus_Max_Fields = {
  __typename?: 'healthStatus_max_fields';
  healthStatus?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
};

/** aggregate min on columns */
export type HealthStatus_Min_Fields = {
  __typename?: 'healthStatus_min_fields';
  healthStatus?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
};

/** response of any mutation on the table "shepherd_healthstatus" */
export type HealthStatus_Mutation_Response = {
  __typename?: 'healthStatus_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<HealthStatus>;
};

/** input type for inserting object relation for remote table "shepherd_healthstatus" */
export type HealthStatus_Obj_Rel_Insert_Input = {
  data: HealthStatus_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<HealthStatus_On_Conflict>;
};

/** on_conflict condition type for table "shepherd_healthstatus" */
export type HealthStatus_On_Conflict = {
  constraint: HealthStatus_Constraint;
  update_columns?: Array<HealthStatus_Update_Column>;
  where?: InputMaybe<HealthStatus_Bool_Exp>;
};

/** Ordering options when selecting data from "shepherd_healthstatus". */
export type HealthStatus_Order_By = {
  domains_aggregate?: InputMaybe<Domain_Aggregate_Order_By>;
  healthStatus?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: shepherd_healthstatus */
export type HealthStatus_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "shepherd_healthstatus" */
export enum HealthStatus_Select_Column {
  /** column name */
  HealthStatus = 'healthStatus',
  /** column name */
  Id = 'id'
}

/** input type for updating data in table "shepherd_healthstatus" */
export type HealthStatus_Set_Input = {
  healthStatus?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate stddev on columns */
export type HealthStatus_Stddev_Fields = {
  __typename?: 'healthStatus_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type HealthStatus_Stddev_Pop_Fields = {
  __typename?: 'healthStatus_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type HealthStatus_Stddev_Samp_Fields = {
  __typename?: 'healthStatus_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "healthStatus" */
export type HealthStatus_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: HealthStatus_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type HealthStatus_Stream_Cursor_Value_Input = {
  healthStatus?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type HealthStatus_Sum_Fields = {
  __typename?: 'healthStatus_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
};

/** update columns of table "shepherd_healthstatus" */
export enum HealthStatus_Update_Column {
  /** column name */
  HealthStatus = 'healthStatus',
  /** column name */
  Id = 'id'
}

export type HealthStatus_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<HealthStatus_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<HealthStatus_Set_Input>;
  /** filter the rows which have to be updated */
  where: HealthStatus_Bool_Exp;
};

/** aggregate var_pop on columns */
export type HealthStatus_Var_Pop_Fields = {
  __typename?: 'healthStatus_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type HealthStatus_Var_Samp_Fields = {
  __typename?: 'healthStatus_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type HealthStatus_Variance_Fields = {
  __typename?: 'healthStatus_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to compare columns of type "inet". All fields are combined with logical 'AND'. */
export type Inet_Array_Comparison_Exp = {
  /** is the array contained in the given array value */
  _contained_in?: InputMaybe<Array<Scalars['inet']['input']>>;
  /** does the array contain the given value */
  _contains?: InputMaybe<Array<Scalars['inet']['input']>>;
  _eq?: InputMaybe<Array<Scalars['inet']['input']>>;
  _gt?: InputMaybe<Array<Scalars['inet']['input']>>;
  _gte?: InputMaybe<Array<Scalars['inet']['input']>>;
  _in?: InputMaybe<Array<Array<Scalars['inet']['input']>>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Array<Scalars['inet']['input']>>;
  _lte?: InputMaybe<Array<Scalars['inet']['input']>>;
  _neq?: InputMaybe<Array<Scalars['inet']['input']>>;
  _nin?: InputMaybe<Array<Array<Scalars['inet']['input']>>>;
};

/** Boolean expression to compare columns of type "inet". All fields are combined with logical 'AND'. */
export type Inet_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['inet']['input']>;
  _gt?: InputMaybe<Scalars['inet']['input']>;
  _gte?: InputMaybe<Scalars['inet']['input']>;
  _in?: InputMaybe<Array<Scalars['inet']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['inet']['input']>;
  _lte?: InputMaybe<Scalars['inet']['input']>;
  _neq?: InputMaybe<Scalars['inet']['input']>;
  _nin?: InputMaybe<Array<Scalars['inet']['input']>>;
};

export type Jsonb_Cast_Exp = {
  String?: InputMaybe<String_Comparison_Exp>;
};

/** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
export type Jsonb_Comparison_Exp = {
  _cast?: InputMaybe<Jsonb_Cast_Exp>;
  /** is the column contained in the given json value */
  _contained_in?: InputMaybe<Scalars['jsonb']['input']>;
  /** does the column contain the given json value at the top level */
  _contains?: InputMaybe<Scalars['jsonb']['input']>;
  _eq?: InputMaybe<Scalars['jsonb']['input']>;
  _gt?: InputMaybe<Scalars['jsonb']['input']>;
  _gte?: InputMaybe<Scalars['jsonb']['input']>;
  /** does the string exist as a top-level key in the column */
  _has_key?: InputMaybe<Scalars['String']['input']>;
  /** do all of these strings exist as top-level keys in the column */
  _has_keys_all?: InputMaybe<Array<Scalars['String']['input']>>;
  /** do any of these strings exist as top-level keys in the column */
  _has_keys_any?: InputMaybe<Array<Scalars['String']['input']>>;
  _in?: InputMaybe<Array<Scalars['jsonb']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['jsonb']['input']>;
  _lte?: InputMaybe<Scalars['jsonb']['input']>;
  _neq?: InputMaybe<Scalars['jsonb']['input']>;
  _nin?: InputMaybe<Array<Scalars['jsonb']['input']>>;
};

/** mutation root */
export type Mutation_Root = {
  __typename?: 'mutation_root';
  /** Attach a finding from the library to a report */
  attachFinding?: Maybe<AttachFindingResponse>;
  /** Attempt to checkout a domain for a project */
  checkoutDomain?: Maybe<CheckoutResponse>;
  /** Attempt to checkout a server for a project */
  checkoutServer?: Maybe<CheckoutResponse>;
  /** Attempt to create a new user with the specified details */
  createUser?: Maybe<CreateUserResponse>;
  /** Delete the specified domain checkout and release the domain if deleted entry was the latest checkout */
  deleteDomainCheckout?: Maybe<CheckoutResponse>;
  /** Delete the specified server checkout and release the server if deleted entry was the latest checkout */
  deleteServerCheckout?: Maybe<CheckoutResponse>;
  /** Delete the specified template file and remove the associated file from the filesystem */
  deleteTemplate?: Maybe<DeleteResponse>;
  /** delete data from the table: "shepherd_activitytype" */
  delete_activityType?: Maybe<ActivityType_Mutation_Response>;
  /** delete single row from the table: "shepherd_activitytype" */
  delete_activityType_by_pk?: Maybe<ActivityType>;
  /** delete data from the table: "reporting_archive" */
  delete_archive?: Maybe<Archive_Mutation_Response>;
  /** delete single row from the table: "reporting_archive" */
  delete_archive_by_pk?: Maybe<Archive>;
  /** delete data from the table: "auth_permission" */
  delete_authPermission?: Maybe<AuthPermission_Mutation_Response>;
  /** delete single row from the table: "auth_permission" */
  delete_authPermission_by_pk?: Maybe<AuthPermission>;
  /** delete data from the table: "shepherd_auxserveraddress" */
  delete_auxServerAddresses?: Maybe<AuxServerAddresses_Mutation_Response>;
  /** delete single row from the table: "shepherd_auxserveraddress" */
  delete_auxServerAddresses_by_pk?: Maybe<AuxServerAddresses>;
  /** delete data from the table: "rolodex_client" */
  delete_client?: Maybe<Client_Mutation_Response>;
  /** delete data from the table: "rolodex_clientcontact" */
  delete_clientContact?: Maybe<ClientContact_Mutation_Response>;
  /** delete single row from the table: "rolodex_clientcontact" */
  delete_clientContact_by_pk?: Maybe<ClientContact>;
  /** delete data from the table: "rolodex_clientinvite" */
  delete_clientInvite?: Maybe<ClientInvite_Mutation_Response>;
  /** delete single row from the table: "rolodex_clientinvite" */
  delete_clientInvite_by_pk?: Maybe<ClientInvite>;
  /** delete data from the table: "rolodex_clientnote" */
  delete_clientNote?: Maybe<ClientNote_Mutation_Response>;
  /** delete single row from the table: "rolodex_clientnote" */
  delete_clientNote_by_pk?: Maybe<ClientNote>;
  /** delete single row from the table: "rolodex_client" */
  delete_client_by_pk?: Maybe<Client>;
  /** delete data from the table: "shepherd_transientserver" */
  delete_cloudServer?: Maybe<CloudServer_Mutation_Response>;
  /** delete single row from the table: "shepherd_transientserver" */
  delete_cloudServer_by_pk?: Maybe<CloudServer>;
  /** delete data from the table: "commandcenter_companyinformation" */
  delete_companyInfo?: Maybe<CompanyInfo_Mutation_Response>;
  /** delete single row from the table: "commandcenter_companyinformation" */
  delete_companyInfo_by_pk?: Maybe<CompanyInfo>;
  /** delete data from the table: "rolodex_deconfliction" */
  delete_deconfliction?: Maybe<Deconfliction_Mutation_Response>;
  /** delete data from the table: "rolodex_deconflictionstatus" */
  delete_deconflictionStatus?: Maybe<DeconflictionStatus_Mutation_Response>;
  /** delete single row from the table: "rolodex_deconflictionstatus" */
  delete_deconflictionStatus_by_pk?: Maybe<DeconflictionStatus>;
  /** delete single row from the table: "rolodex_deconfliction" */
  delete_deconfliction_by_pk?: Maybe<Deconfliction>;
  /** delete data from the table: "django_content_type" */
  delete_djangoContentType?: Maybe<DjangoContentType_Mutation_Response>;
  /** delete single row from the table: "django_content_type" */
  delete_djangoContentType_by_pk?: Maybe<DjangoContentType>;
  /** delete data from the table: "reporting_doctype" */
  delete_docType?: Maybe<DocType_Mutation_Response>;
  /** delete single row from the table: "reporting_doctype" */
  delete_docType_by_pk?: Maybe<DocType>;
  /** delete data from the table: "shepherd_domain" */
  delete_domain?: Maybe<Domain_Mutation_Response>;
  /** delete data from the table: "shepherd_history" */
  delete_domainCheckout?: Maybe<DomainCheckout_Mutation_Response>;
  /** delete single row from the table: "shepherd_history" */
  delete_domainCheckout_by_pk?: Maybe<DomainCheckout>;
  /** delete data from the table: "shepherd_domainnote" */
  delete_domainNote?: Maybe<DomainNote_Mutation_Response>;
  /** delete single row from the table: "shepherd_domainnote" */
  delete_domainNote_by_pk?: Maybe<DomainNote>;
  /** delete data from the table: "shepherd_domainserverconnection" */
  delete_domainServerConnection?: Maybe<DomainServerConnection_Mutation_Response>;
  /** delete single row from the table: "shepherd_domainserverconnection" */
  delete_domainServerConnection_by_pk?: Maybe<DomainServerConnection>;
  /** delete data from the table: "shepherd_domainstatus" */
  delete_domainStatus?: Maybe<DomainStatus_Mutation_Response>;
  /** delete single row from the table: "shepherd_domainstatus" */
  delete_domainStatus_by_pk?: Maybe<DomainStatus>;
  /** delete single row from the table: "shepherd_domain" */
  delete_domain_by_pk?: Maybe<Domain>;
  /** delete data from the table: "reporting_evidence" */
  delete_evidence?: Maybe<Evidence_Mutation_Response>;
  /** delete single row from the table: "reporting_evidence" */
  delete_evidence_by_pk?: Maybe<Evidence>;
  /** delete data from the table: "commandcenter_extrafieldmodel" */
  delete_extraFieldModel?: Maybe<ExtraFieldModel_Mutation_Response>;
  /** delete single row from the table: "commandcenter_extrafieldmodel" */
  delete_extraFieldModel_by_pk?: Maybe<ExtraFieldModel>;
  /** delete data from the table: "commandcenter_extrafieldspec" */
  delete_extraFieldSpec?: Maybe<ExtraFieldSpec_Mutation_Response>;
  /** delete single row from the table: "commandcenter_extrafieldspec" */
  delete_extraFieldSpec_by_pk?: Maybe<ExtraFieldSpec>;
  /** delete data from the table: "reporting_finding" */
  delete_finding?: Maybe<Finding_Mutation_Response>;
  /** delete data from the table: "reporting_findingnote" */
  delete_findingNote?: Maybe<FindingNote_Mutation_Response>;
  /** delete single row from the table: "reporting_findingnote" */
  delete_findingNote_by_pk?: Maybe<FindingNote>;
  /** delete data from the table: "reporting_severity" */
  delete_findingSeverity?: Maybe<FindingSeverity_Mutation_Response>;
  /** delete single row from the table: "reporting_severity" */
  delete_findingSeverity_by_pk?: Maybe<FindingSeverity>;
  /** delete data from the table: "reporting_findingtype" */
  delete_findingType?: Maybe<FindingType_Mutation_Response>;
  /** delete single row from the table: "reporting_findingtype" */
  delete_findingType_by_pk?: Maybe<FindingType>;
  /** delete single row from the table: "reporting_finding" */
  delete_finding_by_pk?: Maybe<Finding>;
  /** delete data from the table: "auth_group" */
  delete_group?: Maybe<Group_Mutation_Response>;
  /** delete data from the table: "auth_group_permissions" */
  delete_groupPermission?: Maybe<GroupPermission_Mutation_Response>;
  /** delete single row from the table: "auth_group_permissions" */
  delete_groupPermission_by_pk?: Maybe<GroupPermission>;
  /** delete single row from the table: "auth_group" */
  delete_group_by_pk?: Maybe<Group>;
  /** delete data from the table: "shepherd_healthstatus" */
  delete_healthStatus?: Maybe<HealthStatus_Mutation_Response>;
  /** delete single row from the table: "shepherd_healthstatus" */
  delete_healthStatus_by_pk?: Maybe<HealthStatus>;
  /** delete data from the table: "rolodex_projectobjective" */
  delete_objective?: Maybe<Objective_Mutation_Response>;
  /** delete data from the table: "rolodex_objectivepriority" */
  delete_objectivePriority?: Maybe<ObjectivePriority_Mutation_Response>;
  /** delete single row from the table: "rolodex_objectivepriority" */
  delete_objectivePriority_by_pk?: Maybe<ObjectivePriority>;
  /** delete data from the table: "rolodex_objectivestatus" */
  delete_objectiveStatus?: Maybe<ObjectiveStatus_Mutation_Response>;
  /** delete single row from the table: "rolodex_objectivestatus" */
  delete_objectiveStatus_by_pk?: Maybe<ObjectiveStatus>;
  /** delete data from the table: "rolodex_projectsubtask" */
  delete_objectiveSubTask?: Maybe<ObjectiveSubTask_Mutation_Response>;
  /** delete single row from the table: "rolodex_projectsubtask" */
  delete_objectiveSubTask_by_pk?: Maybe<ObjectiveSubTask>;
  /** delete single row from the table: "rolodex_projectobjective" */
  delete_objective_by_pk?: Maybe<Objective>;
  /** delete data from the table: "oplog_oplog" */
  delete_oplog?: Maybe<Oplog_Mutation_Response>;
  /** delete data from the table: "oplog_oplogentry" */
  delete_oplogEntry?: Maybe<OplogEntry_Mutation_Response>;
  /** delete single row from the table: "oplog_oplogentry" */
  delete_oplogEntry_by_pk?: Maybe<OplogEntry>;
  /** delete single row from the table: "oplog_oplog" */
  delete_oplog_by_pk?: Maybe<Oplog>;
  /** delete data from the table: "rolodex_project" */
  delete_project?: Maybe<Project_Mutation_Response>;
  /** delete data from the table: "rolodex_projectassignment" */
  delete_projectAssignment?: Maybe<ProjectAssignment_Mutation_Response>;
  /** delete single row from the table: "rolodex_projectassignment" */
  delete_projectAssignment_by_pk?: Maybe<ProjectAssignment>;
  /** delete data from the table: "rolodex_projectcontact" */
  delete_projectContact?: Maybe<ProjectContact_Mutation_Response>;
  /** delete single row from the table: "rolodex_projectcontact" */
  delete_projectContact_by_pk?: Maybe<ProjectContact>;
  /** delete data from the table: "rolodex_projectinvite" */
  delete_projectInvite?: Maybe<ProjectInvite_Mutation_Response>;
  /** delete single row from the table: "rolodex_projectinvite" */
  delete_projectInvite_by_pk?: Maybe<ProjectInvite>;
  /** delete data from the table: "rolodex_projectnote" */
  delete_projectNote?: Maybe<ProjectNote_Mutation_Response>;
  /** delete single row from the table: "rolodex_projectnote" */
  delete_projectNote_by_pk?: Maybe<ProjectNote>;
  /** delete data from the table: "rolodex_projectrole" */
  delete_projectRole?: Maybe<ProjectRole_Mutation_Response>;
  /** delete single row from the table: "rolodex_projectrole" */
  delete_projectRole_by_pk?: Maybe<ProjectRole>;
  /** delete data from the table: "rolodex_projecttype" */
  delete_projectType?: Maybe<ProjectType_Mutation_Response>;
  /** delete single row from the table: "rolodex_projecttype" */
  delete_projectType_by_pk?: Maybe<ProjectType>;
  /** delete single row from the table: "rolodex_project" */
  delete_project_by_pk?: Maybe<Project>;
  /** delete data from the table: "reporting_report" */
  delete_report?: Maybe<Report_Mutation_Response>;
  /** delete data from the table: "commandcenter_reportconfiguration" */
  delete_reportConfiguration?: Maybe<ReportConfiguration_Mutation_Response>;
  /** delete single row from the table: "commandcenter_reportconfiguration" */
  delete_reportConfiguration_by_pk?: Maybe<ReportConfiguration>;
  /** delete single row from the table: "reporting_report" */
  delete_report_by_pk?: Maybe<Report>;
  /** delete data from the table: "reporting_reportfindinglink" */
  delete_reportedFinding?: Maybe<ReportedFinding_Mutation_Response>;
  /** delete data from the table: "reporting_localfindingnote" */
  delete_reportedFindingNote?: Maybe<ReportedFindingNote_Mutation_Response>;
  /** delete single row from the table: "reporting_localfindingnote" */
  delete_reportedFindingNote_by_pk?: Maybe<ReportedFindingNote>;
  /** delete single row from the table: "reporting_reportfindinglink" */
  delete_reportedFinding_by_pk?: Maybe<ReportedFinding>;
  /** delete data from the table: "reporting_observation" */
  delete_reporting_observation?: Maybe<Reporting_Observation_Mutation_Response>;
  /** delete single row from the table: "reporting_observation" */
  delete_reporting_observation_by_pk?: Maybe<Reporting_Observation>;
  /** delete data from the table: "reporting_reportobservationlink" */
  delete_reporting_reportobservationlink?: Maybe<Reporting_Reportobservationlink_Mutation_Response>;
  /** delete single row from the table: "reporting_reportobservationlink" */
  delete_reporting_reportobservationlink_by_pk?: Maybe<Reporting_Reportobservationlink>;
  /** delete data from the table: "rolodex_projectscope" */
  delete_scope?: Maybe<Scope_Mutation_Response>;
  /** delete single row from the table: "rolodex_projectscope" */
  delete_scope_by_pk?: Maybe<Scope>;
  /** delete data from the table: "shepherd_serverhistory" */
  delete_serverCheckout?: Maybe<ServerCheckout_Mutation_Response>;
  /** delete single row from the table: "shepherd_serverhistory" */
  delete_serverCheckout_by_pk?: Maybe<ServerCheckout>;
  /** delete data from the table: "shepherd_servernote" */
  delete_serverNote?: Maybe<ServerNote_Mutation_Response>;
  /** delete single row from the table: "shepherd_servernote" */
  delete_serverNote_by_pk?: Maybe<ServerNote>;
  /** delete data from the table: "shepherd_serverprovider" */
  delete_serverProvider?: Maybe<ServerProvider_Mutation_Response>;
  /** delete single row from the table: "shepherd_serverprovider" */
  delete_serverProvider_by_pk?: Maybe<ServerProvider>;
  /** delete data from the table: "shepherd_serverrole" */
  delete_serverRole?: Maybe<ServerRole_Mutation_Response>;
  /** delete single row from the table: "shepherd_serverrole" */
  delete_serverRole_by_pk?: Maybe<ServerRole>;
  /** delete data from the table: "shepherd_serverstatus" */
  delete_serverStatus?: Maybe<ServerStatus_Mutation_Response>;
  /** delete single row from the table: "shepherd_serverstatus" */
  delete_serverStatus_by_pk?: Maybe<ServerStatus>;
  /** delete data from the table: "shepherd_staticserver" */
  delete_staticServer?: Maybe<StaticServer_Mutation_Response>;
  /** delete single row from the table: "shepherd_staticserver" */
  delete_staticServer_by_pk?: Maybe<StaticServer>;
  /** delete data from the table: "taggit_tag" */
  delete_tag?: Maybe<Tag_Mutation_Response>;
  /** delete single row from the table: "taggit_tag" */
  delete_tag_by_pk?: Maybe<Tag>;
  /** delete data from the table: "taggit_taggeditem" */
  delete_taggedItem?: Maybe<TaggedItem_Mutation_Response>;
  /** delete single row from the table: "taggit_taggeditem" */
  delete_taggedItem_by_pk?: Maybe<TaggedItem>;
  /** delete data from the table: "rolodex_projecttarget" */
  delete_target?: Maybe<Target_Mutation_Response>;
  /** delete single row from the table: "rolodex_projecttarget" */
  delete_target_by_pk?: Maybe<Target>;
  /** delete data from the table: "django_q_task" */
  delete_task?: Maybe<Task_Mutation_Response>;
  /** delete single row from the table: "django_q_task" */
  delete_task_by_pk?: Maybe<Task>;
  /** delete data from the table: "reporting_reporttemplate" */
  delete_template?: Maybe<Template_Mutation_Response>;
  /** delete single row from the table: "reporting_reporttemplate" */
  delete_template_by_pk?: Maybe<Template>;
  /** delete data from the table: "users_user" */
  delete_user?: Maybe<User_Mutation_Response>;
  /** delete data from the table: "users_user_groups" */
  delete_userGroup?: Maybe<UserGroup_Mutation_Response>;
  /** delete single row from the table: "users_user_groups" */
  delete_userGroup_by_pk?: Maybe<UserGroup>;
  /** delete data from the table: "users_user_user_permissions" */
  delete_userPermission?: Maybe<UserPermission_Mutation_Response>;
  /** delete single row from the table: "users_user_user_permissions" */
  delete_userPermission_by_pk?: Maybe<UserPermission>;
  /** delete data from the table: "home_userprofile" */
  delete_userProfile?: Maybe<UserProfile_Mutation_Response>;
  /** delete single row from the table: "home_userprofile" */
  delete_userProfile_by_pk?: Maybe<UserProfile>;
  /** delete single row from the table: "users_user" */
  delete_user_by_pk?: Maybe<User>;
  /** delete data from the table: "rolodex_whitecard" */
  delete_whitecard?: Maybe<Whitecard_Mutation_Response>;
  /** delete single row from the table: "rolodex_whitecard" */
  delete_whitecard_by_pk?: Maybe<Whitecard>;
  /** delete data from the table: "shepherd_whoisstatus" */
  delete_whoisStatus?: Maybe<WhoisStatus_Mutation_Response>;
  /** delete single row from the table: "shepherd_whoisstatus" */
  delete_whoisStatus_by_pk?: Maybe<WhoisStatus>;
  /** generateCodename */
  generateCodename?: Maybe<CodenameResponse>;
  /** Generate a JSON report for the given report ID */
  generateReport?: Maybe<ReportResponse>;
  /** insert data into the table: "shepherd_activitytype" */
  insert_activityType?: Maybe<ActivityType_Mutation_Response>;
  /** insert a single row into the table: "shepherd_activitytype" */
  insert_activityType_one?: Maybe<ActivityType>;
  /** insert data into the table: "reporting_archive" */
  insert_archive?: Maybe<Archive_Mutation_Response>;
  /** insert a single row into the table: "reporting_archive" */
  insert_archive_one?: Maybe<Archive>;
  /** insert data into the table: "auth_permission" */
  insert_authPermission?: Maybe<AuthPermission_Mutation_Response>;
  /** insert a single row into the table: "auth_permission" */
  insert_authPermission_one?: Maybe<AuthPermission>;
  /** insert data into the table: "shepherd_auxserveraddress" */
  insert_auxServerAddresses?: Maybe<AuxServerAddresses_Mutation_Response>;
  /** insert a single row into the table: "shepherd_auxserveraddress" */
  insert_auxServerAddresses_one?: Maybe<AuxServerAddresses>;
  /** insert data into the table: "rolodex_client" */
  insert_client?: Maybe<Client_Mutation_Response>;
  /** insert data into the table: "rolodex_clientcontact" */
  insert_clientContact?: Maybe<ClientContact_Mutation_Response>;
  /** insert a single row into the table: "rolodex_clientcontact" */
  insert_clientContact_one?: Maybe<ClientContact>;
  /** insert data into the table: "rolodex_clientinvite" */
  insert_clientInvite?: Maybe<ClientInvite_Mutation_Response>;
  /** insert a single row into the table: "rolodex_clientinvite" */
  insert_clientInvite_one?: Maybe<ClientInvite>;
  /** insert data into the table: "rolodex_clientnote" */
  insert_clientNote?: Maybe<ClientNote_Mutation_Response>;
  /** insert a single row into the table: "rolodex_clientnote" */
  insert_clientNote_one?: Maybe<ClientNote>;
  /** insert a single row into the table: "rolodex_client" */
  insert_client_one?: Maybe<Client>;
  /** insert data into the table: "shepherd_transientserver" */
  insert_cloudServer?: Maybe<CloudServer_Mutation_Response>;
  /** insert a single row into the table: "shepherd_transientserver" */
  insert_cloudServer_one?: Maybe<CloudServer>;
  /** insert data into the table: "commandcenter_companyinformation" */
  insert_companyInfo?: Maybe<CompanyInfo_Mutation_Response>;
  /** insert a single row into the table: "commandcenter_companyinformation" */
  insert_companyInfo_one?: Maybe<CompanyInfo>;
  /** insert data into the table: "rolodex_deconfliction" */
  insert_deconfliction?: Maybe<Deconfliction_Mutation_Response>;
  /** insert data into the table: "rolodex_deconflictionstatus" */
  insert_deconflictionStatus?: Maybe<DeconflictionStatus_Mutation_Response>;
  /** insert a single row into the table: "rolodex_deconflictionstatus" */
  insert_deconflictionStatus_one?: Maybe<DeconflictionStatus>;
  /** insert a single row into the table: "rolodex_deconfliction" */
  insert_deconfliction_one?: Maybe<Deconfliction>;
  /** insert data into the table: "django_content_type" */
  insert_djangoContentType?: Maybe<DjangoContentType_Mutation_Response>;
  /** insert a single row into the table: "django_content_type" */
  insert_djangoContentType_one?: Maybe<DjangoContentType>;
  /** insert data into the table: "reporting_doctype" */
  insert_docType?: Maybe<DocType_Mutation_Response>;
  /** insert a single row into the table: "reporting_doctype" */
  insert_docType_one?: Maybe<DocType>;
  /** insert data into the table: "shepherd_domain" */
  insert_domain?: Maybe<Domain_Mutation_Response>;
  /** insert data into the table: "shepherd_history" */
  insert_domainCheckout?: Maybe<DomainCheckout_Mutation_Response>;
  /** insert a single row into the table: "shepherd_history" */
  insert_domainCheckout_one?: Maybe<DomainCheckout>;
  /** insert data into the table: "shepherd_domainnote" */
  insert_domainNote?: Maybe<DomainNote_Mutation_Response>;
  /** insert a single row into the table: "shepherd_domainnote" */
  insert_domainNote_one?: Maybe<DomainNote>;
  /** insert data into the table: "shepherd_domainserverconnection" */
  insert_domainServerConnection?: Maybe<DomainServerConnection_Mutation_Response>;
  /** insert a single row into the table: "shepherd_domainserverconnection" */
  insert_domainServerConnection_one?: Maybe<DomainServerConnection>;
  /** insert data into the table: "shepherd_domainstatus" */
  insert_domainStatus?: Maybe<DomainStatus_Mutation_Response>;
  /** insert a single row into the table: "shepherd_domainstatus" */
  insert_domainStatus_one?: Maybe<DomainStatus>;
  /** insert a single row into the table: "shepherd_domain" */
  insert_domain_one?: Maybe<Domain>;
  /** insert data into the table: "reporting_evidence" */
  insert_evidence?: Maybe<Evidence_Mutation_Response>;
  /** insert a single row into the table: "reporting_evidence" */
  insert_evidence_one?: Maybe<Evidence>;
  /** insert data into the table: "commandcenter_extrafieldmodel" */
  insert_extraFieldModel?: Maybe<ExtraFieldModel_Mutation_Response>;
  /** insert a single row into the table: "commandcenter_extrafieldmodel" */
  insert_extraFieldModel_one?: Maybe<ExtraFieldModel>;
  /** insert data into the table: "commandcenter_extrafieldspec" */
  insert_extraFieldSpec?: Maybe<ExtraFieldSpec_Mutation_Response>;
  /** insert a single row into the table: "commandcenter_extrafieldspec" */
  insert_extraFieldSpec_one?: Maybe<ExtraFieldSpec>;
  /** insert data into the table: "reporting_finding" */
  insert_finding?: Maybe<Finding_Mutation_Response>;
  /** insert data into the table: "reporting_findingnote" */
  insert_findingNote?: Maybe<FindingNote_Mutation_Response>;
  /** insert a single row into the table: "reporting_findingnote" */
  insert_findingNote_one?: Maybe<FindingNote>;
  /** insert data into the table: "reporting_severity" */
  insert_findingSeverity?: Maybe<FindingSeverity_Mutation_Response>;
  /** insert a single row into the table: "reporting_severity" */
  insert_findingSeverity_one?: Maybe<FindingSeverity>;
  /** insert data into the table: "reporting_findingtype" */
  insert_findingType?: Maybe<FindingType_Mutation_Response>;
  /** insert a single row into the table: "reporting_findingtype" */
  insert_findingType_one?: Maybe<FindingType>;
  /** insert a single row into the table: "reporting_finding" */
  insert_finding_one?: Maybe<Finding>;
  /** insert data into the table: "auth_group" */
  insert_group?: Maybe<Group_Mutation_Response>;
  /** insert data into the table: "auth_group_permissions" */
  insert_groupPermission?: Maybe<GroupPermission_Mutation_Response>;
  /** insert a single row into the table: "auth_group_permissions" */
  insert_groupPermission_one?: Maybe<GroupPermission>;
  /** insert a single row into the table: "auth_group" */
  insert_group_one?: Maybe<Group>;
  /** insert data into the table: "shepherd_healthstatus" */
  insert_healthStatus?: Maybe<HealthStatus_Mutation_Response>;
  /** insert a single row into the table: "shepherd_healthstatus" */
  insert_healthStatus_one?: Maybe<HealthStatus>;
  /** insert data into the table: "rolodex_projectobjective" */
  insert_objective?: Maybe<Objective_Mutation_Response>;
  /** insert data into the table: "rolodex_objectivepriority" */
  insert_objectivePriority?: Maybe<ObjectivePriority_Mutation_Response>;
  /** insert a single row into the table: "rolodex_objectivepriority" */
  insert_objectivePriority_one?: Maybe<ObjectivePriority>;
  /** insert data into the table: "rolodex_objectivestatus" */
  insert_objectiveStatus?: Maybe<ObjectiveStatus_Mutation_Response>;
  /** insert a single row into the table: "rolodex_objectivestatus" */
  insert_objectiveStatus_one?: Maybe<ObjectiveStatus>;
  /** insert data into the table: "rolodex_projectsubtask" */
  insert_objectiveSubTask?: Maybe<ObjectiveSubTask_Mutation_Response>;
  /** insert a single row into the table: "rolodex_projectsubtask" */
  insert_objectiveSubTask_one?: Maybe<ObjectiveSubTask>;
  /** insert a single row into the table: "rolodex_projectobjective" */
  insert_objective_one?: Maybe<Objective>;
  /** insert data into the table: "oplog_oplog" */
  insert_oplog?: Maybe<Oplog_Mutation_Response>;
  /** insert data into the table: "oplog_oplogentry" */
  insert_oplogEntry?: Maybe<OplogEntry_Mutation_Response>;
  /** insert a single row into the table: "oplog_oplogentry" */
  insert_oplogEntry_one?: Maybe<OplogEntry>;
  /** insert a single row into the table: "oplog_oplog" */
  insert_oplog_one?: Maybe<Oplog>;
  /** insert data into the table: "rolodex_project" */
  insert_project?: Maybe<Project_Mutation_Response>;
  /** insert data into the table: "rolodex_projectassignment" */
  insert_projectAssignment?: Maybe<ProjectAssignment_Mutation_Response>;
  /** insert a single row into the table: "rolodex_projectassignment" */
  insert_projectAssignment_one?: Maybe<ProjectAssignment>;
  /** insert data into the table: "rolodex_projectcontact" */
  insert_projectContact?: Maybe<ProjectContact_Mutation_Response>;
  /** insert a single row into the table: "rolodex_projectcontact" */
  insert_projectContact_one?: Maybe<ProjectContact>;
  /** insert data into the table: "rolodex_projectinvite" */
  insert_projectInvite?: Maybe<ProjectInvite_Mutation_Response>;
  /** insert a single row into the table: "rolodex_projectinvite" */
  insert_projectInvite_one?: Maybe<ProjectInvite>;
  /** insert data into the table: "rolodex_projectnote" */
  insert_projectNote?: Maybe<ProjectNote_Mutation_Response>;
  /** insert a single row into the table: "rolodex_projectnote" */
  insert_projectNote_one?: Maybe<ProjectNote>;
  /** insert data into the table: "rolodex_projectrole" */
  insert_projectRole?: Maybe<ProjectRole_Mutation_Response>;
  /** insert a single row into the table: "rolodex_projectrole" */
  insert_projectRole_one?: Maybe<ProjectRole>;
  /** insert data into the table: "rolodex_projecttype" */
  insert_projectType?: Maybe<ProjectType_Mutation_Response>;
  /** insert a single row into the table: "rolodex_projecttype" */
  insert_projectType_one?: Maybe<ProjectType>;
  /** insert a single row into the table: "rolodex_project" */
  insert_project_one?: Maybe<Project>;
  /** insert data into the table: "reporting_report" */
  insert_report?: Maybe<Report_Mutation_Response>;
  /** insert data into the table: "commandcenter_reportconfiguration" */
  insert_reportConfiguration?: Maybe<ReportConfiguration_Mutation_Response>;
  /** insert a single row into the table: "commandcenter_reportconfiguration" */
  insert_reportConfiguration_one?: Maybe<ReportConfiguration>;
  /** insert a single row into the table: "reporting_report" */
  insert_report_one?: Maybe<Report>;
  /** insert data into the table: "reporting_reportfindinglink" */
  insert_reportedFinding?: Maybe<ReportedFinding_Mutation_Response>;
  /** insert data into the table: "reporting_localfindingnote" */
  insert_reportedFindingNote?: Maybe<ReportedFindingNote_Mutation_Response>;
  /** insert a single row into the table: "reporting_localfindingnote" */
  insert_reportedFindingNote_one?: Maybe<ReportedFindingNote>;
  /** insert a single row into the table: "reporting_reportfindinglink" */
  insert_reportedFinding_one?: Maybe<ReportedFinding>;
  /** insert data into the table: "reporting_observation" */
  insert_reporting_observation?: Maybe<Reporting_Observation_Mutation_Response>;
  /** insert a single row into the table: "reporting_observation" */
  insert_reporting_observation_one?: Maybe<Reporting_Observation>;
  /** insert data into the table: "reporting_reportobservationlink" */
  insert_reporting_reportobservationlink?: Maybe<Reporting_Reportobservationlink_Mutation_Response>;
  /** insert a single row into the table: "reporting_reportobservationlink" */
  insert_reporting_reportobservationlink_one?: Maybe<Reporting_Reportobservationlink>;
  /** insert data into the table: "rolodex_projectscope" */
  insert_scope?: Maybe<Scope_Mutation_Response>;
  /** insert a single row into the table: "rolodex_projectscope" */
  insert_scope_one?: Maybe<Scope>;
  /** insert data into the table: "shepherd_serverhistory" */
  insert_serverCheckout?: Maybe<ServerCheckout_Mutation_Response>;
  /** insert a single row into the table: "shepherd_serverhistory" */
  insert_serverCheckout_one?: Maybe<ServerCheckout>;
  /** insert data into the table: "shepherd_servernote" */
  insert_serverNote?: Maybe<ServerNote_Mutation_Response>;
  /** insert a single row into the table: "shepherd_servernote" */
  insert_serverNote_one?: Maybe<ServerNote>;
  /** insert data into the table: "shepherd_serverprovider" */
  insert_serverProvider?: Maybe<ServerProvider_Mutation_Response>;
  /** insert a single row into the table: "shepherd_serverprovider" */
  insert_serverProvider_one?: Maybe<ServerProvider>;
  /** insert data into the table: "shepherd_serverrole" */
  insert_serverRole?: Maybe<ServerRole_Mutation_Response>;
  /** insert a single row into the table: "shepherd_serverrole" */
  insert_serverRole_one?: Maybe<ServerRole>;
  /** insert data into the table: "shepherd_serverstatus" */
  insert_serverStatus?: Maybe<ServerStatus_Mutation_Response>;
  /** insert a single row into the table: "shepherd_serverstatus" */
  insert_serverStatus_one?: Maybe<ServerStatus>;
  /** insert data into the table: "shepherd_staticserver" */
  insert_staticServer?: Maybe<StaticServer_Mutation_Response>;
  /** insert a single row into the table: "shepherd_staticserver" */
  insert_staticServer_one?: Maybe<StaticServer>;
  /** insert data into the table: "taggit_tag" */
  insert_tag?: Maybe<Tag_Mutation_Response>;
  /** insert a single row into the table: "taggit_tag" */
  insert_tag_one?: Maybe<Tag>;
  /** insert data into the table: "taggit_taggeditem" */
  insert_taggedItem?: Maybe<TaggedItem_Mutation_Response>;
  /** insert a single row into the table: "taggit_taggeditem" */
  insert_taggedItem_one?: Maybe<TaggedItem>;
  /** insert data into the table: "rolodex_projecttarget" */
  insert_target?: Maybe<Target_Mutation_Response>;
  /** insert a single row into the table: "rolodex_projecttarget" */
  insert_target_one?: Maybe<Target>;
  /** insert data into the table: "django_q_task" */
  insert_task?: Maybe<Task_Mutation_Response>;
  /** insert a single row into the table: "django_q_task" */
  insert_task_one?: Maybe<Task>;
  /** insert data into the table: "reporting_reporttemplate" */
  insert_template?: Maybe<Template_Mutation_Response>;
  /** insert a single row into the table: "reporting_reporttemplate" */
  insert_template_one?: Maybe<Template>;
  /** insert data into the table: "users_user" */
  insert_user?: Maybe<User_Mutation_Response>;
  /** insert data into the table: "users_user_groups" */
  insert_userGroup?: Maybe<UserGroup_Mutation_Response>;
  /** insert a single row into the table: "users_user_groups" */
  insert_userGroup_one?: Maybe<UserGroup>;
  /** insert data into the table: "users_user_user_permissions" */
  insert_userPermission?: Maybe<UserPermission_Mutation_Response>;
  /** insert a single row into the table: "users_user_user_permissions" */
  insert_userPermission_one?: Maybe<UserPermission>;
  /** insert data into the table: "home_userprofile" */
  insert_userProfile?: Maybe<UserProfile_Mutation_Response>;
  /** insert a single row into the table: "home_userprofile" */
  insert_userProfile_one?: Maybe<UserProfile>;
  /** insert a single row into the table: "users_user" */
  insert_user_one?: Maybe<User>;
  /** insert data into the table: "rolodex_whitecard" */
  insert_whitecard?: Maybe<Whitecard_Mutation_Response>;
  /** insert a single row into the table: "rolodex_whitecard" */
  insert_whitecard_one?: Maybe<Whitecard>;
  /** insert data into the table: "shepherd_whoisstatus" */
  insert_whoisStatus?: Maybe<WhoisStatus_Mutation_Response>;
  /** insert a single row into the table: "shepherd_whoisstatus" */
  insert_whoisStatus_one?: Maybe<WhoisStatus>;
  login?: Maybe<LoginResponse>;
  /** Set Tags */
  setTags: TagsResult;
  /** update data of the table: "shepherd_activitytype" */
  update_activityType?: Maybe<ActivityType_Mutation_Response>;
  /** update single row of the table: "shepherd_activitytype" */
  update_activityType_by_pk?: Maybe<ActivityType>;
  /** update multiples rows of table: "shepherd_activitytype" */
  update_activityType_many?: Maybe<Array<Maybe<ActivityType_Mutation_Response>>>;
  /** update data of the table: "reporting_archive" */
  update_archive?: Maybe<Archive_Mutation_Response>;
  /** update single row of the table: "reporting_archive" */
  update_archive_by_pk?: Maybe<Archive>;
  /** update multiples rows of table: "reporting_archive" */
  update_archive_many?: Maybe<Array<Maybe<Archive_Mutation_Response>>>;
  /** update data of the table: "auth_permission" */
  update_authPermission?: Maybe<AuthPermission_Mutation_Response>;
  /** update single row of the table: "auth_permission" */
  update_authPermission_by_pk?: Maybe<AuthPermission>;
  /** update multiples rows of table: "auth_permission" */
  update_authPermission_many?: Maybe<Array<Maybe<AuthPermission_Mutation_Response>>>;
  /** update data of the table: "shepherd_auxserveraddress" */
  update_auxServerAddresses?: Maybe<AuxServerAddresses_Mutation_Response>;
  /** update single row of the table: "shepherd_auxserveraddress" */
  update_auxServerAddresses_by_pk?: Maybe<AuxServerAddresses>;
  /** update multiples rows of table: "shepherd_auxserveraddress" */
  update_auxServerAddresses_many?: Maybe<Array<Maybe<AuxServerAddresses_Mutation_Response>>>;
  /** update data of the table: "rolodex_client" */
  update_client?: Maybe<Client_Mutation_Response>;
  /** update data of the table: "rolodex_clientcontact" */
  update_clientContact?: Maybe<ClientContact_Mutation_Response>;
  /** update single row of the table: "rolodex_clientcontact" */
  update_clientContact_by_pk?: Maybe<ClientContact>;
  /** update multiples rows of table: "rolodex_clientcontact" */
  update_clientContact_many?: Maybe<Array<Maybe<ClientContact_Mutation_Response>>>;
  /** update data of the table: "rolodex_clientinvite" */
  update_clientInvite?: Maybe<ClientInvite_Mutation_Response>;
  /** update single row of the table: "rolodex_clientinvite" */
  update_clientInvite_by_pk?: Maybe<ClientInvite>;
  /** update multiples rows of table: "rolodex_clientinvite" */
  update_clientInvite_many?: Maybe<Array<Maybe<ClientInvite_Mutation_Response>>>;
  /** update data of the table: "rolodex_clientnote" */
  update_clientNote?: Maybe<ClientNote_Mutation_Response>;
  /** update single row of the table: "rolodex_clientnote" */
  update_clientNote_by_pk?: Maybe<ClientNote>;
  /** update multiples rows of table: "rolodex_clientnote" */
  update_clientNote_many?: Maybe<Array<Maybe<ClientNote_Mutation_Response>>>;
  /** update single row of the table: "rolodex_client" */
  update_client_by_pk?: Maybe<Client>;
  /** update multiples rows of table: "rolodex_client" */
  update_client_many?: Maybe<Array<Maybe<Client_Mutation_Response>>>;
  /** update data of the table: "shepherd_transientserver" */
  update_cloudServer?: Maybe<CloudServer_Mutation_Response>;
  /** update single row of the table: "shepherd_transientserver" */
  update_cloudServer_by_pk?: Maybe<CloudServer>;
  /** update multiples rows of table: "shepherd_transientserver" */
  update_cloudServer_many?: Maybe<Array<Maybe<CloudServer_Mutation_Response>>>;
  /** update data of the table: "commandcenter_companyinformation" */
  update_companyInfo?: Maybe<CompanyInfo_Mutation_Response>;
  /** update single row of the table: "commandcenter_companyinformation" */
  update_companyInfo_by_pk?: Maybe<CompanyInfo>;
  /** update multiples rows of table: "commandcenter_companyinformation" */
  update_companyInfo_many?: Maybe<Array<Maybe<CompanyInfo_Mutation_Response>>>;
  /** update data of the table: "rolodex_deconfliction" */
  update_deconfliction?: Maybe<Deconfliction_Mutation_Response>;
  /** update data of the table: "rolodex_deconflictionstatus" */
  update_deconflictionStatus?: Maybe<DeconflictionStatus_Mutation_Response>;
  /** update single row of the table: "rolodex_deconflictionstatus" */
  update_deconflictionStatus_by_pk?: Maybe<DeconflictionStatus>;
  /** update multiples rows of table: "rolodex_deconflictionstatus" */
  update_deconflictionStatus_many?: Maybe<Array<Maybe<DeconflictionStatus_Mutation_Response>>>;
  /** update single row of the table: "rolodex_deconfliction" */
  update_deconfliction_by_pk?: Maybe<Deconfliction>;
  /** update multiples rows of table: "rolodex_deconfliction" */
  update_deconfliction_many?: Maybe<Array<Maybe<Deconfliction_Mutation_Response>>>;
  /** update data of the table: "django_content_type" */
  update_djangoContentType?: Maybe<DjangoContentType_Mutation_Response>;
  /** update single row of the table: "django_content_type" */
  update_djangoContentType_by_pk?: Maybe<DjangoContentType>;
  /** update multiples rows of table: "django_content_type" */
  update_djangoContentType_many?: Maybe<Array<Maybe<DjangoContentType_Mutation_Response>>>;
  /** update data of the table: "reporting_doctype" */
  update_docType?: Maybe<DocType_Mutation_Response>;
  /** update single row of the table: "reporting_doctype" */
  update_docType_by_pk?: Maybe<DocType>;
  /** update multiples rows of table: "reporting_doctype" */
  update_docType_many?: Maybe<Array<Maybe<DocType_Mutation_Response>>>;
  /** update data of the table: "shepherd_domain" */
  update_domain?: Maybe<Domain_Mutation_Response>;
  /** update data of the table: "shepherd_history" */
  update_domainCheckout?: Maybe<DomainCheckout_Mutation_Response>;
  /** update single row of the table: "shepherd_history" */
  update_domainCheckout_by_pk?: Maybe<DomainCheckout>;
  /** update multiples rows of table: "shepherd_history" */
  update_domainCheckout_many?: Maybe<Array<Maybe<DomainCheckout_Mutation_Response>>>;
  /** update data of the table: "shepherd_domainnote" */
  update_domainNote?: Maybe<DomainNote_Mutation_Response>;
  /** update single row of the table: "shepherd_domainnote" */
  update_domainNote_by_pk?: Maybe<DomainNote>;
  /** update multiples rows of table: "shepherd_domainnote" */
  update_domainNote_many?: Maybe<Array<Maybe<DomainNote_Mutation_Response>>>;
  /** update data of the table: "shepherd_domainserverconnection" */
  update_domainServerConnection?: Maybe<DomainServerConnection_Mutation_Response>;
  /** update single row of the table: "shepherd_domainserverconnection" */
  update_domainServerConnection_by_pk?: Maybe<DomainServerConnection>;
  /** update multiples rows of table: "shepherd_domainserverconnection" */
  update_domainServerConnection_many?: Maybe<Array<Maybe<DomainServerConnection_Mutation_Response>>>;
  /** update data of the table: "shepherd_domainstatus" */
  update_domainStatus?: Maybe<DomainStatus_Mutation_Response>;
  /** update single row of the table: "shepherd_domainstatus" */
  update_domainStatus_by_pk?: Maybe<DomainStatus>;
  /** update multiples rows of table: "shepherd_domainstatus" */
  update_domainStatus_many?: Maybe<Array<Maybe<DomainStatus_Mutation_Response>>>;
  /** update single row of the table: "shepherd_domain" */
  update_domain_by_pk?: Maybe<Domain>;
  /** update multiples rows of table: "shepherd_domain" */
  update_domain_many?: Maybe<Array<Maybe<Domain_Mutation_Response>>>;
  /** update data of the table: "reporting_evidence" */
  update_evidence?: Maybe<Evidence_Mutation_Response>;
  /** update single row of the table: "reporting_evidence" */
  update_evidence_by_pk?: Maybe<Evidence>;
  /** update multiples rows of table: "reporting_evidence" */
  update_evidence_many?: Maybe<Array<Maybe<Evidence_Mutation_Response>>>;
  /** update data of the table: "commandcenter_extrafieldmodel" */
  update_extraFieldModel?: Maybe<ExtraFieldModel_Mutation_Response>;
  /** update single row of the table: "commandcenter_extrafieldmodel" */
  update_extraFieldModel_by_pk?: Maybe<ExtraFieldModel>;
  /** update multiples rows of table: "commandcenter_extrafieldmodel" */
  update_extraFieldModel_many?: Maybe<Array<Maybe<ExtraFieldModel_Mutation_Response>>>;
  /** update data of the table: "commandcenter_extrafieldspec" */
  update_extraFieldSpec?: Maybe<ExtraFieldSpec_Mutation_Response>;
  /** update single row of the table: "commandcenter_extrafieldspec" */
  update_extraFieldSpec_by_pk?: Maybe<ExtraFieldSpec>;
  /** update multiples rows of table: "commandcenter_extrafieldspec" */
  update_extraFieldSpec_many?: Maybe<Array<Maybe<ExtraFieldSpec_Mutation_Response>>>;
  /** update data of the table: "reporting_finding" */
  update_finding?: Maybe<Finding_Mutation_Response>;
  /** update data of the table: "reporting_findingnote" */
  update_findingNote?: Maybe<FindingNote_Mutation_Response>;
  /** update single row of the table: "reporting_findingnote" */
  update_findingNote_by_pk?: Maybe<FindingNote>;
  /** update multiples rows of table: "reporting_findingnote" */
  update_findingNote_many?: Maybe<Array<Maybe<FindingNote_Mutation_Response>>>;
  /** update data of the table: "reporting_severity" */
  update_findingSeverity?: Maybe<FindingSeverity_Mutation_Response>;
  /** update single row of the table: "reporting_severity" */
  update_findingSeverity_by_pk?: Maybe<FindingSeverity>;
  /** update multiples rows of table: "reporting_severity" */
  update_findingSeverity_many?: Maybe<Array<Maybe<FindingSeverity_Mutation_Response>>>;
  /** update data of the table: "reporting_findingtype" */
  update_findingType?: Maybe<FindingType_Mutation_Response>;
  /** update single row of the table: "reporting_findingtype" */
  update_findingType_by_pk?: Maybe<FindingType>;
  /** update multiples rows of table: "reporting_findingtype" */
  update_findingType_many?: Maybe<Array<Maybe<FindingType_Mutation_Response>>>;
  /** update single row of the table: "reporting_finding" */
  update_finding_by_pk?: Maybe<Finding>;
  /** update multiples rows of table: "reporting_finding" */
  update_finding_many?: Maybe<Array<Maybe<Finding_Mutation_Response>>>;
  /** update data of the table: "auth_group" */
  update_group?: Maybe<Group_Mutation_Response>;
  /** update data of the table: "auth_group_permissions" */
  update_groupPermission?: Maybe<GroupPermission_Mutation_Response>;
  /** update single row of the table: "auth_group_permissions" */
  update_groupPermission_by_pk?: Maybe<GroupPermission>;
  /** update multiples rows of table: "auth_group_permissions" */
  update_groupPermission_many?: Maybe<Array<Maybe<GroupPermission_Mutation_Response>>>;
  /** update single row of the table: "auth_group" */
  update_group_by_pk?: Maybe<Group>;
  /** update multiples rows of table: "auth_group" */
  update_group_many?: Maybe<Array<Maybe<Group_Mutation_Response>>>;
  /** update data of the table: "shepherd_healthstatus" */
  update_healthStatus?: Maybe<HealthStatus_Mutation_Response>;
  /** update single row of the table: "shepherd_healthstatus" */
  update_healthStatus_by_pk?: Maybe<HealthStatus>;
  /** update multiples rows of table: "shepherd_healthstatus" */
  update_healthStatus_many?: Maybe<Array<Maybe<HealthStatus_Mutation_Response>>>;
  /** update data of the table: "rolodex_projectobjective" */
  update_objective?: Maybe<Objective_Mutation_Response>;
  /** update data of the table: "rolodex_objectivepriority" */
  update_objectivePriority?: Maybe<ObjectivePriority_Mutation_Response>;
  /** update single row of the table: "rolodex_objectivepriority" */
  update_objectivePriority_by_pk?: Maybe<ObjectivePriority>;
  /** update multiples rows of table: "rolodex_objectivepriority" */
  update_objectivePriority_many?: Maybe<Array<Maybe<ObjectivePriority_Mutation_Response>>>;
  /** update data of the table: "rolodex_objectivestatus" */
  update_objectiveStatus?: Maybe<ObjectiveStatus_Mutation_Response>;
  /** update single row of the table: "rolodex_objectivestatus" */
  update_objectiveStatus_by_pk?: Maybe<ObjectiveStatus>;
  /** update multiples rows of table: "rolodex_objectivestatus" */
  update_objectiveStatus_many?: Maybe<Array<Maybe<ObjectiveStatus_Mutation_Response>>>;
  /** update data of the table: "rolodex_projectsubtask" */
  update_objectiveSubTask?: Maybe<ObjectiveSubTask_Mutation_Response>;
  /** update single row of the table: "rolodex_projectsubtask" */
  update_objectiveSubTask_by_pk?: Maybe<ObjectiveSubTask>;
  /** update multiples rows of table: "rolodex_projectsubtask" */
  update_objectiveSubTask_many?: Maybe<Array<Maybe<ObjectiveSubTask_Mutation_Response>>>;
  /** update single row of the table: "rolodex_projectobjective" */
  update_objective_by_pk?: Maybe<Objective>;
  /** update multiples rows of table: "rolodex_projectobjective" */
  update_objective_many?: Maybe<Array<Maybe<Objective_Mutation_Response>>>;
  /** update data of the table: "oplog_oplog" */
  update_oplog?: Maybe<Oplog_Mutation_Response>;
  /** update data of the table: "oplog_oplogentry" */
  update_oplogEntry?: Maybe<OplogEntry_Mutation_Response>;
  /** update single row of the table: "oplog_oplogentry" */
  update_oplogEntry_by_pk?: Maybe<OplogEntry>;
  /** update multiples rows of table: "oplog_oplogentry" */
  update_oplogEntry_many?: Maybe<Array<Maybe<OplogEntry_Mutation_Response>>>;
  /** update single row of the table: "oplog_oplog" */
  update_oplog_by_pk?: Maybe<Oplog>;
  /** update multiples rows of table: "oplog_oplog" */
  update_oplog_many?: Maybe<Array<Maybe<Oplog_Mutation_Response>>>;
  /** update data of the table: "rolodex_project" */
  update_project?: Maybe<Project_Mutation_Response>;
  /** update data of the table: "rolodex_projectassignment" */
  update_projectAssignment?: Maybe<ProjectAssignment_Mutation_Response>;
  /** update single row of the table: "rolodex_projectassignment" */
  update_projectAssignment_by_pk?: Maybe<ProjectAssignment>;
  /** update multiples rows of table: "rolodex_projectassignment" */
  update_projectAssignment_many?: Maybe<Array<Maybe<ProjectAssignment_Mutation_Response>>>;
  /** update data of the table: "rolodex_projectcontact" */
  update_projectContact?: Maybe<ProjectContact_Mutation_Response>;
  /** update single row of the table: "rolodex_projectcontact" */
  update_projectContact_by_pk?: Maybe<ProjectContact>;
  /** update multiples rows of table: "rolodex_projectcontact" */
  update_projectContact_many?: Maybe<Array<Maybe<ProjectContact_Mutation_Response>>>;
  /** update data of the table: "rolodex_projectinvite" */
  update_projectInvite?: Maybe<ProjectInvite_Mutation_Response>;
  /** update single row of the table: "rolodex_projectinvite" */
  update_projectInvite_by_pk?: Maybe<ProjectInvite>;
  /** update multiples rows of table: "rolodex_projectinvite" */
  update_projectInvite_many?: Maybe<Array<Maybe<ProjectInvite_Mutation_Response>>>;
  /** update data of the table: "rolodex_projectnote" */
  update_projectNote?: Maybe<ProjectNote_Mutation_Response>;
  /** update single row of the table: "rolodex_projectnote" */
  update_projectNote_by_pk?: Maybe<ProjectNote>;
  /** update multiples rows of table: "rolodex_projectnote" */
  update_projectNote_many?: Maybe<Array<Maybe<ProjectNote_Mutation_Response>>>;
  /** update data of the table: "rolodex_projectrole" */
  update_projectRole?: Maybe<ProjectRole_Mutation_Response>;
  /** update single row of the table: "rolodex_projectrole" */
  update_projectRole_by_pk?: Maybe<ProjectRole>;
  /** update multiples rows of table: "rolodex_projectrole" */
  update_projectRole_many?: Maybe<Array<Maybe<ProjectRole_Mutation_Response>>>;
  /** update data of the table: "rolodex_projecttype" */
  update_projectType?: Maybe<ProjectType_Mutation_Response>;
  /** update single row of the table: "rolodex_projecttype" */
  update_projectType_by_pk?: Maybe<ProjectType>;
  /** update multiples rows of table: "rolodex_projecttype" */
  update_projectType_many?: Maybe<Array<Maybe<ProjectType_Mutation_Response>>>;
  /** update single row of the table: "rolodex_project" */
  update_project_by_pk?: Maybe<Project>;
  /** update multiples rows of table: "rolodex_project" */
  update_project_many?: Maybe<Array<Maybe<Project_Mutation_Response>>>;
  /** update data of the table: "reporting_report" */
  update_report?: Maybe<Report_Mutation_Response>;
  /** update data of the table: "commandcenter_reportconfiguration" */
  update_reportConfiguration?: Maybe<ReportConfiguration_Mutation_Response>;
  /** update single row of the table: "commandcenter_reportconfiguration" */
  update_reportConfiguration_by_pk?: Maybe<ReportConfiguration>;
  /** update multiples rows of table: "commandcenter_reportconfiguration" */
  update_reportConfiguration_many?: Maybe<Array<Maybe<ReportConfiguration_Mutation_Response>>>;
  /** update single row of the table: "reporting_report" */
  update_report_by_pk?: Maybe<Report>;
  /** update multiples rows of table: "reporting_report" */
  update_report_many?: Maybe<Array<Maybe<Report_Mutation_Response>>>;
  /** update data of the table: "reporting_reportfindinglink" */
  update_reportedFinding?: Maybe<ReportedFinding_Mutation_Response>;
  /** update data of the table: "reporting_localfindingnote" */
  update_reportedFindingNote?: Maybe<ReportedFindingNote_Mutation_Response>;
  /** update single row of the table: "reporting_localfindingnote" */
  update_reportedFindingNote_by_pk?: Maybe<ReportedFindingNote>;
  /** update multiples rows of table: "reporting_localfindingnote" */
  update_reportedFindingNote_many?: Maybe<Array<Maybe<ReportedFindingNote_Mutation_Response>>>;
  /** update single row of the table: "reporting_reportfindinglink" */
  update_reportedFinding_by_pk?: Maybe<ReportedFinding>;
  /** update multiples rows of table: "reporting_reportfindinglink" */
  update_reportedFinding_many?: Maybe<Array<Maybe<ReportedFinding_Mutation_Response>>>;
  /** update data of the table: "reporting_observation" */
  update_reporting_observation?: Maybe<Reporting_Observation_Mutation_Response>;
  /** update single row of the table: "reporting_observation" */
  update_reporting_observation_by_pk?: Maybe<Reporting_Observation>;
  /** update multiples rows of table: "reporting_observation" */
  update_reporting_observation_many?: Maybe<Array<Maybe<Reporting_Observation_Mutation_Response>>>;
  /** update data of the table: "reporting_reportobservationlink" */
  update_reporting_reportobservationlink?: Maybe<Reporting_Reportobservationlink_Mutation_Response>;
  /** update single row of the table: "reporting_reportobservationlink" */
  update_reporting_reportobservationlink_by_pk?: Maybe<Reporting_Reportobservationlink>;
  /** update multiples rows of table: "reporting_reportobservationlink" */
  update_reporting_reportobservationlink_many?: Maybe<Array<Maybe<Reporting_Reportobservationlink_Mutation_Response>>>;
  /** update data of the table: "rolodex_projectscope" */
  update_scope?: Maybe<Scope_Mutation_Response>;
  /** update single row of the table: "rolodex_projectscope" */
  update_scope_by_pk?: Maybe<Scope>;
  /** update multiples rows of table: "rolodex_projectscope" */
  update_scope_many?: Maybe<Array<Maybe<Scope_Mutation_Response>>>;
  /** update data of the table: "shepherd_serverhistory" */
  update_serverCheckout?: Maybe<ServerCheckout_Mutation_Response>;
  /** update single row of the table: "shepherd_serverhistory" */
  update_serverCheckout_by_pk?: Maybe<ServerCheckout>;
  /** update multiples rows of table: "shepherd_serverhistory" */
  update_serverCheckout_many?: Maybe<Array<Maybe<ServerCheckout_Mutation_Response>>>;
  /** update data of the table: "shepherd_servernote" */
  update_serverNote?: Maybe<ServerNote_Mutation_Response>;
  /** update single row of the table: "shepherd_servernote" */
  update_serverNote_by_pk?: Maybe<ServerNote>;
  /** update multiples rows of table: "shepherd_servernote" */
  update_serverNote_many?: Maybe<Array<Maybe<ServerNote_Mutation_Response>>>;
  /** update data of the table: "shepherd_serverprovider" */
  update_serverProvider?: Maybe<ServerProvider_Mutation_Response>;
  /** update single row of the table: "shepherd_serverprovider" */
  update_serverProvider_by_pk?: Maybe<ServerProvider>;
  /** update multiples rows of table: "shepherd_serverprovider" */
  update_serverProvider_many?: Maybe<Array<Maybe<ServerProvider_Mutation_Response>>>;
  /** update data of the table: "shepherd_serverrole" */
  update_serverRole?: Maybe<ServerRole_Mutation_Response>;
  /** update single row of the table: "shepherd_serverrole" */
  update_serverRole_by_pk?: Maybe<ServerRole>;
  /** update multiples rows of table: "shepherd_serverrole" */
  update_serverRole_many?: Maybe<Array<Maybe<ServerRole_Mutation_Response>>>;
  /** update data of the table: "shepherd_serverstatus" */
  update_serverStatus?: Maybe<ServerStatus_Mutation_Response>;
  /** update single row of the table: "shepherd_serverstatus" */
  update_serverStatus_by_pk?: Maybe<ServerStatus>;
  /** update multiples rows of table: "shepherd_serverstatus" */
  update_serverStatus_many?: Maybe<Array<Maybe<ServerStatus_Mutation_Response>>>;
  /** update data of the table: "shepherd_staticserver" */
  update_staticServer?: Maybe<StaticServer_Mutation_Response>;
  /** update single row of the table: "shepherd_staticserver" */
  update_staticServer_by_pk?: Maybe<StaticServer>;
  /** update multiples rows of table: "shepherd_staticserver" */
  update_staticServer_many?: Maybe<Array<Maybe<StaticServer_Mutation_Response>>>;
  /** update data of the table: "taggit_tag" */
  update_tag?: Maybe<Tag_Mutation_Response>;
  /** update single row of the table: "taggit_tag" */
  update_tag_by_pk?: Maybe<Tag>;
  /** update multiples rows of table: "taggit_tag" */
  update_tag_many?: Maybe<Array<Maybe<Tag_Mutation_Response>>>;
  /** update data of the table: "taggit_taggeditem" */
  update_taggedItem?: Maybe<TaggedItem_Mutation_Response>;
  /** update single row of the table: "taggit_taggeditem" */
  update_taggedItem_by_pk?: Maybe<TaggedItem>;
  /** update multiples rows of table: "taggit_taggeditem" */
  update_taggedItem_many?: Maybe<Array<Maybe<TaggedItem_Mutation_Response>>>;
  /** update data of the table: "rolodex_projecttarget" */
  update_target?: Maybe<Target_Mutation_Response>;
  /** update single row of the table: "rolodex_projecttarget" */
  update_target_by_pk?: Maybe<Target>;
  /** update multiples rows of table: "rolodex_projecttarget" */
  update_target_many?: Maybe<Array<Maybe<Target_Mutation_Response>>>;
  /** update data of the table: "django_q_task" */
  update_task?: Maybe<Task_Mutation_Response>;
  /** update single row of the table: "django_q_task" */
  update_task_by_pk?: Maybe<Task>;
  /** update multiples rows of table: "django_q_task" */
  update_task_many?: Maybe<Array<Maybe<Task_Mutation_Response>>>;
  /** update data of the table: "reporting_reporttemplate" */
  update_template?: Maybe<Template_Mutation_Response>;
  /** update single row of the table: "reporting_reporttemplate" */
  update_template_by_pk?: Maybe<Template>;
  /** update multiples rows of table: "reporting_reporttemplate" */
  update_template_many?: Maybe<Array<Maybe<Template_Mutation_Response>>>;
  /** update data of the table: "users_user" */
  update_user?: Maybe<User_Mutation_Response>;
  /** update data of the table: "users_user_groups" */
  update_userGroup?: Maybe<UserGroup_Mutation_Response>;
  /** update single row of the table: "users_user_groups" */
  update_userGroup_by_pk?: Maybe<UserGroup>;
  /** update multiples rows of table: "users_user_groups" */
  update_userGroup_many?: Maybe<Array<Maybe<UserGroup_Mutation_Response>>>;
  /** update data of the table: "users_user_user_permissions" */
  update_userPermission?: Maybe<UserPermission_Mutation_Response>;
  /** update single row of the table: "users_user_user_permissions" */
  update_userPermission_by_pk?: Maybe<UserPermission>;
  /** update multiples rows of table: "users_user_user_permissions" */
  update_userPermission_many?: Maybe<Array<Maybe<UserPermission_Mutation_Response>>>;
  /** update data of the table: "home_userprofile" */
  update_userProfile?: Maybe<UserProfile_Mutation_Response>;
  /** update single row of the table: "home_userprofile" */
  update_userProfile_by_pk?: Maybe<UserProfile>;
  /** update multiples rows of table: "home_userprofile" */
  update_userProfile_many?: Maybe<Array<Maybe<UserProfile_Mutation_Response>>>;
  /** update single row of the table: "users_user" */
  update_user_by_pk?: Maybe<User>;
  /** update multiples rows of table: "users_user" */
  update_user_many?: Maybe<Array<Maybe<User_Mutation_Response>>>;
  /** update data of the table: "rolodex_whitecard" */
  update_whitecard?: Maybe<Whitecard_Mutation_Response>;
  /** update single row of the table: "rolodex_whitecard" */
  update_whitecard_by_pk?: Maybe<Whitecard>;
  /** update multiples rows of table: "rolodex_whitecard" */
  update_whitecard_many?: Maybe<Array<Maybe<Whitecard_Mutation_Response>>>;
  /** update data of the table: "shepherd_whoisstatus" */
  update_whoisStatus?: Maybe<WhoisStatus_Mutation_Response>;
  /** update single row of the table: "shepherd_whoisstatus" */
  update_whoisStatus_by_pk?: Maybe<WhoisStatus>;
  /** update multiples rows of table: "shepherd_whoisstatus" */
  update_whoisStatus_many?: Maybe<Array<Maybe<WhoisStatus_Mutation_Response>>>;
  uploadEvidence: UploadEvidenceResult;
  uploadReportTemplate: UploadReportTemplateResult;
};


/** mutation root */
export type Mutation_RootAttachFindingArgs = {
  findingId: Scalars['Int']['input'];
  reportId: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootCheckoutDomainArgs = {
  activityTypeId: Scalars['Int']['input'];
  domainId: Scalars['Int']['input'];
  endDate: Scalars['date']['input'];
  note?: InputMaybe<Scalars['String']['input']>;
  projectId: Scalars['Int']['input'];
  startDate: Scalars['date']['input'];
};


/** mutation root */
export type Mutation_RootCheckoutServerArgs = {
  activityTypeId: Scalars['Int']['input'];
  endDate: Scalars['date']['input'];
  note?: InputMaybe<Scalars['String']['input']>;
  projectId: Scalars['Int']['input'];
  serverId: Scalars['Int']['input'];
  serverRoleId: Scalars['Int']['input'];
  startDate: Scalars['date']['input'];
};


/** mutation root */
export type Mutation_RootCreateUserArgs = {
  email: Scalars['String']['input'];
  enableFindingCreate?: InputMaybe<Scalars['Boolean']['input']>;
  enableFindingDelete?: InputMaybe<Scalars['Boolean']['input']>;
  enableFindingEdit?: InputMaybe<Scalars['Boolean']['input']>;
  enableObservationCreate?: InputMaybe<Scalars['Boolean']['input']>;
  enableObservationDelete?: InputMaybe<Scalars['Boolean']['input']>;
  enableObservationEdit?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  password: Scalars['String']['input'];
  phone?: InputMaybe<Scalars['String']['input']>;
  require2fa?: InputMaybe<Scalars['Boolean']['input']>;
  role: Scalars['String']['input'];
  timezone?: InputMaybe<Scalars['String']['input']>;
  username: Scalars['String']['input'];
};


/** mutation root */
export type Mutation_RootDeleteDomainCheckoutArgs = {
  checkoutId: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDeleteServerCheckoutArgs = {
  checkoutId: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDeleteTemplateArgs = {
  templateId: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ActivityTypeArgs = {
  where: ActivityType_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ActivityType_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ArchiveArgs = {
  where: Archive_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Archive_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_AuthPermissionArgs = {
  where: AuthPermission_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_AuthPermission_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_AuxServerAddressesArgs = {
  where: AuxServerAddresses_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_AuxServerAddresses_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ClientArgs = {
  where: Client_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ClientContactArgs = {
  where: ClientContact_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ClientContact_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ClientInviteArgs = {
  where: ClientInvite_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ClientInvite_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ClientNoteArgs = {
  where: ClientNote_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ClientNote_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Client_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_CloudServerArgs = {
  where: CloudServer_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_CloudServer_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_CompanyInfoArgs = {
  where: CompanyInfo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_CompanyInfo_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_DeconflictionArgs = {
  where: Deconfliction_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_DeconflictionStatusArgs = {
  where: DeconflictionStatus_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_DeconflictionStatus_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Deconfliction_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_DjangoContentTypeArgs = {
  where: DjangoContentType_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_DjangoContentType_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_DocTypeArgs = {
  where: DocType_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_DocType_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_DomainArgs = {
  where: Domain_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_DomainCheckoutArgs = {
  where: DomainCheckout_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_DomainCheckout_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_DomainNoteArgs = {
  where: DomainNote_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_DomainNote_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_DomainServerConnectionArgs = {
  where: DomainServerConnection_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_DomainServerConnection_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_DomainStatusArgs = {
  where: DomainStatus_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_DomainStatus_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Domain_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_EvidenceArgs = {
  where: Evidence_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Evidence_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ExtraFieldModelArgs = {
  where: ExtraFieldModel_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ExtraFieldModel_By_PkArgs = {
  modelInternalName: Scalars['String']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ExtraFieldSpecArgs = {
  where: ExtraFieldSpec_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ExtraFieldSpec_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_FindingArgs = {
  where: Finding_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_FindingNoteArgs = {
  where: FindingNote_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_FindingNote_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_FindingSeverityArgs = {
  where: FindingSeverity_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_FindingSeverity_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_FindingTypeArgs = {
  where: FindingType_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_FindingType_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Finding_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_GroupArgs = {
  where: Group_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_GroupPermissionArgs = {
  where: GroupPermission_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_GroupPermission_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Group_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_HealthStatusArgs = {
  where: HealthStatus_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_HealthStatus_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ObjectiveArgs = {
  where: Objective_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ObjectivePriorityArgs = {
  where: ObjectivePriority_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ObjectivePriority_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ObjectiveStatusArgs = {
  where: ObjectiveStatus_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ObjectiveStatus_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ObjectiveSubTaskArgs = {
  where: ObjectiveSubTask_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ObjectiveSubTask_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Objective_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_OplogArgs = {
  where: Oplog_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_OplogEntryArgs = {
  where: OplogEntry_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_OplogEntry_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Oplog_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ProjectArgs = {
  where: Project_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ProjectAssignmentArgs = {
  where: ProjectAssignment_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ProjectAssignment_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ProjectContactArgs = {
  where: ProjectContact_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ProjectContact_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ProjectInviteArgs = {
  where: ProjectInvite_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ProjectInvite_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ProjectNoteArgs = {
  where: ProjectNote_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ProjectNote_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ProjectRoleArgs = {
  where: ProjectRole_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ProjectRole_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ProjectTypeArgs = {
  where: ProjectType_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ProjectType_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Project_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ReportArgs = {
  where: Report_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ReportConfigurationArgs = {
  where: ReportConfiguration_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ReportConfiguration_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Report_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ReportedFindingArgs = {
  where: ReportedFinding_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ReportedFindingNoteArgs = {
  where: ReportedFindingNote_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ReportedFindingNote_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ReportedFinding_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Reporting_ObservationArgs = {
  where: Reporting_Observation_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Reporting_Observation_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_Reporting_ReportobservationlinkArgs = {
  where: Reporting_Reportobservationlink_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Reporting_Reportobservationlink_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ScopeArgs = {
  where: Scope_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Scope_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ServerCheckoutArgs = {
  where: ServerCheckout_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ServerCheckout_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ServerNoteArgs = {
  where: ServerNote_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ServerNote_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ServerProviderArgs = {
  where: ServerProvider_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ServerProvider_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ServerRoleArgs = {
  where: ServerRole_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ServerRole_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_ServerStatusArgs = {
  where: ServerStatus_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ServerStatus_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_StaticServerArgs = {
  where: StaticServer_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_StaticServer_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_TagArgs = {
  where: Tag_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Tag_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_TaggedItemArgs = {
  where: TaggedItem_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_TaggedItem_By_PkArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootDelete_TargetArgs = {
  where: Target_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Target_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_TaskArgs = {
  where: Task_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Task_By_PkArgs = {
  id: Scalars['String']['input'];
};


/** mutation root */
export type Mutation_RootDelete_TemplateArgs = {
  where: Template_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Template_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_UserArgs = {
  where: User_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_UserGroupArgs = {
  where: UserGroup_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_UserGroup_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_UserPermissionArgs = {
  where: UserPermission_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_UserPermission_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_UserProfileArgs = {
  where: UserProfile_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_UserProfile_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_User_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_WhitecardArgs = {
  where: Whitecard_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Whitecard_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootDelete_WhoisStatusArgs = {
  where: WhoisStatus_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_WhoisStatus_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


/** mutation root */
export type Mutation_RootGenerateReportArgs = {
  id: Scalars['Int']['input'];
};


/** mutation root */
export type Mutation_RootInsert_ActivityTypeArgs = {
  objects: Array<ActivityType_Insert_Input>;
  on_conflict?: InputMaybe<ActivityType_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ActivityType_OneArgs = {
  object: ActivityType_Insert_Input;
  on_conflict?: InputMaybe<ActivityType_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ArchiveArgs = {
  objects: Array<Archive_Insert_Input>;
  on_conflict?: InputMaybe<Archive_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Archive_OneArgs = {
  object: Archive_Insert_Input;
  on_conflict?: InputMaybe<Archive_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_AuthPermissionArgs = {
  objects: Array<AuthPermission_Insert_Input>;
  on_conflict?: InputMaybe<AuthPermission_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_AuthPermission_OneArgs = {
  object: AuthPermission_Insert_Input;
  on_conflict?: InputMaybe<AuthPermission_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_AuxServerAddressesArgs = {
  objects: Array<AuxServerAddresses_Insert_Input>;
  on_conflict?: InputMaybe<AuxServerAddresses_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_AuxServerAddresses_OneArgs = {
  object: AuxServerAddresses_Insert_Input;
  on_conflict?: InputMaybe<AuxServerAddresses_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ClientArgs = {
  objects: Array<Client_Insert_Input>;
  on_conflict?: InputMaybe<Client_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ClientContactArgs = {
  objects: Array<ClientContact_Insert_Input>;
  on_conflict?: InputMaybe<ClientContact_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ClientContact_OneArgs = {
  object: ClientContact_Insert_Input;
  on_conflict?: InputMaybe<ClientContact_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ClientInviteArgs = {
  objects: Array<ClientInvite_Insert_Input>;
  on_conflict?: InputMaybe<ClientInvite_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ClientInvite_OneArgs = {
  object: ClientInvite_Insert_Input;
  on_conflict?: InputMaybe<ClientInvite_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ClientNoteArgs = {
  objects: Array<ClientNote_Insert_Input>;
  on_conflict?: InputMaybe<ClientNote_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ClientNote_OneArgs = {
  object: ClientNote_Insert_Input;
  on_conflict?: InputMaybe<ClientNote_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Client_OneArgs = {
  object: Client_Insert_Input;
  on_conflict?: InputMaybe<Client_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_CloudServerArgs = {
  objects: Array<CloudServer_Insert_Input>;
  on_conflict?: InputMaybe<CloudServer_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_CloudServer_OneArgs = {
  object: CloudServer_Insert_Input;
  on_conflict?: InputMaybe<CloudServer_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_CompanyInfoArgs = {
  objects: Array<CompanyInfo_Insert_Input>;
  on_conflict?: InputMaybe<CompanyInfo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_CompanyInfo_OneArgs = {
  object: CompanyInfo_Insert_Input;
  on_conflict?: InputMaybe<CompanyInfo_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DeconflictionArgs = {
  objects: Array<Deconfliction_Insert_Input>;
  on_conflict?: InputMaybe<Deconfliction_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DeconflictionStatusArgs = {
  objects: Array<DeconflictionStatus_Insert_Input>;
  on_conflict?: InputMaybe<DeconflictionStatus_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DeconflictionStatus_OneArgs = {
  object: DeconflictionStatus_Insert_Input;
  on_conflict?: InputMaybe<DeconflictionStatus_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Deconfliction_OneArgs = {
  object: Deconfliction_Insert_Input;
  on_conflict?: InputMaybe<Deconfliction_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DjangoContentTypeArgs = {
  objects: Array<DjangoContentType_Insert_Input>;
  on_conflict?: InputMaybe<DjangoContentType_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DjangoContentType_OneArgs = {
  object: DjangoContentType_Insert_Input;
  on_conflict?: InputMaybe<DjangoContentType_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DocTypeArgs = {
  objects: Array<DocType_Insert_Input>;
  on_conflict?: InputMaybe<DocType_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DocType_OneArgs = {
  object: DocType_Insert_Input;
  on_conflict?: InputMaybe<DocType_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DomainArgs = {
  objects: Array<Domain_Insert_Input>;
  on_conflict?: InputMaybe<Domain_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DomainCheckoutArgs = {
  objects: Array<DomainCheckout_Insert_Input>;
  on_conflict?: InputMaybe<DomainCheckout_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DomainCheckout_OneArgs = {
  object: DomainCheckout_Insert_Input;
  on_conflict?: InputMaybe<DomainCheckout_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DomainNoteArgs = {
  objects: Array<DomainNote_Insert_Input>;
  on_conflict?: InputMaybe<DomainNote_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DomainNote_OneArgs = {
  object: DomainNote_Insert_Input;
  on_conflict?: InputMaybe<DomainNote_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DomainServerConnectionArgs = {
  objects: Array<DomainServerConnection_Insert_Input>;
  on_conflict?: InputMaybe<DomainServerConnection_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DomainServerConnection_OneArgs = {
  object: DomainServerConnection_Insert_Input;
  on_conflict?: InputMaybe<DomainServerConnection_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DomainStatusArgs = {
  objects: Array<DomainStatus_Insert_Input>;
  on_conflict?: InputMaybe<DomainStatus_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_DomainStatus_OneArgs = {
  object: DomainStatus_Insert_Input;
  on_conflict?: InputMaybe<DomainStatus_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Domain_OneArgs = {
  object: Domain_Insert_Input;
  on_conflict?: InputMaybe<Domain_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_EvidenceArgs = {
  objects: Array<Evidence_Insert_Input>;
  on_conflict?: InputMaybe<Evidence_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Evidence_OneArgs = {
  object: Evidence_Insert_Input;
  on_conflict?: InputMaybe<Evidence_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ExtraFieldModelArgs = {
  objects: Array<ExtraFieldModel_Insert_Input>;
  on_conflict?: InputMaybe<ExtraFieldModel_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ExtraFieldModel_OneArgs = {
  object: ExtraFieldModel_Insert_Input;
  on_conflict?: InputMaybe<ExtraFieldModel_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ExtraFieldSpecArgs = {
  objects: Array<ExtraFieldSpec_Insert_Input>;
  on_conflict?: InputMaybe<ExtraFieldSpec_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ExtraFieldSpec_OneArgs = {
  object: ExtraFieldSpec_Insert_Input;
  on_conflict?: InputMaybe<ExtraFieldSpec_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_FindingArgs = {
  objects: Array<Finding_Insert_Input>;
  on_conflict?: InputMaybe<Finding_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_FindingNoteArgs = {
  objects: Array<FindingNote_Insert_Input>;
  on_conflict?: InputMaybe<FindingNote_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_FindingNote_OneArgs = {
  object: FindingNote_Insert_Input;
  on_conflict?: InputMaybe<FindingNote_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_FindingSeverityArgs = {
  objects: Array<FindingSeverity_Insert_Input>;
  on_conflict?: InputMaybe<FindingSeverity_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_FindingSeverity_OneArgs = {
  object: FindingSeverity_Insert_Input;
  on_conflict?: InputMaybe<FindingSeverity_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_FindingTypeArgs = {
  objects: Array<FindingType_Insert_Input>;
  on_conflict?: InputMaybe<FindingType_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_FindingType_OneArgs = {
  object: FindingType_Insert_Input;
  on_conflict?: InputMaybe<FindingType_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Finding_OneArgs = {
  object: Finding_Insert_Input;
  on_conflict?: InputMaybe<Finding_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_GroupArgs = {
  objects: Array<Group_Insert_Input>;
  on_conflict?: InputMaybe<Group_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_GroupPermissionArgs = {
  objects: Array<GroupPermission_Insert_Input>;
  on_conflict?: InputMaybe<GroupPermission_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_GroupPermission_OneArgs = {
  object: GroupPermission_Insert_Input;
  on_conflict?: InputMaybe<GroupPermission_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Group_OneArgs = {
  object: Group_Insert_Input;
  on_conflict?: InputMaybe<Group_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_HealthStatusArgs = {
  objects: Array<HealthStatus_Insert_Input>;
  on_conflict?: InputMaybe<HealthStatus_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_HealthStatus_OneArgs = {
  object: HealthStatus_Insert_Input;
  on_conflict?: InputMaybe<HealthStatus_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ObjectiveArgs = {
  objects: Array<Objective_Insert_Input>;
  on_conflict?: InputMaybe<Objective_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ObjectivePriorityArgs = {
  objects: Array<ObjectivePriority_Insert_Input>;
  on_conflict?: InputMaybe<ObjectivePriority_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ObjectivePriority_OneArgs = {
  object: ObjectivePriority_Insert_Input;
  on_conflict?: InputMaybe<ObjectivePriority_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ObjectiveStatusArgs = {
  objects: Array<ObjectiveStatus_Insert_Input>;
  on_conflict?: InputMaybe<ObjectiveStatus_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ObjectiveStatus_OneArgs = {
  object: ObjectiveStatus_Insert_Input;
  on_conflict?: InputMaybe<ObjectiveStatus_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ObjectiveSubTaskArgs = {
  objects: Array<ObjectiveSubTask_Insert_Input>;
  on_conflict?: InputMaybe<ObjectiveSubTask_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ObjectiveSubTask_OneArgs = {
  object: ObjectiveSubTask_Insert_Input;
  on_conflict?: InputMaybe<ObjectiveSubTask_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Objective_OneArgs = {
  object: Objective_Insert_Input;
  on_conflict?: InputMaybe<Objective_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_OplogArgs = {
  objects: Array<Oplog_Insert_Input>;
  on_conflict?: InputMaybe<Oplog_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_OplogEntryArgs = {
  objects: Array<OplogEntry_Insert_Input>;
  on_conflict?: InputMaybe<OplogEntry_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_OplogEntry_OneArgs = {
  object: OplogEntry_Insert_Input;
  on_conflict?: InputMaybe<OplogEntry_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Oplog_OneArgs = {
  object: Oplog_Insert_Input;
  on_conflict?: InputMaybe<Oplog_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ProjectArgs = {
  objects: Array<Project_Insert_Input>;
  on_conflict?: InputMaybe<Project_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ProjectAssignmentArgs = {
  objects: Array<ProjectAssignment_Insert_Input>;
  on_conflict?: InputMaybe<ProjectAssignment_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ProjectAssignment_OneArgs = {
  object: ProjectAssignment_Insert_Input;
  on_conflict?: InputMaybe<ProjectAssignment_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ProjectContactArgs = {
  objects: Array<ProjectContact_Insert_Input>;
  on_conflict?: InputMaybe<ProjectContact_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ProjectContact_OneArgs = {
  object: ProjectContact_Insert_Input;
  on_conflict?: InputMaybe<ProjectContact_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ProjectInviteArgs = {
  objects: Array<ProjectInvite_Insert_Input>;
  on_conflict?: InputMaybe<ProjectInvite_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ProjectInvite_OneArgs = {
  object: ProjectInvite_Insert_Input;
  on_conflict?: InputMaybe<ProjectInvite_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ProjectNoteArgs = {
  objects: Array<ProjectNote_Insert_Input>;
  on_conflict?: InputMaybe<ProjectNote_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ProjectNote_OneArgs = {
  object: ProjectNote_Insert_Input;
  on_conflict?: InputMaybe<ProjectNote_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ProjectRoleArgs = {
  objects: Array<ProjectRole_Insert_Input>;
  on_conflict?: InputMaybe<ProjectRole_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ProjectRole_OneArgs = {
  object: ProjectRole_Insert_Input;
  on_conflict?: InputMaybe<ProjectRole_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ProjectTypeArgs = {
  objects: Array<ProjectType_Insert_Input>;
  on_conflict?: InputMaybe<ProjectType_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ProjectType_OneArgs = {
  object: ProjectType_Insert_Input;
  on_conflict?: InputMaybe<ProjectType_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Project_OneArgs = {
  object: Project_Insert_Input;
  on_conflict?: InputMaybe<Project_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ReportArgs = {
  objects: Array<Report_Insert_Input>;
  on_conflict?: InputMaybe<Report_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ReportConfigurationArgs = {
  objects: Array<ReportConfiguration_Insert_Input>;
  on_conflict?: InputMaybe<ReportConfiguration_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ReportConfiguration_OneArgs = {
  object: ReportConfiguration_Insert_Input;
  on_conflict?: InputMaybe<ReportConfiguration_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Report_OneArgs = {
  object: Report_Insert_Input;
  on_conflict?: InputMaybe<Report_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ReportedFindingArgs = {
  objects: Array<ReportedFinding_Insert_Input>;
  on_conflict?: InputMaybe<ReportedFinding_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ReportedFindingNoteArgs = {
  objects: Array<ReportedFindingNote_Insert_Input>;
  on_conflict?: InputMaybe<ReportedFindingNote_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ReportedFindingNote_OneArgs = {
  object: ReportedFindingNote_Insert_Input;
  on_conflict?: InputMaybe<ReportedFindingNote_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ReportedFinding_OneArgs = {
  object: ReportedFinding_Insert_Input;
  on_conflict?: InputMaybe<ReportedFinding_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Reporting_ObservationArgs = {
  objects: Array<Reporting_Observation_Insert_Input>;
  on_conflict?: InputMaybe<Reporting_Observation_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Reporting_Observation_OneArgs = {
  object: Reporting_Observation_Insert_Input;
  on_conflict?: InputMaybe<Reporting_Observation_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Reporting_ReportobservationlinkArgs = {
  objects: Array<Reporting_Reportobservationlink_Insert_Input>;
  on_conflict?: InputMaybe<Reporting_Reportobservationlink_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Reporting_Reportobservationlink_OneArgs = {
  object: Reporting_Reportobservationlink_Insert_Input;
  on_conflict?: InputMaybe<Reporting_Reportobservationlink_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ScopeArgs = {
  objects: Array<Scope_Insert_Input>;
  on_conflict?: InputMaybe<Scope_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Scope_OneArgs = {
  object: Scope_Insert_Input;
  on_conflict?: InputMaybe<Scope_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ServerCheckoutArgs = {
  objects: Array<ServerCheckout_Insert_Input>;
  on_conflict?: InputMaybe<ServerCheckout_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ServerCheckout_OneArgs = {
  object: ServerCheckout_Insert_Input;
  on_conflict?: InputMaybe<ServerCheckout_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ServerNoteArgs = {
  objects: Array<ServerNote_Insert_Input>;
  on_conflict?: InputMaybe<ServerNote_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ServerNote_OneArgs = {
  object: ServerNote_Insert_Input;
  on_conflict?: InputMaybe<ServerNote_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ServerProviderArgs = {
  objects: Array<ServerProvider_Insert_Input>;
  on_conflict?: InputMaybe<ServerProvider_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ServerProvider_OneArgs = {
  object: ServerProvider_Insert_Input;
  on_conflict?: InputMaybe<ServerProvider_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ServerRoleArgs = {
  objects: Array<ServerRole_Insert_Input>;
  on_conflict?: InputMaybe<ServerRole_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ServerRole_OneArgs = {
  object: ServerRole_Insert_Input;
  on_conflict?: InputMaybe<ServerRole_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ServerStatusArgs = {
  objects: Array<ServerStatus_Insert_Input>;
  on_conflict?: InputMaybe<ServerStatus_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ServerStatus_OneArgs = {
  object: ServerStatus_Insert_Input;
  on_conflict?: InputMaybe<ServerStatus_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_StaticServerArgs = {
  objects: Array<StaticServer_Insert_Input>;
  on_conflict?: InputMaybe<StaticServer_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_StaticServer_OneArgs = {
  object: StaticServer_Insert_Input;
  on_conflict?: InputMaybe<StaticServer_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TagArgs = {
  objects: Array<Tag_Insert_Input>;
  on_conflict?: InputMaybe<Tag_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Tag_OneArgs = {
  object: Tag_Insert_Input;
  on_conflict?: InputMaybe<Tag_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TaggedItemArgs = {
  objects: Array<TaggedItem_Insert_Input>;
  on_conflict?: InputMaybe<TaggedItem_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TaggedItem_OneArgs = {
  object: TaggedItem_Insert_Input;
  on_conflict?: InputMaybe<TaggedItem_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TargetArgs = {
  objects: Array<Target_Insert_Input>;
  on_conflict?: InputMaybe<Target_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Target_OneArgs = {
  object: Target_Insert_Input;
  on_conflict?: InputMaybe<Target_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TaskArgs = {
  objects: Array<Task_Insert_Input>;
  on_conflict?: InputMaybe<Task_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Task_OneArgs = {
  object: Task_Insert_Input;
  on_conflict?: InputMaybe<Task_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TemplateArgs = {
  objects: Array<Template_Insert_Input>;
  on_conflict?: InputMaybe<Template_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Template_OneArgs = {
  object: Template_Insert_Input;
  on_conflict?: InputMaybe<Template_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_UserArgs = {
  objects: Array<User_Insert_Input>;
  on_conflict?: InputMaybe<User_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_UserGroupArgs = {
  objects: Array<UserGroup_Insert_Input>;
  on_conflict?: InputMaybe<UserGroup_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_UserGroup_OneArgs = {
  object: UserGroup_Insert_Input;
  on_conflict?: InputMaybe<UserGroup_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_UserPermissionArgs = {
  objects: Array<UserPermission_Insert_Input>;
  on_conflict?: InputMaybe<UserPermission_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_UserPermission_OneArgs = {
  object: UserPermission_Insert_Input;
  on_conflict?: InputMaybe<UserPermission_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_UserProfileArgs = {
  objects: Array<UserProfile_Insert_Input>;
  on_conflict?: InputMaybe<UserProfile_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_UserProfile_OneArgs = {
  object: UserProfile_Insert_Input;
  on_conflict?: InputMaybe<UserProfile_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_User_OneArgs = {
  object: User_Insert_Input;
  on_conflict?: InputMaybe<User_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_WhitecardArgs = {
  objects: Array<Whitecard_Insert_Input>;
  on_conflict?: InputMaybe<Whitecard_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Whitecard_OneArgs = {
  object: Whitecard_Insert_Input;
  on_conflict?: InputMaybe<Whitecard_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_WhoisStatusArgs = {
  objects: Array<WhoisStatus_Insert_Input>;
  on_conflict?: InputMaybe<WhoisStatus_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_WhoisStatus_OneArgs = {
  object: WhoisStatus_Insert_Input;
  on_conflict?: InputMaybe<WhoisStatus_On_Conflict>;
};


/** mutation root */
export type Mutation_RootLoginArgs = {
  password: Scalars['String']['input'];
  username: Scalars['String']['input'];
};


/** mutation root */
export type Mutation_RootSetTagsArgs = {
  id: Scalars['bigint']['input'];
  model: Scalars['String']['input'];
  tags: Array<Scalars['String']['input']>;
};


/** mutation root */
export type Mutation_RootUpdate_ActivityTypeArgs = {
  _inc?: InputMaybe<ActivityType_Inc_Input>;
  _set?: InputMaybe<ActivityType_Set_Input>;
  where: ActivityType_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ActivityType_By_PkArgs = {
  _inc?: InputMaybe<ActivityType_Inc_Input>;
  _set?: InputMaybe<ActivityType_Set_Input>;
  pk_columns: ActivityType_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ActivityType_ManyArgs = {
  updates: Array<ActivityType_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ArchiveArgs = {
  _inc?: InputMaybe<Archive_Inc_Input>;
  _set?: InputMaybe<Archive_Set_Input>;
  where: Archive_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Archive_By_PkArgs = {
  _inc?: InputMaybe<Archive_Inc_Input>;
  _set?: InputMaybe<Archive_Set_Input>;
  pk_columns: Archive_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Archive_ManyArgs = {
  updates: Array<Archive_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_AuthPermissionArgs = {
  _inc?: InputMaybe<AuthPermission_Inc_Input>;
  _set?: InputMaybe<AuthPermission_Set_Input>;
  where: AuthPermission_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_AuthPermission_By_PkArgs = {
  _inc?: InputMaybe<AuthPermission_Inc_Input>;
  _set?: InputMaybe<AuthPermission_Set_Input>;
  pk_columns: AuthPermission_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_AuthPermission_ManyArgs = {
  updates: Array<AuthPermission_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_AuxServerAddressesArgs = {
  _inc?: InputMaybe<AuxServerAddresses_Inc_Input>;
  _set?: InputMaybe<AuxServerAddresses_Set_Input>;
  where: AuxServerAddresses_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_AuxServerAddresses_By_PkArgs = {
  _inc?: InputMaybe<AuxServerAddresses_Inc_Input>;
  _set?: InputMaybe<AuxServerAddresses_Set_Input>;
  pk_columns: AuxServerAddresses_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_AuxServerAddresses_ManyArgs = {
  updates: Array<AuxServerAddresses_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ClientArgs = {
  _append?: InputMaybe<Client_Append_Input>;
  _delete_at_path?: InputMaybe<Client_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Client_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Client_Delete_Key_Input>;
  _inc?: InputMaybe<Client_Inc_Input>;
  _prepend?: InputMaybe<Client_Prepend_Input>;
  _set?: InputMaybe<Client_Set_Input>;
  where: Client_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ClientContactArgs = {
  _inc?: InputMaybe<ClientContact_Inc_Input>;
  _set?: InputMaybe<ClientContact_Set_Input>;
  where: ClientContact_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ClientContact_By_PkArgs = {
  _inc?: InputMaybe<ClientContact_Inc_Input>;
  _set?: InputMaybe<ClientContact_Set_Input>;
  pk_columns: ClientContact_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ClientContact_ManyArgs = {
  updates: Array<ClientContact_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ClientInviteArgs = {
  _inc?: InputMaybe<ClientInvite_Inc_Input>;
  _set?: InputMaybe<ClientInvite_Set_Input>;
  where: ClientInvite_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ClientInvite_By_PkArgs = {
  _inc?: InputMaybe<ClientInvite_Inc_Input>;
  _set?: InputMaybe<ClientInvite_Set_Input>;
  pk_columns: ClientInvite_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ClientInvite_ManyArgs = {
  updates: Array<ClientInvite_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ClientNoteArgs = {
  _inc?: InputMaybe<ClientNote_Inc_Input>;
  _set?: InputMaybe<ClientNote_Set_Input>;
  where: ClientNote_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ClientNote_By_PkArgs = {
  _inc?: InputMaybe<ClientNote_Inc_Input>;
  _set?: InputMaybe<ClientNote_Set_Input>;
  pk_columns: ClientNote_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ClientNote_ManyArgs = {
  updates: Array<ClientNote_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Client_By_PkArgs = {
  _append?: InputMaybe<Client_Append_Input>;
  _delete_at_path?: InputMaybe<Client_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Client_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Client_Delete_Key_Input>;
  _inc?: InputMaybe<Client_Inc_Input>;
  _prepend?: InputMaybe<Client_Prepend_Input>;
  _set?: InputMaybe<Client_Set_Input>;
  pk_columns: Client_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Client_ManyArgs = {
  updates: Array<Client_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_CloudServerArgs = {
  _inc?: InputMaybe<CloudServer_Inc_Input>;
  _set?: InputMaybe<CloudServer_Set_Input>;
  where: CloudServer_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_CloudServer_By_PkArgs = {
  _inc?: InputMaybe<CloudServer_Inc_Input>;
  _set?: InputMaybe<CloudServer_Set_Input>;
  pk_columns: CloudServer_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_CloudServer_ManyArgs = {
  updates: Array<CloudServer_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_CompanyInfoArgs = {
  _inc?: InputMaybe<CompanyInfo_Inc_Input>;
  _set?: InputMaybe<CompanyInfo_Set_Input>;
  where: CompanyInfo_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_CompanyInfo_By_PkArgs = {
  _inc?: InputMaybe<CompanyInfo_Inc_Input>;
  _set?: InputMaybe<CompanyInfo_Set_Input>;
  pk_columns: CompanyInfo_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_CompanyInfo_ManyArgs = {
  updates: Array<CompanyInfo_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_DeconflictionArgs = {
  _inc?: InputMaybe<Deconfliction_Inc_Input>;
  _set?: InputMaybe<Deconfliction_Set_Input>;
  where: Deconfliction_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_DeconflictionStatusArgs = {
  _inc?: InputMaybe<DeconflictionStatus_Inc_Input>;
  _set?: InputMaybe<DeconflictionStatus_Set_Input>;
  where: DeconflictionStatus_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_DeconflictionStatus_By_PkArgs = {
  _inc?: InputMaybe<DeconflictionStatus_Inc_Input>;
  _set?: InputMaybe<DeconflictionStatus_Set_Input>;
  pk_columns: DeconflictionStatus_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_DeconflictionStatus_ManyArgs = {
  updates: Array<DeconflictionStatus_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Deconfliction_By_PkArgs = {
  _inc?: InputMaybe<Deconfliction_Inc_Input>;
  _set?: InputMaybe<Deconfliction_Set_Input>;
  pk_columns: Deconfliction_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Deconfliction_ManyArgs = {
  updates: Array<Deconfliction_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_DjangoContentTypeArgs = {
  _inc?: InputMaybe<DjangoContentType_Inc_Input>;
  _set?: InputMaybe<DjangoContentType_Set_Input>;
  where: DjangoContentType_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_DjangoContentType_By_PkArgs = {
  _inc?: InputMaybe<DjangoContentType_Inc_Input>;
  _set?: InputMaybe<DjangoContentType_Set_Input>;
  pk_columns: DjangoContentType_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_DjangoContentType_ManyArgs = {
  updates: Array<DjangoContentType_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_DocTypeArgs = {
  _inc?: InputMaybe<DocType_Inc_Input>;
  _set?: InputMaybe<DocType_Set_Input>;
  where: DocType_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_DocType_By_PkArgs = {
  _inc?: InputMaybe<DocType_Inc_Input>;
  _set?: InputMaybe<DocType_Set_Input>;
  pk_columns: DocType_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_DocType_ManyArgs = {
  updates: Array<DocType_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_DomainArgs = {
  _append?: InputMaybe<Domain_Append_Input>;
  _delete_at_path?: InputMaybe<Domain_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Domain_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Domain_Delete_Key_Input>;
  _inc?: InputMaybe<Domain_Inc_Input>;
  _prepend?: InputMaybe<Domain_Prepend_Input>;
  _set?: InputMaybe<Domain_Set_Input>;
  where: Domain_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_DomainCheckoutArgs = {
  _inc?: InputMaybe<DomainCheckout_Inc_Input>;
  _set?: InputMaybe<DomainCheckout_Set_Input>;
  where: DomainCheckout_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_DomainCheckout_By_PkArgs = {
  _inc?: InputMaybe<DomainCheckout_Inc_Input>;
  _set?: InputMaybe<DomainCheckout_Set_Input>;
  pk_columns: DomainCheckout_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_DomainCheckout_ManyArgs = {
  updates: Array<DomainCheckout_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_DomainNoteArgs = {
  _inc?: InputMaybe<DomainNote_Inc_Input>;
  _set?: InputMaybe<DomainNote_Set_Input>;
  where: DomainNote_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_DomainNote_By_PkArgs = {
  _inc?: InputMaybe<DomainNote_Inc_Input>;
  _set?: InputMaybe<DomainNote_Set_Input>;
  pk_columns: DomainNote_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_DomainNote_ManyArgs = {
  updates: Array<DomainNote_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_DomainServerConnectionArgs = {
  _inc?: InputMaybe<DomainServerConnection_Inc_Input>;
  _set?: InputMaybe<DomainServerConnection_Set_Input>;
  where: DomainServerConnection_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_DomainServerConnection_By_PkArgs = {
  _inc?: InputMaybe<DomainServerConnection_Inc_Input>;
  _set?: InputMaybe<DomainServerConnection_Set_Input>;
  pk_columns: DomainServerConnection_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_DomainServerConnection_ManyArgs = {
  updates: Array<DomainServerConnection_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_DomainStatusArgs = {
  _inc?: InputMaybe<DomainStatus_Inc_Input>;
  _set?: InputMaybe<DomainStatus_Set_Input>;
  where: DomainStatus_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_DomainStatus_By_PkArgs = {
  _inc?: InputMaybe<DomainStatus_Inc_Input>;
  _set?: InputMaybe<DomainStatus_Set_Input>;
  pk_columns: DomainStatus_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_DomainStatus_ManyArgs = {
  updates: Array<DomainStatus_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Domain_By_PkArgs = {
  _append?: InputMaybe<Domain_Append_Input>;
  _delete_at_path?: InputMaybe<Domain_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Domain_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Domain_Delete_Key_Input>;
  _inc?: InputMaybe<Domain_Inc_Input>;
  _prepend?: InputMaybe<Domain_Prepend_Input>;
  _set?: InputMaybe<Domain_Set_Input>;
  pk_columns: Domain_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Domain_ManyArgs = {
  updates: Array<Domain_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_EvidenceArgs = {
  _inc?: InputMaybe<Evidence_Inc_Input>;
  _set?: InputMaybe<Evidence_Set_Input>;
  where: Evidence_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Evidence_By_PkArgs = {
  _inc?: InputMaybe<Evidence_Inc_Input>;
  _set?: InputMaybe<Evidence_Set_Input>;
  pk_columns: Evidence_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Evidence_ManyArgs = {
  updates: Array<Evidence_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ExtraFieldModelArgs = {
  _set?: InputMaybe<ExtraFieldModel_Set_Input>;
  where: ExtraFieldModel_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ExtraFieldModel_By_PkArgs = {
  _set?: InputMaybe<ExtraFieldModel_Set_Input>;
  pk_columns: ExtraFieldModel_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ExtraFieldModel_ManyArgs = {
  updates: Array<ExtraFieldModel_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ExtraFieldSpecArgs = {
  _inc?: InputMaybe<ExtraFieldSpec_Inc_Input>;
  _set?: InputMaybe<ExtraFieldSpec_Set_Input>;
  where: ExtraFieldSpec_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ExtraFieldSpec_By_PkArgs = {
  _inc?: InputMaybe<ExtraFieldSpec_Inc_Input>;
  _set?: InputMaybe<ExtraFieldSpec_Set_Input>;
  pk_columns: ExtraFieldSpec_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ExtraFieldSpec_ManyArgs = {
  updates: Array<ExtraFieldSpec_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_FindingArgs = {
  _append?: InputMaybe<Finding_Append_Input>;
  _delete_at_path?: InputMaybe<Finding_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Finding_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Finding_Delete_Key_Input>;
  _inc?: InputMaybe<Finding_Inc_Input>;
  _prepend?: InputMaybe<Finding_Prepend_Input>;
  _set?: InputMaybe<Finding_Set_Input>;
  where: Finding_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_FindingNoteArgs = {
  _inc?: InputMaybe<FindingNote_Inc_Input>;
  _set?: InputMaybe<FindingNote_Set_Input>;
  where: FindingNote_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_FindingNote_By_PkArgs = {
  _inc?: InputMaybe<FindingNote_Inc_Input>;
  _set?: InputMaybe<FindingNote_Set_Input>;
  pk_columns: FindingNote_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_FindingNote_ManyArgs = {
  updates: Array<FindingNote_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_FindingSeverityArgs = {
  _inc?: InputMaybe<FindingSeverity_Inc_Input>;
  _set?: InputMaybe<FindingSeverity_Set_Input>;
  where: FindingSeverity_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_FindingSeverity_By_PkArgs = {
  _inc?: InputMaybe<FindingSeverity_Inc_Input>;
  _set?: InputMaybe<FindingSeverity_Set_Input>;
  pk_columns: FindingSeverity_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_FindingSeverity_ManyArgs = {
  updates: Array<FindingSeverity_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_FindingTypeArgs = {
  _inc?: InputMaybe<FindingType_Inc_Input>;
  _set?: InputMaybe<FindingType_Set_Input>;
  where: FindingType_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_FindingType_By_PkArgs = {
  _inc?: InputMaybe<FindingType_Inc_Input>;
  _set?: InputMaybe<FindingType_Set_Input>;
  pk_columns: FindingType_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_FindingType_ManyArgs = {
  updates: Array<FindingType_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Finding_By_PkArgs = {
  _append?: InputMaybe<Finding_Append_Input>;
  _delete_at_path?: InputMaybe<Finding_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Finding_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Finding_Delete_Key_Input>;
  _inc?: InputMaybe<Finding_Inc_Input>;
  _prepend?: InputMaybe<Finding_Prepend_Input>;
  _set?: InputMaybe<Finding_Set_Input>;
  pk_columns: Finding_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Finding_ManyArgs = {
  updates: Array<Finding_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_GroupArgs = {
  _inc?: InputMaybe<Group_Inc_Input>;
  _set?: InputMaybe<Group_Set_Input>;
  where: Group_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_GroupPermissionArgs = {
  _inc?: InputMaybe<GroupPermission_Inc_Input>;
  _set?: InputMaybe<GroupPermission_Set_Input>;
  where: GroupPermission_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_GroupPermission_By_PkArgs = {
  _inc?: InputMaybe<GroupPermission_Inc_Input>;
  _set?: InputMaybe<GroupPermission_Set_Input>;
  pk_columns: GroupPermission_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_GroupPermission_ManyArgs = {
  updates: Array<GroupPermission_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Group_By_PkArgs = {
  _inc?: InputMaybe<Group_Inc_Input>;
  _set?: InputMaybe<Group_Set_Input>;
  pk_columns: Group_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Group_ManyArgs = {
  updates: Array<Group_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_HealthStatusArgs = {
  _inc?: InputMaybe<HealthStatus_Inc_Input>;
  _set?: InputMaybe<HealthStatus_Set_Input>;
  where: HealthStatus_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_HealthStatus_By_PkArgs = {
  _inc?: InputMaybe<HealthStatus_Inc_Input>;
  _set?: InputMaybe<HealthStatus_Set_Input>;
  pk_columns: HealthStatus_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_HealthStatus_ManyArgs = {
  updates: Array<HealthStatus_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ObjectiveArgs = {
  _inc?: InputMaybe<Objective_Inc_Input>;
  _set?: InputMaybe<Objective_Set_Input>;
  where: Objective_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ObjectivePriorityArgs = {
  _inc?: InputMaybe<ObjectivePriority_Inc_Input>;
  _set?: InputMaybe<ObjectivePriority_Set_Input>;
  where: ObjectivePriority_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ObjectivePriority_By_PkArgs = {
  _inc?: InputMaybe<ObjectivePriority_Inc_Input>;
  _set?: InputMaybe<ObjectivePriority_Set_Input>;
  pk_columns: ObjectivePriority_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ObjectivePriority_ManyArgs = {
  updates: Array<ObjectivePriority_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ObjectiveStatusArgs = {
  _inc?: InputMaybe<ObjectiveStatus_Inc_Input>;
  _set?: InputMaybe<ObjectiveStatus_Set_Input>;
  where: ObjectiveStatus_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ObjectiveStatus_By_PkArgs = {
  _inc?: InputMaybe<ObjectiveStatus_Inc_Input>;
  _set?: InputMaybe<ObjectiveStatus_Set_Input>;
  pk_columns: ObjectiveStatus_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ObjectiveStatus_ManyArgs = {
  updates: Array<ObjectiveStatus_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ObjectiveSubTaskArgs = {
  _inc?: InputMaybe<ObjectiveSubTask_Inc_Input>;
  _set?: InputMaybe<ObjectiveSubTask_Set_Input>;
  where: ObjectiveSubTask_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ObjectiveSubTask_By_PkArgs = {
  _inc?: InputMaybe<ObjectiveSubTask_Inc_Input>;
  _set?: InputMaybe<ObjectiveSubTask_Set_Input>;
  pk_columns: ObjectiveSubTask_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ObjectiveSubTask_ManyArgs = {
  updates: Array<ObjectiveSubTask_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Objective_By_PkArgs = {
  _inc?: InputMaybe<Objective_Inc_Input>;
  _set?: InputMaybe<Objective_Set_Input>;
  pk_columns: Objective_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Objective_ManyArgs = {
  updates: Array<Objective_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_OplogArgs = {
  _inc?: InputMaybe<Oplog_Inc_Input>;
  _set?: InputMaybe<Oplog_Set_Input>;
  where: Oplog_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_OplogEntryArgs = {
  _append?: InputMaybe<OplogEntry_Append_Input>;
  _delete_at_path?: InputMaybe<OplogEntry_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<OplogEntry_Delete_Elem_Input>;
  _delete_key?: InputMaybe<OplogEntry_Delete_Key_Input>;
  _inc?: InputMaybe<OplogEntry_Inc_Input>;
  _prepend?: InputMaybe<OplogEntry_Prepend_Input>;
  _set?: InputMaybe<OplogEntry_Set_Input>;
  where: OplogEntry_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_OplogEntry_By_PkArgs = {
  _append?: InputMaybe<OplogEntry_Append_Input>;
  _delete_at_path?: InputMaybe<OplogEntry_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<OplogEntry_Delete_Elem_Input>;
  _delete_key?: InputMaybe<OplogEntry_Delete_Key_Input>;
  _inc?: InputMaybe<OplogEntry_Inc_Input>;
  _prepend?: InputMaybe<OplogEntry_Prepend_Input>;
  _set?: InputMaybe<OplogEntry_Set_Input>;
  pk_columns: OplogEntry_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_OplogEntry_ManyArgs = {
  updates: Array<OplogEntry_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Oplog_By_PkArgs = {
  _inc?: InputMaybe<Oplog_Inc_Input>;
  _set?: InputMaybe<Oplog_Set_Input>;
  pk_columns: Oplog_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Oplog_ManyArgs = {
  updates: Array<Oplog_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ProjectArgs = {
  _append?: InputMaybe<Project_Append_Input>;
  _delete_at_path?: InputMaybe<Project_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Project_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Project_Delete_Key_Input>;
  _inc?: InputMaybe<Project_Inc_Input>;
  _prepend?: InputMaybe<Project_Prepend_Input>;
  _set?: InputMaybe<Project_Set_Input>;
  where: Project_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ProjectAssignmentArgs = {
  _inc?: InputMaybe<ProjectAssignment_Inc_Input>;
  _set?: InputMaybe<ProjectAssignment_Set_Input>;
  where: ProjectAssignment_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ProjectAssignment_By_PkArgs = {
  _inc?: InputMaybe<ProjectAssignment_Inc_Input>;
  _set?: InputMaybe<ProjectAssignment_Set_Input>;
  pk_columns: ProjectAssignment_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ProjectAssignment_ManyArgs = {
  updates: Array<ProjectAssignment_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ProjectContactArgs = {
  _inc?: InputMaybe<ProjectContact_Inc_Input>;
  _set?: InputMaybe<ProjectContact_Set_Input>;
  where: ProjectContact_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ProjectContact_By_PkArgs = {
  _inc?: InputMaybe<ProjectContact_Inc_Input>;
  _set?: InputMaybe<ProjectContact_Set_Input>;
  pk_columns: ProjectContact_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ProjectContact_ManyArgs = {
  updates: Array<ProjectContact_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ProjectInviteArgs = {
  _inc?: InputMaybe<ProjectInvite_Inc_Input>;
  _set?: InputMaybe<ProjectInvite_Set_Input>;
  where: ProjectInvite_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ProjectInvite_By_PkArgs = {
  _inc?: InputMaybe<ProjectInvite_Inc_Input>;
  _set?: InputMaybe<ProjectInvite_Set_Input>;
  pk_columns: ProjectInvite_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ProjectInvite_ManyArgs = {
  updates: Array<ProjectInvite_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ProjectNoteArgs = {
  _inc?: InputMaybe<ProjectNote_Inc_Input>;
  _set?: InputMaybe<ProjectNote_Set_Input>;
  where: ProjectNote_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ProjectNote_By_PkArgs = {
  _inc?: InputMaybe<ProjectNote_Inc_Input>;
  _set?: InputMaybe<ProjectNote_Set_Input>;
  pk_columns: ProjectNote_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ProjectNote_ManyArgs = {
  updates: Array<ProjectNote_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ProjectRoleArgs = {
  _inc?: InputMaybe<ProjectRole_Inc_Input>;
  _set?: InputMaybe<ProjectRole_Set_Input>;
  where: ProjectRole_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ProjectRole_By_PkArgs = {
  _inc?: InputMaybe<ProjectRole_Inc_Input>;
  _set?: InputMaybe<ProjectRole_Set_Input>;
  pk_columns: ProjectRole_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ProjectRole_ManyArgs = {
  updates: Array<ProjectRole_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ProjectTypeArgs = {
  _inc?: InputMaybe<ProjectType_Inc_Input>;
  _set?: InputMaybe<ProjectType_Set_Input>;
  where: ProjectType_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ProjectType_By_PkArgs = {
  _inc?: InputMaybe<ProjectType_Inc_Input>;
  _set?: InputMaybe<ProjectType_Set_Input>;
  pk_columns: ProjectType_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ProjectType_ManyArgs = {
  updates: Array<ProjectType_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Project_By_PkArgs = {
  _append?: InputMaybe<Project_Append_Input>;
  _delete_at_path?: InputMaybe<Project_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Project_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Project_Delete_Key_Input>;
  _inc?: InputMaybe<Project_Inc_Input>;
  _prepend?: InputMaybe<Project_Prepend_Input>;
  _set?: InputMaybe<Project_Set_Input>;
  pk_columns: Project_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Project_ManyArgs = {
  updates: Array<Project_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ReportArgs = {
  _append?: InputMaybe<Report_Append_Input>;
  _delete_at_path?: InputMaybe<Report_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Report_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Report_Delete_Key_Input>;
  _inc?: InputMaybe<Report_Inc_Input>;
  _prepend?: InputMaybe<Report_Prepend_Input>;
  _set?: InputMaybe<Report_Set_Input>;
  where: Report_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ReportConfigurationArgs = {
  _inc?: InputMaybe<ReportConfiguration_Inc_Input>;
  _set?: InputMaybe<ReportConfiguration_Set_Input>;
  where: ReportConfiguration_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ReportConfiguration_By_PkArgs = {
  _inc?: InputMaybe<ReportConfiguration_Inc_Input>;
  _set?: InputMaybe<ReportConfiguration_Set_Input>;
  pk_columns: ReportConfiguration_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ReportConfiguration_ManyArgs = {
  updates: Array<ReportConfiguration_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Report_By_PkArgs = {
  _append?: InputMaybe<Report_Append_Input>;
  _delete_at_path?: InputMaybe<Report_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Report_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Report_Delete_Key_Input>;
  _inc?: InputMaybe<Report_Inc_Input>;
  _prepend?: InputMaybe<Report_Prepend_Input>;
  _set?: InputMaybe<Report_Set_Input>;
  pk_columns: Report_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Report_ManyArgs = {
  updates: Array<Report_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ReportedFindingArgs = {
  _append?: InputMaybe<ReportedFinding_Append_Input>;
  _delete_at_path?: InputMaybe<ReportedFinding_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<ReportedFinding_Delete_Elem_Input>;
  _delete_key?: InputMaybe<ReportedFinding_Delete_Key_Input>;
  _inc?: InputMaybe<ReportedFinding_Inc_Input>;
  _prepend?: InputMaybe<ReportedFinding_Prepend_Input>;
  _set?: InputMaybe<ReportedFinding_Set_Input>;
  where: ReportedFinding_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ReportedFindingNoteArgs = {
  _inc?: InputMaybe<ReportedFindingNote_Inc_Input>;
  _set?: InputMaybe<ReportedFindingNote_Set_Input>;
  where: ReportedFindingNote_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ReportedFindingNote_By_PkArgs = {
  _inc?: InputMaybe<ReportedFindingNote_Inc_Input>;
  _set?: InputMaybe<ReportedFindingNote_Set_Input>;
  pk_columns: ReportedFindingNote_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ReportedFindingNote_ManyArgs = {
  updates: Array<ReportedFindingNote_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ReportedFinding_By_PkArgs = {
  _append?: InputMaybe<ReportedFinding_Append_Input>;
  _delete_at_path?: InputMaybe<ReportedFinding_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<ReportedFinding_Delete_Elem_Input>;
  _delete_key?: InputMaybe<ReportedFinding_Delete_Key_Input>;
  _inc?: InputMaybe<ReportedFinding_Inc_Input>;
  _prepend?: InputMaybe<ReportedFinding_Prepend_Input>;
  _set?: InputMaybe<ReportedFinding_Set_Input>;
  pk_columns: ReportedFinding_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ReportedFinding_ManyArgs = {
  updates: Array<ReportedFinding_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Reporting_ObservationArgs = {
  _append?: InputMaybe<Reporting_Observation_Append_Input>;
  _delete_at_path?: InputMaybe<Reporting_Observation_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Reporting_Observation_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Reporting_Observation_Delete_Key_Input>;
  _inc?: InputMaybe<Reporting_Observation_Inc_Input>;
  _prepend?: InputMaybe<Reporting_Observation_Prepend_Input>;
  _set?: InputMaybe<Reporting_Observation_Set_Input>;
  where: Reporting_Observation_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Reporting_Observation_By_PkArgs = {
  _append?: InputMaybe<Reporting_Observation_Append_Input>;
  _delete_at_path?: InputMaybe<Reporting_Observation_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Reporting_Observation_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Reporting_Observation_Delete_Key_Input>;
  _inc?: InputMaybe<Reporting_Observation_Inc_Input>;
  _prepend?: InputMaybe<Reporting_Observation_Prepend_Input>;
  _set?: InputMaybe<Reporting_Observation_Set_Input>;
  pk_columns: Reporting_Observation_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Reporting_Observation_ManyArgs = {
  updates: Array<Reporting_Observation_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_Reporting_ReportobservationlinkArgs = {
  _append?: InputMaybe<Reporting_Reportobservationlink_Append_Input>;
  _delete_at_path?: InputMaybe<Reporting_Reportobservationlink_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Reporting_Reportobservationlink_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Reporting_Reportobservationlink_Delete_Key_Input>;
  _inc?: InputMaybe<Reporting_Reportobservationlink_Inc_Input>;
  _prepend?: InputMaybe<Reporting_Reportobservationlink_Prepend_Input>;
  _set?: InputMaybe<Reporting_Reportobservationlink_Set_Input>;
  where: Reporting_Reportobservationlink_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Reporting_Reportobservationlink_By_PkArgs = {
  _append?: InputMaybe<Reporting_Reportobservationlink_Append_Input>;
  _delete_at_path?: InputMaybe<Reporting_Reportobservationlink_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Reporting_Reportobservationlink_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Reporting_Reportobservationlink_Delete_Key_Input>;
  _inc?: InputMaybe<Reporting_Reportobservationlink_Inc_Input>;
  _prepend?: InputMaybe<Reporting_Reportobservationlink_Prepend_Input>;
  _set?: InputMaybe<Reporting_Reportobservationlink_Set_Input>;
  pk_columns: Reporting_Reportobservationlink_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Reporting_Reportobservationlink_ManyArgs = {
  updates: Array<Reporting_Reportobservationlink_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ScopeArgs = {
  _inc?: InputMaybe<Scope_Inc_Input>;
  _set?: InputMaybe<Scope_Set_Input>;
  where: Scope_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Scope_By_PkArgs = {
  _inc?: InputMaybe<Scope_Inc_Input>;
  _set?: InputMaybe<Scope_Set_Input>;
  pk_columns: Scope_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Scope_ManyArgs = {
  updates: Array<Scope_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ServerCheckoutArgs = {
  _inc?: InputMaybe<ServerCheckout_Inc_Input>;
  _set?: InputMaybe<ServerCheckout_Set_Input>;
  where: ServerCheckout_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ServerCheckout_By_PkArgs = {
  _inc?: InputMaybe<ServerCheckout_Inc_Input>;
  _set?: InputMaybe<ServerCheckout_Set_Input>;
  pk_columns: ServerCheckout_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ServerCheckout_ManyArgs = {
  updates: Array<ServerCheckout_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ServerNoteArgs = {
  _inc?: InputMaybe<ServerNote_Inc_Input>;
  _set?: InputMaybe<ServerNote_Set_Input>;
  where: ServerNote_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ServerNote_By_PkArgs = {
  _inc?: InputMaybe<ServerNote_Inc_Input>;
  _set?: InputMaybe<ServerNote_Set_Input>;
  pk_columns: ServerNote_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ServerNote_ManyArgs = {
  updates: Array<ServerNote_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ServerProviderArgs = {
  _inc?: InputMaybe<ServerProvider_Inc_Input>;
  _set?: InputMaybe<ServerProvider_Set_Input>;
  where: ServerProvider_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ServerProvider_By_PkArgs = {
  _inc?: InputMaybe<ServerProvider_Inc_Input>;
  _set?: InputMaybe<ServerProvider_Set_Input>;
  pk_columns: ServerProvider_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ServerProvider_ManyArgs = {
  updates: Array<ServerProvider_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ServerRoleArgs = {
  _inc?: InputMaybe<ServerRole_Inc_Input>;
  _set?: InputMaybe<ServerRole_Set_Input>;
  where: ServerRole_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ServerRole_By_PkArgs = {
  _inc?: InputMaybe<ServerRole_Inc_Input>;
  _set?: InputMaybe<ServerRole_Set_Input>;
  pk_columns: ServerRole_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ServerRole_ManyArgs = {
  updates: Array<ServerRole_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_ServerStatusArgs = {
  _inc?: InputMaybe<ServerStatus_Inc_Input>;
  _set?: InputMaybe<ServerStatus_Set_Input>;
  where: ServerStatus_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ServerStatus_By_PkArgs = {
  _inc?: InputMaybe<ServerStatus_Inc_Input>;
  _set?: InputMaybe<ServerStatus_Set_Input>;
  pk_columns: ServerStatus_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ServerStatus_ManyArgs = {
  updates: Array<ServerStatus_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_StaticServerArgs = {
  _append?: InputMaybe<StaticServer_Append_Input>;
  _delete_at_path?: InputMaybe<StaticServer_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<StaticServer_Delete_Elem_Input>;
  _delete_key?: InputMaybe<StaticServer_Delete_Key_Input>;
  _inc?: InputMaybe<StaticServer_Inc_Input>;
  _prepend?: InputMaybe<StaticServer_Prepend_Input>;
  _set?: InputMaybe<StaticServer_Set_Input>;
  where: StaticServer_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_StaticServer_By_PkArgs = {
  _append?: InputMaybe<StaticServer_Append_Input>;
  _delete_at_path?: InputMaybe<StaticServer_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<StaticServer_Delete_Elem_Input>;
  _delete_key?: InputMaybe<StaticServer_Delete_Key_Input>;
  _inc?: InputMaybe<StaticServer_Inc_Input>;
  _prepend?: InputMaybe<StaticServer_Prepend_Input>;
  _set?: InputMaybe<StaticServer_Set_Input>;
  pk_columns: StaticServer_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_StaticServer_ManyArgs = {
  updates: Array<StaticServer_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_TagArgs = {
  _inc?: InputMaybe<Tag_Inc_Input>;
  _set?: InputMaybe<Tag_Set_Input>;
  where: Tag_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Tag_By_PkArgs = {
  _inc?: InputMaybe<Tag_Inc_Input>;
  _set?: InputMaybe<Tag_Set_Input>;
  pk_columns: Tag_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Tag_ManyArgs = {
  updates: Array<Tag_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_TaggedItemArgs = {
  _inc?: InputMaybe<TaggedItem_Inc_Input>;
  _set?: InputMaybe<TaggedItem_Set_Input>;
  where: TaggedItem_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_TaggedItem_By_PkArgs = {
  _inc?: InputMaybe<TaggedItem_Inc_Input>;
  _set?: InputMaybe<TaggedItem_Set_Input>;
  pk_columns: TaggedItem_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_TaggedItem_ManyArgs = {
  updates: Array<TaggedItem_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_TargetArgs = {
  _inc?: InputMaybe<Target_Inc_Input>;
  _set?: InputMaybe<Target_Set_Input>;
  where: Target_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Target_By_PkArgs = {
  _inc?: InputMaybe<Target_Inc_Input>;
  _set?: InputMaybe<Target_Set_Input>;
  pk_columns: Target_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Target_ManyArgs = {
  updates: Array<Target_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_TaskArgs = {
  _inc?: InputMaybe<Task_Inc_Input>;
  _set?: InputMaybe<Task_Set_Input>;
  where: Task_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Task_By_PkArgs = {
  _inc?: InputMaybe<Task_Inc_Input>;
  _set?: InputMaybe<Task_Set_Input>;
  pk_columns: Task_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Task_ManyArgs = {
  updates: Array<Task_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_TemplateArgs = {
  _append?: InputMaybe<Template_Append_Input>;
  _delete_at_path?: InputMaybe<Template_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Template_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Template_Delete_Key_Input>;
  _inc?: InputMaybe<Template_Inc_Input>;
  _prepend?: InputMaybe<Template_Prepend_Input>;
  _set?: InputMaybe<Template_Set_Input>;
  where: Template_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Template_By_PkArgs = {
  _append?: InputMaybe<Template_Append_Input>;
  _delete_at_path?: InputMaybe<Template_Delete_At_Path_Input>;
  _delete_elem?: InputMaybe<Template_Delete_Elem_Input>;
  _delete_key?: InputMaybe<Template_Delete_Key_Input>;
  _inc?: InputMaybe<Template_Inc_Input>;
  _prepend?: InputMaybe<Template_Prepend_Input>;
  _set?: InputMaybe<Template_Set_Input>;
  pk_columns: Template_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Template_ManyArgs = {
  updates: Array<Template_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_UserArgs = {
  _inc?: InputMaybe<User_Inc_Input>;
  _set?: InputMaybe<User_Set_Input>;
  where: User_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_UserGroupArgs = {
  _inc?: InputMaybe<UserGroup_Inc_Input>;
  _set?: InputMaybe<UserGroup_Set_Input>;
  where: UserGroup_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_UserGroup_By_PkArgs = {
  _inc?: InputMaybe<UserGroup_Inc_Input>;
  _set?: InputMaybe<UserGroup_Set_Input>;
  pk_columns: UserGroup_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_UserGroup_ManyArgs = {
  updates: Array<UserGroup_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_UserPermissionArgs = {
  _inc?: InputMaybe<UserPermission_Inc_Input>;
  _set?: InputMaybe<UserPermission_Set_Input>;
  where: UserPermission_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_UserPermission_By_PkArgs = {
  _inc?: InputMaybe<UserPermission_Inc_Input>;
  _set?: InputMaybe<UserPermission_Set_Input>;
  pk_columns: UserPermission_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_UserPermission_ManyArgs = {
  updates: Array<UserPermission_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_UserProfileArgs = {
  _inc?: InputMaybe<UserProfile_Inc_Input>;
  _set?: InputMaybe<UserProfile_Set_Input>;
  where: UserProfile_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_UserProfile_By_PkArgs = {
  _inc?: InputMaybe<UserProfile_Inc_Input>;
  _set?: InputMaybe<UserProfile_Set_Input>;
  pk_columns: UserProfile_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_UserProfile_ManyArgs = {
  updates: Array<UserProfile_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_User_By_PkArgs = {
  _inc?: InputMaybe<User_Inc_Input>;
  _set?: InputMaybe<User_Set_Input>;
  pk_columns: User_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_User_ManyArgs = {
  updates: Array<User_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_WhitecardArgs = {
  _inc?: InputMaybe<Whitecard_Inc_Input>;
  _set?: InputMaybe<Whitecard_Set_Input>;
  where: Whitecard_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Whitecard_By_PkArgs = {
  _inc?: InputMaybe<Whitecard_Inc_Input>;
  _set?: InputMaybe<Whitecard_Set_Input>;
  pk_columns: Whitecard_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Whitecard_ManyArgs = {
  updates: Array<Whitecard_Updates>;
};


/** mutation root */
export type Mutation_RootUpdate_WhoisStatusArgs = {
  _inc?: InputMaybe<WhoisStatus_Inc_Input>;
  _set?: InputMaybe<WhoisStatus_Set_Input>;
  where: WhoisStatus_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_WhoisStatus_By_PkArgs = {
  _inc?: InputMaybe<WhoisStatus_Inc_Input>;
  _set?: InputMaybe<WhoisStatus_Set_Input>;
  pk_columns: WhoisStatus_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_WhoisStatus_ManyArgs = {
  updates: Array<WhoisStatus_Updates>;
};


/** mutation root */
export type Mutation_RootUploadEvidenceArgs = {
  caption: Scalars['String']['input'];
  description?: InputMaybe<Scalars['String']['input']>;
  file_base64: Scalars['String']['input'];
  filename: Scalars['String']['input'];
  finding?: InputMaybe<Scalars['Int']['input']>;
  friendly_name: Scalars['String']['input'];
  report?: InputMaybe<Scalars['Int']['input']>;
  tags?: InputMaybe<Scalars['String']['input']>;
};


/** mutation root */
export type Mutation_RootUploadReportTemplateArgs = {
  changelog?: InputMaybe<Scalars['String']['input']>;
  client?: InputMaybe<Scalars['Int']['input']>;
  description: Scalars['String']['input'];
  doc_type: Scalars['Int']['input'];
  file_base64: Scalars['String']['input'];
  filename: Scalars['String']['input'];
  filename_override?: InputMaybe<Scalars['String']['input']>;
  landscape?: InputMaybe<Scalars['Boolean']['input']>;
  name: Scalars['String']['input'];
  p_style?: InputMaybe<Scalars['String']['input']>;
  protected?: InputMaybe<Scalars['Boolean']['input']>;
  tags?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "rolodex_projectobjective" */
export type Objective = {
  __typename?: 'objective';
  complete: Scalars['Boolean']['output'];
  deadline?: Maybe<Scalars['date']['output']>;
  description: Scalars['String']['output'];
  id: Scalars['bigint']['output'];
  markedComplete?: Maybe<Scalars['date']['output']>;
  objective: Scalars['String']['output'];
  /** An object relationship */
  objectivePriority?: Maybe<ObjectivePriority>;
  /** An object relationship */
  objectiveStatus: ObjectiveStatus;
  /** An array relationship */
  objectiveSubTasks: Array<ObjectiveSubTask>;
  /** An aggregate relationship */
  objectiveSubTasks_aggregate: ObjectiveSubTask_Aggregate;
  position: Scalars['Int']['output'];
  priorityId?: Maybe<Scalars['bigint']['output']>;
  /** An object relationship */
  project: Project;
  projectId: Scalars['bigint']['output'];
  result: Scalars['String']['output'];
  statusId: Scalars['bigint']['output'];
};


/** columns and relationships of "rolodex_projectobjective" */
export type ObjectiveObjectiveSubTasksArgs = {
  distinct_on?: InputMaybe<Array<ObjectiveSubTask_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ObjectiveSubTask_Order_By>>;
  where?: InputMaybe<ObjectiveSubTask_Bool_Exp>;
};


/** columns and relationships of "rolodex_projectobjective" */
export type ObjectiveObjectiveSubTasks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ObjectiveSubTask_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ObjectiveSubTask_Order_By>>;
  where?: InputMaybe<ObjectiveSubTask_Bool_Exp>;
};

/** columns and relationships of "rolodex_objectivepriority" */
export type ObjectivePriority = {
  __typename?: 'objectivePriority';
  id: Scalars['bigint']['output'];
  /** An array relationship */
  objectives: Array<Objective>;
  /** An aggregate relationship */
  objectives_aggregate: Objective_Aggregate;
  priority: Scalars['String']['output'];
  weight: Scalars['Int']['output'];
};


/** columns and relationships of "rolodex_objectivepriority" */
export type ObjectivePriorityObjectivesArgs = {
  distinct_on?: InputMaybe<Array<Objective_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Objective_Order_By>>;
  where?: InputMaybe<Objective_Bool_Exp>;
};


/** columns and relationships of "rolodex_objectivepriority" */
export type ObjectivePriorityObjectives_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Objective_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Objective_Order_By>>;
  where?: InputMaybe<Objective_Bool_Exp>;
};

/** aggregated selection of "rolodex_objectivepriority" */
export type ObjectivePriority_Aggregate = {
  __typename?: 'objectivePriority_aggregate';
  aggregate?: Maybe<ObjectivePriority_Aggregate_Fields>;
  nodes: Array<ObjectivePriority>;
};

/** aggregate fields of "rolodex_objectivepriority" */
export type ObjectivePriority_Aggregate_Fields = {
  __typename?: 'objectivePriority_aggregate_fields';
  avg?: Maybe<ObjectivePriority_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ObjectivePriority_Max_Fields>;
  min?: Maybe<ObjectivePriority_Min_Fields>;
  stddev?: Maybe<ObjectivePriority_Stddev_Fields>;
  stddev_pop?: Maybe<ObjectivePriority_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ObjectivePriority_Stddev_Samp_Fields>;
  sum?: Maybe<ObjectivePriority_Sum_Fields>;
  var_pop?: Maybe<ObjectivePriority_Var_Pop_Fields>;
  var_samp?: Maybe<ObjectivePriority_Var_Samp_Fields>;
  variance?: Maybe<ObjectivePriority_Variance_Fields>;
};


/** aggregate fields of "rolodex_objectivepriority" */
export type ObjectivePriority_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ObjectivePriority_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type ObjectivePriority_Avg_Fields = {
  __typename?: 'objectivePriority_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "rolodex_objectivepriority". All fields are combined with a logical 'AND'. */
export type ObjectivePriority_Bool_Exp = {
  _and?: InputMaybe<Array<ObjectivePriority_Bool_Exp>>;
  _not?: InputMaybe<ObjectivePriority_Bool_Exp>;
  _or?: InputMaybe<Array<ObjectivePriority_Bool_Exp>>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  objectives?: InputMaybe<Objective_Bool_Exp>;
  objectives_aggregate?: InputMaybe<Objective_Aggregate_Bool_Exp>;
  priority?: InputMaybe<String_Comparison_Exp>;
  weight?: InputMaybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "rolodex_objectivepriority" */
export enum ObjectivePriority_Constraint {
  /** unique or primary key constraint on columns "id" */
  RolodexObjectivepriorityPkey = 'rolodex_objectivepriority_pkey',
  /** unique or primary key constraint on columns "priority" */
  RolodexObjectivepriorityPriorityKey = 'rolodex_objectivepriority_priority_key'
}

/** input type for incrementing numeric columns in table "rolodex_objectivepriority" */
export type ObjectivePriority_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  weight?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "rolodex_objectivepriority" */
export type ObjectivePriority_Insert_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  objectives?: InputMaybe<Objective_Arr_Rel_Insert_Input>;
  priority?: InputMaybe<Scalars['String']['input']>;
  weight?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate max on columns */
export type ObjectivePriority_Max_Fields = {
  __typename?: 'objectivePriority_max_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  priority?: Maybe<Scalars['String']['output']>;
  weight?: Maybe<Scalars['Int']['output']>;
};

/** aggregate min on columns */
export type ObjectivePriority_Min_Fields = {
  __typename?: 'objectivePriority_min_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  priority?: Maybe<Scalars['String']['output']>;
  weight?: Maybe<Scalars['Int']['output']>;
};

/** response of any mutation on the table "rolodex_objectivepriority" */
export type ObjectivePriority_Mutation_Response = {
  __typename?: 'objectivePriority_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ObjectivePriority>;
};

/** input type for inserting object relation for remote table "rolodex_objectivepriority" */
export type ObjectivePriority_Obj_Rel_Insert_Input = {
  data: ObjectivePriority_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ObjectivePriority_On_Conflict>;
};

/** on_conflict condition type for table "rolodex_objectivepriority" */
export type ObjectivePriority_On_Conflict = {
  constraint: ObjectivePriority_Constraint;
  update_columns?: Array<ObjectivePriority_Update_Column>;
  where?: InputMaybe<ObjectivePriority_Bool_Exp>;
};

/** Ordering options when selecting data from "rolodex_objectivepriority". */
export type ObjectivePriority_Order_By = {
  id?: InputMaybe<Order_By>;
  objectives_aggregate?: InputMaybe<Objective_Aggregate_Order_By>;
  priority?: InputMaybe<Order_By>;
  weight?: InputMaybe<Order_By>;
};

/** primary key columns input for table: rolodex_objectivepriority */
export type ObjectivePriority_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "rolodex_objectivepriority" */
export enum ObjectivePriority_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Priority = 'priority',
  /** column name */
  Weight = 'weight'
}

/** input type for updating data in table "rolodex_objectivepriority" */
export type ObjectivePriority_Set_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  priority?: InputMaybe<Scalars['String']['input']>;
  weight?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type ObjectivePriority_Stddev_Fields = {
  __typename?: 'objectivePriority_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type ObjectivePriority_Stddev_Pop_Fields = {
  __typename?: 'objectivePriority_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type ObjectivePriority_Stddev_Samp_Fields = {
  __typename?: 'objectivePriority_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "objectivePriority" */
export type ObjectivePriority_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ObjectivePriority_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ObjectivePriority_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  priority?: InputMaybe<Scalars['String']['input']>;
  weight?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type ObjectivePriority_Sum_Fields = {
  __typename?: 'objectivePriority_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  weight?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "rolodex_objectivepriority" */
export enum ObjectivePriority_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Priority = 'priority',
  /** column name */
  Weight = 'weight'
}

export type ObjectivePriority_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ObjectivePriority_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ObjectivePriority_Set_Input>;
  /** filter the rows which have to be updated */
  where: ObjectivePriority_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ObjectivePriority_Var_Pop_Fields = {
  __typename?: 'objectivePriority_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type ObjectivePriority_Var_Samp_Fields = {
  __typename?: 'objectivePriority_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type ObjectivePriority_Variance_Fields = {
  __typename?: 'objectivePriority_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  weight?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "rolodex_objectivestatus" */
export type ObjectiveStatus = {
  __typename?: 'objectiveStatus';
  id: Scalars['bigint']['output'];
  objectiveStatus: Scalars['String']['output'];
  /** An array relationship */
  objectiveSubTasks: Array<ObjectiveSubTask>;
  /** An aggregate relationship */
  objectiveSubTasks_aggregate: ObjectiveSubTask_Aggregate;
  /** An array relationship */
  objectives: Array<Objective>;
  /** An aggregate relationship */
  objectives_aggregate: Objective_Aggregate;
};


/** columns and relationships of "rolodex_objectivestatus" */
export type ObjectiveStatusObjectiveSubTasksArgs = {
  distinct_on?: InputMaybe<Array<ObjectiveSubTask_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ObjectiveSubTask_Order_By>>;
  where?: InputMaybe<ObjectiveSubTask_Bool_Exp>;
};


/** columns and relationships of "rolodex_objectivestatus" */
export type ObjectiveStatusObjectiveSubTasks_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ObjectiveSubTask_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ObjectiveSubTask_Order_By>>;
  where?: InputMaybe<ObjectiveSubTask_Bool_Exp>;
};


/** columns and relationships of "rolodex_objectivestatus" */
export type ObjectiveStatusObjectivesArgs = {
  distinct_on?: InputMaybe<Array<Objective_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Objective_Order_By>>;
  where?: InputMaybe<Objective_Bool_Exp>;
};


/** columns and relationships of "rolodex_objectivestatus" */
export type ObjectiveStatusObjectives_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Objective_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Objective_Order_By>>;
  where?: InputMaybe<Objective_Bool_Exp>;
};

/** aggregated selection of "rolodex_objectivestatus" */
export type ObjectiveStatus_Aggregate = {
  __typename?: 'objectiveStatus_aggregate';
  aggregate?: Maybe<ObjectiveStatus_Aggregate_Fields>;
  nodes: Array<ObjectiveStatus>;
};

/** aggregate fields of "rolodex_objectivestatus" */
export type ObjectiveStatus_Aggregate_Fields = {
  __typename?: 'objectiveStatus_aggregate_fields';
  avg?: Maybe<ObjectiveStatus_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ObjectiveStatus_Max_Fields>;
  min?: Maybe<ObjectiveStatus_Min_Fields>;
  stddev?: Maybe<ObjectiveStatus_Stddev_Fields>;
  stddev_pop?: Maybe<ObjectiveStatus_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ObjectiveStatus_Stddev_Samp_Fields>;
  sum?: Maybe<ObjectiveStatus_Sum_Fields>;
  var_pop?: Maybe<ObjectiveStatus_Var_Pop_Fields>;
  var_samp?: Maybe<ObjectiveStatus_Var_Samp_Fields>;
  variance?: Maybe<ObjectiveStatus_Variance_Fields>;
};


/** aggregate fields of "rolodex_objectivestatus" */
export type ObjectiveStatus_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ObjectiveStatus_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type ObjectiveStatus_Avg_Fields = {
  __typename?: 'objectiveStatus_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "rolodex_objectivestatus". All fields are combined with a logical 'AND'. */
export type ObjectiveStatus_Bool_Exp = {
  _and?: InputMaybe<Array<ObjectiveStatus_Bool_Exp>>;
  _not?: InputMaybe<ObjectiveStatus_Bool_Exp>;
  _or?: InputMaybe<Array<ObjectiveStatus_Bool_Exp>>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  objectiveStatus?: InputMaybe<String_Comparison_Exp>;
  objectiveSubTasks?: InputMaybe<ObjectiveSubTask_Bool_Exp>;
  objectiveSubTasks_aggregate?: InputMaybe<ObjectiveSubTask_Aggregate_Bool_Exp>;
  objectives?: InputMaybe<Objective_Bool_Exp>;
  objectives_aggregate?: InputMaybe<Objective_Aggregate_Bool_Exp>;
};

/** unique or primary key constraints on table "rolodex_objectivestatus" */
export enum ObjectiveStatus_Constraint {
  /** unique or primary key constraint on columns "objective_status" */
  RolodexObjectivestatusObjectiveStatusKey = 'rolodex_objectivestatus_objective_status_key',
  /** unique or primary key constraint on columns "id" */
  RolodexObjectivestatusPkey = 'rolodex_objectivestatus_pkey'
}

/** input type for incrementing numeric columns in table "rolodex_objectivestatus" */
export type ObjectiveStatus_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "rolodex_objectivestatus" */
export type ObjectiveStatus_Insert_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  objectiveStatus?: InputMaybe<Scalars['String']['input']>;
  objectiveSubTasks?: InputMaybe<ObjectiveSubTask_Arr_Rel_Insert_Input>;
  objectives?: InputMaybe<Objective_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type ObjectiveStatus_Max_Fields = {
  __typename?: 'objectiveStatus_max_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  objectiveStatus?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type ObjectiveStatus_Min_Fields = {
  __typename?: 'objectiveStatus_min_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  objectiveStatus?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "rolodex_objectivestatus" */
export type ObjectiveStatus_Mutation_Response = {
  __typename?: 'objectiveStatus_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ObjectiveStatus>;
};

/** input type for inserting object relation for remote table "rolodex_objectivestatus" */
export type ObjectiveStatus_Obj_Rel_Insert_Input = {
  data: ObjectiveStatus_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ObjectiveStatus_On_Conflict>;
};

/** on_conflict condition type for table "rolodex_objectivestatus" */
export type ObjectiveStatus_On_Conflict = {
  constraint: ObjectiveStatus_Constraint;
  update_columns?: Array<ObjectiveStatus_Update_Column>;
  where?: InputMaybe<ObjectiveStatus_Bool_Exp>;
};

/** Ordering options when selecting data from "rolodex_objectivestatus". */
export type ObjectiveStatus_Order_By = {
  id?: InputMaybe<Order_By>;
  objectiveStatus?: InputMaybe<Order_By>;
  objectiveSubTasks_aggregate?: InputMaybe<ObjectiveSubTask_Aggregate_Order_By>;
  objectives_aggregate?: InputMaybe<Objective_Aggregate_Order_By>;
};

/** primary key columns input for table: rolodex_objectivestatus */
export type ObjectiveStatus_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "rolodex_objectivestatus" */
export enum ObjectiveStatus_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ObjectiveStatus = 'objectiveStatus'
}

/** input type for updating data in table "rolodex_objectivestatus" */
export type ObjectiveStatus_Set_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  objectiveStatus?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type ObjectiveStatus_Stddev_Fields = {
  __typename?: 'objectiveStatus_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type ObjectiveStatus_Stddev_Pop_Fields = {
  __typename?: 'objectiveStatus_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type ObjectiveStatus_Stddev_Samp_Fields = {
  __typename?: 'objectiveStatus_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "objectiveStatus" */
export type ObjectiveStatus_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ObjectiveStatus_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ObjectiveStatus_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  objectiveStatus?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type ObjectiveStatus_Sum_Fields = {
  __typename?: 'objectiveStatus_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
};

/** update columns of table "rolodex_objectivestatus" */
export enum ObjectiveStatus_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ObjectiveStatus = 'objectiveStatus'
}

export type ObjectiveStatus_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ObjectiveStatus_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ObjectiveStatus_Set_Input>;
  /** filter the rows which have to be updated */
  where: ObjectiveStatus_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ObjectiveStatus_Var_Pop_Fields = {
  __typename?: 'objectiveStatus_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type ObjectiveStatus_Var_Samp_Fields = {
  __typename?: 'objectiveStatus_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type ObjectiveStatus_Variance_Fields = {
  __typename?: 'objectiveStatus_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "rolodex_projectsubtask" */
export type ObjectiveSubTask = {
  __typename?: 'objectiveSubTask';
  complete: Scalars['Boolean']['output'];
  deadline?: Maybe<Scalars['date']['output']>;
  id: Scalars['bigint']['output'];
  markedComplete?: Maybe<Scalars['date']['output']>;
  /** An object relationship */
  objective: Objective;
  /** An object relationship */
  objectiveStatus: ObjectiveStatus;
  parentId: Scalars['bigint']['output'];
  statusId: Scalars['bigint']['output'];
  task: Scalars['String']['output'];
};

/** aggregated selection of "rolodex_projectsubtask" */
export type ObjectiveSubTask_Aggregate = {
  __typename?: 'objectiveSubTask_aggregate';
  aggregate?: Maybe<ObjectiveSubTask_Aggregate_Fields>;
  nodes: Array<ObjectiveSubTask>;
};

export type ObjectiveSubTask_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<ObjectiveSubTask_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<ObjectiveSubTask_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<ObjectiveSubTask_Aggregate_Bool_Exp_Count>;
};

export type ObjectiveSubTask_Aggregate_Bool_Exp_Bool_And = {
  arguments: ObjectiveSubTask_Select_Column_ObjectiveSubTask_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ObjectiveSubTask_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type ObjectiveSubTask_Aggregate_Bool_Exp_Bool_Or = {
  arguments: ObjectiveSubTask_Select_Column_ObjectiveSubTask_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ObjectiveSubTask_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type ObjectiveSubTask_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ObjectiveSubTask_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ObjectiveSubTask_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "rolodex_projectsubtask" */
export type ObjectiveSubTask_Aggregate_Fields = {
  __typename?: 'objectiveSubTask_aggregate_fields';
  avg?: Maybe<ObjectiveSubTask_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ObjectiveSubTask_Max_Fields>;
  min?: Maybe<ObjectiveSubTask_Min_Fields>;
  stddev?: Maybe<ObjectiveSubTask_Stddev_Fields>;
  stddev_pop?: Maybe<ObjectiveSubTask_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ObjectiveSubTask_Stddev_Samp_Fields>;
  sum?: Maybe<ObjectiveSubTask_Sum_Fields>;
  var_pop?: Maybe<ObjectiveSubTask_Var_Pop_Fields>;
  var_samp?: Maybe<ObjectiveSubTask_Var_Samp_Fields>;
  variance?: Maybe<ObjectiveSubTask_Variance_Fields>;
};


/** aggregate fields of "rolodex_projectsubtask" */
export type ObjectiveSubTask_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ObjectiveSubTask_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "rolodex_projectsubtask" */
export type ObjectiveSubTask_Aggregate_Order_By = {
  avg?: InputMaybe<ObjectiveSubTask_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ObjectiveSubTask_Max_Order_By>;
  min?: InputMaybe<ObjectiveSubTask_Min_Order_By>;
  stddev?: InputMaybe<ObjectiveSubTask_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ObjectiveSubTask_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ObjectiveSubTask_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ObjectiveSubTask_Sum_Order_By>;
  var_pop?: InputMaybe<ObjectiveSubTask_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ObjectiveSubTask_Var_Samp_Order_By>;
  variance?: InputMaybe<ObjectiveSubTask_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "rolodex_projectsubtask" */
export type ObjectiveSubTask_Arr_Rel_Insert_Input = {
  data: Array<ObjectiveSubTask_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ObjectiveSubTask_On_Conflict>;
};

/** aggregate avg on columns */
export type ObjectiveSubTask_Avg_Fields = {
  __typename?: 'objectiveSubTask_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  statusId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "rolodex_projectsubtask" */
export type ObjectiveSubTask_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  parentId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "rolodex_projectsubtask". All fields are combined with a logical 'AND'. */
export type ObjectiveSubTask_Bool_Exp = {
  _and?: InputMaybe<Array<ObjectiveSubTask_Bool_Exp>>;
  _not?: InputMaybe<ObjectiveSubTask_Bool_Exp>;
  _or?: InputMaybe<Array<ObjectiveSubTask_Bool_Exp>>;
  complete?: InputMaybe<Boolean_Comparison_Exp>;
  deadline?: InputMaybe<Date_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  markedComplete?: InputMaybe<Date_Comparison_Exp>;
  objective?: InputMaybe<Objective_Bool_Exp>;
  objectiveStatus?: InputMaybe<ObjectiveStatus_Bool_Exp>;
  parentId?: InputMaybe<Bigint_Comparison_Exp>;
  statusId?: InputMaybe<Bigint_Comparison_Exp>;
  task?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "rolodex_projectsubtask" */
export enum ObjectiveSubTask_Constraint {
  /** unique or primary key constraint on columns "id" */
  RolodexProjectsubtaskPkey = 'rolodex_projectsubtask_pkey'
}

/** input type for incrementing numeric columns in table "rolodex_projectsubtask" */
export type ObjectiveSubTask_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  statusId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "rolodex_projectsubtask" */
export type ObjectiveSubTask_Insert_Input = {
  complete?: InputMaybe<Scalars['Boolean']['input']>;
  deadline?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  markedComplete?: InputMaybe<Scalars['date']['input']>;
  objective?: InputMaybe<Objective_Obj_Rel_Insert_Input>;
  objectiveStatus?: InputMaybe<ObjectiveStatus_Obj_Rel_Insert_Input>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  statusId?: InputMaybe<Scalars['bigint']['input']>;
  task?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type ObjectiveSubTask_Max_Fields = {
  __typename?: 'objectiveSubTask_max_fields';
  deadline?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  markedComplete?: Maybe<Scalars['date']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  statusId?: Maybe<Scalars['bigint']['output']>;
  task?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "rolodex_projectsubtask" */
export type ObjectiveSubTask_Max_Order_By = {
  deadline?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  markedComplete?: InputMaybe<Order_By>;
  parentId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
  task?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ObjectiveSubTask_Min_Fields = {
  __typename?: 'objectiveSubTask_min_fields';
  deadline?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  markedComplete?: Maybe<Scalars['date']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  statusId?: Maybe<Scalars['bigint']['output']>;
  task?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "rolodex_projectsubtask" */
export type ObjectiveSubTask_Min_Order_By = {
  deadline?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  markedComplete?: InputMaybe<Order_By>;
  parentId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
  task?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "rolodex_projectsubtask" */
export type ObjectiveSubTask_Mutation_Response = {
  __typename?: 'objectiveSubTask_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ObjectiveSubTask>;
};

/** on_conflict condition type for table "rolodex_projectsubtask" */
export type ObjectiveSubTask_On_Conflict = {
  constraint: ObjectiveSubTask_Constraint;
  update_columns?: Array<ObjectiveSubTask_Update_Column>;
  where?: InputMaybe<ObjectiveSubTask_Bool_Exp>;
};

/** Ordering options when selecting data from "rolodex_projectsubtask". */
export type ObjectiveSubTask_Order_By = {
  complete?: InputMaybe<Order_By>;
  deadline?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  markedComplete?: InputMaybe<Order_By>;
  objective?: InputMaybe<Objective_Order_By>;
  objectiveStatus?: InputMaybe<ObjectiveStatus_Order_By>;
  parentId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
  task?: InputMaybe<Order_By>;
};

/** primary key columns input for table: rolodex_projectsubtask */
export type ObjectiveSubTask_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "rolodex_projectsubtask" */
export enum ObjectiveSubTask_Select_Column {
  /** column name */
  Complete = 'complete',
  /** column name */
  Deadline = 'deadline',
  /** column name */
  Id = 'id',
  /** column name */
  MarkedComplete = 'markedComplete',
  /** column name */
  ParentId = 'parentId',
  /** column name */
  StatusId = 'statusId',
  /** column name */
  Task = 'task'
}

/** select "objectiveSubTask_aggregate_bool_exp_bool_and_arguments_columns" columns of table "rolodex_projectsubtask" */
export enum ObjectiveSubTask_Select_Column_ObjectiveSubTask_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Complete = 'complete'
}

/** select "objectiveSubTask_aggregate_bool_exp_bool_or_arguments_columns" columns of table "rolodex_projectsubtask" */
export enum ObjectiveSubTask_Select_Column_ObjectiveSubTask_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Complete = 'complete'
}

/** input type for updating data in table "rolodex_projectsubtask" */
export type ObjectiveSubTask_Set_Input = {
  complete?: InputMaybe<Scalars['Boolean']['input']>;
  deadline?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  markedComplete?: InputMaybe<Scalars['date']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  statusId?: InputMaybe<Scalars['bigint']['input']>;
  task?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type ObjectiveSubTask_Stddev_Fields = {
  __typename?: 'objectiveSubTask_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  statusId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "rolodex_projectsubtask" */
export type ObjectiveSubTask_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  parentId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ObjectiveSubTask_Stddev_Pop_Fields = {
  __typename?: 'objectiveSubTask_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  statusId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "rolodex_projectsubtask" */
export type ObjectiveSubTask_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  parentId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ObjectiveSubTask_Stddev_Samp_Fields = {
  __typename?: 'objectiveSubTask_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  statusId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "rolodex_projectsubtask" */
export type ObjectiveSubTask_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  parentId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "objectiveSubTask" */
export type ObjectiveSubTask_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ObjectiveSubTask_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ObjectiveSubTask_Stream_Cursor_Value_Input = {
  complete?: InputMaybe<Scalars['Boolean']['input']>;
  deadline?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  markedComplete?: InputMaybe<Scalars['date']['input']>;
  parentId?: InputMaybe<Scalars['bigint']['input']>;
  statusId?: InputMaybe<Scalars['bigint']['input']>;
  task?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type ObjectiveSubTask_Sum_Fields = {
  __typename?: 'objectiveSubTask_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  parentId?: Maybe<Scalars['bigint']['output']>;
  statusId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "rolodex_projectsubtask" */
export type ObjectiveSubTask_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  parentId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** update columns of table "rolodex_projectsubtask" */
export enum ObjectiveSubTask_Update_Column {
  /** column name */
  Complete = 'complete',
  /** column name */
  Deadline = 'deadline',
  /** column name */
  Id = 'id',
  /** column name */
  MarkedComplete = 'markedComplete',
  /** column name */
  ParentId = 'parentId',
  /** column name */
  StatusId = 'statusId',
  /** column name */
  Task = 'task'
}

export type ObjectiveSubTask_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ObjectiveSubTask_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ObjectiveSubTask_Set_Input>;
  /** filter the rows which have to be updated */
  where: ObjectiveSubTask_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ObjectiveSubTask_Var_Pop_Fields = {
  __typename?: 'objectiveSubTask_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  statusId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "rolodex_projectsubtask" */
export type ObjectiveSubTask_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  parentId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ObjectiveSubTask_Var_Samp_Fields = {
  __typename?: 'objectiveSubTask_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  statusId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "rolodex_projectsubtask" */
export type ObjectiveSubTask_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  parentId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ObjectiveSubTask_Variance_Fields = {
  __typename?: 'objectiveSubTask_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  parentId?: Maybe<Scalars['Float']['output']>;
  statusId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "rolodex_projectsubtask" */
export type ObjectiveSubTask_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  parentId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** aggregated selection of "rolodex_projectobjective" */
export type Objective_Aggregate = {
  __typename?: 'objective_aggregate';
  aggregate?: Maybe<Objective_Aggregate_Fields>;
  nodes: Array<Objective>;
};

export type Objective_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Objective_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Objective_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Objective_Aggregate_Bool_Exp_Count>;
};

export type Objective_Aggregate_Bool_Exp_Bool_And = {
  arguments: Objective_Select_Column_Objective_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Objective_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Objective_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Objective_Select_Column_Objective_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Objective_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Objective_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Objective_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Objective_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "rolodex_projectobjective" */
export type Objective_Aggregate_Fields = {
  __typename?: 'objective_aggregate_fields';
  avg?: Maybe<Objective_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Objective_Max_Fields>;
  min?: Maybe<Objective_Min_Fields>;
  stddev?: Maybe<Objective_Stddev_Fields>;
  stddev_pop?: Maybe<Objective_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Objective_Stddev_Samp_Fields>;
  sum?: Maybe<Objective_Sum_Fields>;
  var_pop?: Maybe<Objective_Var_Pop_Fields>;
  var_samp?: Maybe<Objective_Var_Samp_Fields>;
  variance?: Maybe<Objective_Variance_Fields>;
};


/** aggregate fields of "rolodex_projectobjective" */
export type Objective_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Objective_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "rolodex_projectobjective" */
export type Objective_Aggregate_Order_By = {
  avg?: InputMaybe<Objective_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Objective_Max_Order_By>;
  min?: InputMaybe<Objective_Min_Order_By>;
  stddev?: InputMaybe<Objective_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Objective_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Objective_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Objective_Sum_Order_By>;
  var_pop?: InputMaybe<Objective_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Objective_Var_Samp_Order_By>;
  variance?: InputMaybe<Objective_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "rolodex_projectobjective" */
export type Objective_Arr_Rel_Insert_Input = {
  data: Array<Objective_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Objective_On_Conflict>;
};

/** aggregate avg on columns */
export type Objective_Avg_Fields = {
  __typename?: 'objective_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  priorityId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  statusId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "rolodex_projectobjective" */
export type Objective_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  priorityId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "rolodex_projectobjective". All fields are combined with a logical 'AND'. */
export type Objective_Bool_Exp = {
  _and?: InputMaybe<Array<Objective_Bool_Exp>>;
  _not?: InputMaybe<Objective_Bool_Exp>;
  _or?: InputMaybe<Array<Objective_Bool_Exp>>;
  complete?: InputMaybe<Boolean_Comparison_Exp>;
  deadline?: InputMaybe<Date_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  markedComplete?: InputMaybe<Date_Comparison_Exp>;
  objective?: InputMaybe<String_Comparison_Exp>;
  objectivePriority?: InputMaybe<ObjectivePriority_Bool_Exp>;
  objectiveStatus?: InputMaybe<ObjectiveStatus_Bool_Exp>;
  objectiveSubTasks?: InputMaybe<ObjectiveSubTask_Bool_Exp>;
  objectiveSubTasks_aggregate?: InputMaybe<ObjectiveSubTask_Aggregate_Bool_Exp>;
  position?: InputMaybe<Int_Comparison_Exp>;
  priorityId?: InputMaybe<Bigint_Comparison_Exp>;
  project?: InputMaybe<Project_Bool_Exp>;
  projectId?: InputMaybe<Bigint_Comparison_Exp>;
  result?: InputMaybe<String_Comparison_Exp>;
  statusId?: InputMaybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "rolodex_projectobjective" */
export enum Objective_Constraint {
  /** unique or primary key constraint on columns "id" */
  RolodexProjectobjectivePkey = 'rolodex_projectobjective_pkey'
}

/** input type for incrementing numeric columns in table "rolodex_projectobjective" */
export type Objective_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  position?: InputMaybe<Scalars['Int']['input']>;
  priorityId?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  statusId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "rolodex_projectobjective" */
export type Objective_Insert_Input = {
  complete?: InputMaybe<Scalars['Boolean']['input']>;
  deadline?: InputMaybe<Scalars['date']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  markedComplete?: InputMaybe<Scalars['date']['input']>;
  objective?: InputMaybe<Scalars['String']['input']>;
  objectivePriority?: InputMaybe<ObjectivePriority_Obj_Rel_Insert_Input>;
  objectiveStatus?: InputMaybe<ObjectiveStatus_Obj_Rel_Insert_Input>;
  objectiveSubTasks?: InputMaybe<ObjectiveSubTask_Arr_Rel_Insert_Input>;
  position?: InputMaybe<Scalars['Int']['input']>;
  priorityId?: InputMaybe<Scalars['bigint']['input']>;
  project?: InputMaybe<Project_Obj_Rel_Insert_Input>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  result?: InputMaybe<Scalars['String']['input']>;
  statusId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate max on columns */
export type Objective_Max_Fields = {
  __typename?: 'objective_max_fields';
  deadline?: Maybe<Scalars['date']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  markedComplete?: Maybe<Scalars['date']['output']>;
  objective?: Maybe<Scalars['String']['output']>;
  position?: Maybe<Scalars['Int']['output']>;
  priorityId?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  result?: Maybe<Scalars['String']['output']>;
  statusId?: Maybe<Scalars['bigint']['output']>;
};

/** order by max() on columns of table "rolodex_projectobjective" */
export type Objective_Max_Order_By = {
  deadline?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  markedComplete?: InputMaybe<Order_By>;
  objective?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  priorityId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  result?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Objective_Min_Fields = {
  __typename?: 'objective_min_fields';
  deadline?: Maybe<Scalars['date']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  markedComplete?: Maybe<Scalars['date']['output']>;
  objective?: Maybe<Scalars['String']['output']>;
  position?: Maybe<Scalars['Int']['output']>;
  priorityId?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  result?: Maybe<Scalars['String']['output']>;
  statusId?: Maybe<Scalars['bigint']['output']>;
};

/** order by min() on columns of table "rolodex_projectobjective" */
export type Objective_Min_Order_By = {
  deadline?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  markedComplete?: InputMaybe<Order_By>;
  objective?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  priorityId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  result?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "rolodex_projectobjective" */
export type Objective_Mutation_Response = {
  __typename?: 'objective_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Objective>;
};

/** input type for inserting object relation for remote table "rolodex_projectobjective" */
export type Objective_Obj_Rel_Insert_Input = {
  data: Objective_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Objective_On_Conflict>;
};

/** on_conflict condition type for table "rolodex_projectobjective" */
export type Objective_On_Conflict = {
  constraint: Objective_Constraint;
  update_columns?: Array<Objective_Update_Column>;
  where?: InputMaybe<Objective_Bool_Exp>;
};

/** Ordering options when selecting data from "rolodex_projectobjective". */
export type Objective_Order_By = {
  complete?: InputMaybe<Order_By>;
  deadline?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  markedComplete?: InputMaybe<Order_By>;
  objective?: InputMaybe<Order_By>;
  objectivePriority?: InputMaybe<ObjectivePriority_Order_By>;
  objectiveStatus?: InputMaybe<ObjectiveStatus_Order_By>;
  objectiveSubTasks_aggregate?: InputMaybe<ObjectiveSubTask_Aggregate_Order_By>;
  position?: InputMaybe<Order_By>;
  priorityId?: InputMaybe<Order_By>;
  project?: InputMaybe<Project_Order_By>;
  projectId?: InputMaybe<Order_By>;
  result?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: rolodex_projectobjective */
export type Objective_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "rolodex_projectobjective" */
export enum Objective_Select_Column {
  /** column name */
  Complete = 'complete',
  /** column name */
  Deadline = 'deadline',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  MarkedComplete = 'markedComplete',
  /** column name */
  Objective = 'objective',
  /** column name */
  Position = 'position',
  /** column name */
  PriorityId = 'priorityId',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  Result = 'result',
  /** column name */
  StatusId = 'statusId'
}

/** select "objective_aggregate_bool_exp_bool_and_arguments_columns" columns of table "rolodex_projectobjective" */
export enum Objective_Select_Column_Objective_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Complete = 'complete'
}

/** select "objective_aggregate_bool_exp_bool_or_arguments_columns" columns of table "rolodex_projectobjective" */
export enum Objective_Select_Column_Objective_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Complete = 'complete'
}

/** input type for updating data in table "rolodex_projectobjective" */
export type Objective_Set_Input = {
  complete?: InputMaybe<Scalars['Boolean']['input']>;
  deadline?: InputMaybe<Scalars['date']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  markedComplete?: InputMaybe<Scalars['date']['input']>;
  objective?: InputMaybe<Scalars['String']['input']>;
  position?: InputMaybe<Scalars['Int']['input']>;
  priorityId?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  result?: InputMaybe<Scalars['String']['input']>;
  statusId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate stddev on columns */
export type Objective_Stddev_Fields = {
  __typename?: 'objective_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  priorityId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  statusId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "rolodex_projectobjective" */
export type Objective_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  priorityId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Objective_Stddev_Pop_Fields = {
  __typename?: 'objective_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  priorityId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  statusId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "rolodex_projectobjective" */
export type Objective_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  priorityId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Objective_Stddev_Samp_Fields = {
  __typename?: 'objective_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  priorityId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  statusId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "rolodex_projectobjective" */
export type Objective_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  priorityId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "objective" */
export type Objective_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Objective_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Objective_Stream_Cursor_Value_Input = {
  complete?: InputMaybe<Scalars['Boolean']['input']>;
  deadline?: InputMaybe<Scalars['date']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  markedComplete?: InputMaybe<Scalars['date']['input']>;
  objective?: InputMaybe<Scalars['String']['input']>;
  position?: InputMaybe<Scalars['Int']['input']>;
  priorityId?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  result?: InputMaybe<Scalars['String']['input']>;
  statusId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type Objective_Sum_Fields = {
  __typename?: 'objective_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  position?: Maybe<Scalars['Int']['output']>;
  priorityId?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  statusId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "rolodex_projectobjective" */
export type Objective_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  priorityId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** update columns of table "rolodex_projectobjective" */
export enum Objective_Update_Column {
  /** column name */
  Complete = 'complete',
  /** column name */
  Deadline = 'deadline',
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  MarkedComplete = 'markedComplete',
  /** column name */
  Objective = 'objective',
  /** column name */
  Position = 'position',
  /** column name */
  PriorityId = 'priorityId',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  Result = 'result',
  /** column name */
  StatusId = 'statusId'
}

export type Objective_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Objective_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Objective_Set_Input>;
  /** filter the rows which have to be updated */
  where: Objective_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Objective_Var_Pop_Fields = {
  __typename?: 'objective_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  priorityId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  statusId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "rolodex_projectobjective" */
export type Objective_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  priorityId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Objective_Var_Samp_Fields = {
  __typename?: 'objective_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  priorityId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  statusId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "rolodex_projectobjective" */
export type Objective_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  priorityId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Objective_Variance_Fields = {
  __typename?: 'objective_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  priorityId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  statusId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "rolodex_projectobjective" */
export type Objective_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  priorityId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  statusId?: InputMaybe<Order_By>;
};

/** columns and relationships of "oplog_oplog" */
export type Oplog = {
  __typename?: 'oplog';
  /** An array relationship */
  entries: Array<OplogEntry>;
  /** An aggregate relationship */
  entries_aggregate: OplogEntry_Aggregate;
  id: Scalars['bigint']['output'];
  mute_notifications: Scalars['Boolean']['output'];
  name: Scalars['String']['output'];
  /** An object relationship */
  project?: Maybe<Project>;
  projectId?: Maybe<Scalars['bigint']['output']>;
};


/** columns and relationships of "oplog_oplog" */
export type OplogEntriesArgs = {
  distinct_on?: InputMaybe<Array<OplogEntry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OplogEntry_Order_By>>;
  where?: InputMaybe<OplogEntry_Bool_Exp>;
};


/** columns and relationships of "oplog_oplog" */
export type OplogEntries_AggregateArgs = {
  distinct_on?: InputMaybe<Array<OplogEntry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OplogEntry_Order_By>>;
  where?: InputMaybe<OplogEntry_Bool_Exp>;
};

/** columns and relationships of "oplog_oplogentry" */
export type OplogEntry = {
  __typename?: 'oplogEntry';
  command: Scalars['String']['output'];
  comments: Scalars['String']['output'];
  description: Scalars['String']['output'];
  destIp?: Maybe<Scalars['String']['output']>;
  endDate?: Maybe<Scalars['timestamptz']['output']>;
  entryIdentifier: Scalars['String']['output'];
  extraFields: Scalars['jsonb']['output'];
  id: Scalars['bigint']['output'];
  /** An object relationship */
  log?: Maybe<Oplog>;
  operatorName?: Maybe<Scalars['String']['output']>;
  oplog?: Maybe<Scalars['bigint']['output']>;
  output: Scalars['String']['output'];
  sourceIp?: Maybe<Scalars['String']['output']>;
  startDate?: Maybe<Scalars['timestamptz']['output']>;
  tool?: Maybe<Scalars['String']['output']>;
  userContext?: Maybe<Scalars['String']['output']>;
};


/** columns and relationships of "oplog_oplogentry" */
export type OplogEntryExtraFieldsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "oplog_oplogentry" */
export type OplogEntry_Aggregate = {
  __typename?: 'oplogEntry_aggregate';
  aggregate?: Maybe<OplogEntry_Aggregate_Fields>;
  nodes: Array<OplogEntry>;
};

export type OplogEntry_Aggregate_Bool_Exp = {
  count?: InputMaybe<OplogEntry_Aggregate_Bool_Exp_Count>;
};

export type OplogEntry_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<OplogEntry_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<OplogEntry_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "oplog_oplogentry" */
export type OplogEntry_Aggregate_Fields = {
  __typename?: 'oplogEntry_aggregate_fields';
  avg?: Maybe<OplogEntry_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<OplogEntry_Max_Fields>;
  min?: Maybe<OplogEntry_Min_Fields>;
  stddev?: Maybe<OplogEntry_Stddev_Fields>;
  stddev_pop?: Maybe<OplogEntry_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<OplogEntry_Stddev_Samp_Fields>;
  sum?: Maybe<OplogEntry_Sum_Fields>;
  var_pop?: Maybe<OplogEntry_Var_Pop_Fields>;
  var_samp?: Maybe<OplogEntry_Var_Samp_Fields>;
  variance?: Maybe<OplogEntry_Variance_Fields>;
};


/** aggregate fields of "oplog_oplogentry" */
export type OplogEntry_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<OplogEntry_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "oplog_oplogentry" */
export type OplogEntry_Aggregate_Order_By = {
  avg?: InputMaybe<OplogEntry_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<OplogEntry_Max_Order_By>;
  min?: InputMaybe<OplogEntry_Min_Order_By>;
  stddev?: InputMaybe<OplogEntry_Stddev_Order_By>;
  stddev_pop?: InputMaybe<OplogEntry_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<OplogEntry_Stddev_Samp_Order_By>;
  sum?: InputMaybe<OplogEntry_Sum_Order_By>;
  var_pop?: InputMaybe<OplogEntry_Var_Pop_Order_By>;
  var_samp?: InputMaybe<OplogEntry_Var_Samp_Order_By>;
  variance?: InputMaybe<OplogEntry_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type OplogEntry_Append_Input = {
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "oplog_oplogentry" */
export type OplogEntry_Arr_Rel_Insert_Input = {
  data: Array<OplogEntry_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<OplogEntry_On_Conflict>;
};

/** aggregate avg on columns */
export type OplogEntry_Avg_Fields = {
  __typename?: 'oplogEntry_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  oplog?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "oplog_oplogentry" */
export type OplogEntry_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  oplog?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "oplog_oplogentry". All fields are combined with a logical 'AND'. */
export type OplogEntry_Bool_Exp = {
  _and?: InputMaybe<Array<OplogEntry_Bool_Exp>>;
  _not?: InputMaybe<OplogEntry_Bool_Exp>;
  _or?: InputMaybe<Array<OplogEntry_Bool_Exp>>;
  command?: InputMaybe<String_Comparison_Exp>;
  comments?: InputMaybe<String_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  destIp?: InputMaybe<String_Comparison_Exp>;
  endDate?: InputMaybe<Timestamptz_Comparison_Exp>;
  entryIdentifier?: InputMaybe<String_Comparison_Exp>;
  extraFields?: InputMaybe<Jsonb_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  log?: InputMaybe<Oplog_Bool_Exp>;
  operatorName?: InputMaybe<String_Comparison_Exp>;
  oplog?: InputMaybe<Bigint_Comparison_Exp>;
  output?: InputMaybe<String_Comparison_Exp>;
  sourceIp?: InputMaybe<String_Comparison_Exp>;
  startDate?: InputMaybe<Timestamptz_Comparison_Exp>;
  tool?: InputMaybe<String_Comparison_Exp>;
  userContext?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "oplog_oplogentry" */
export enum OplogEntry_Constraint {
  /** unique or primary key constraint on columns "id" */
  OplogOplogentryPkey = 'oplog_oplogentry_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type OplogEntry_Delete_At_Path_Input = {
  extraFields?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type OplogEntry_Delete_Elem_Input = {
  extraFields?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type OplogEntry_Delete_Key_Input = {
  extraFields?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "oplog_oplogentry" */
export type OplogEntry_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  oplog?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "oplog_oplogentry" */
export type OplogEntry_Insert_Input = {
  command?: InputMaybe<Scalars['String']['input']>;
  comments?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  destIp?: InputMaybe<Scalars['String']['input']>;
  endDate?: InputMaybe<Scalars['timestamptz']['input']>;
  entryIdentifier?: InputMaybe<Scalars['String']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  log?: InputMaybe<Oplog_Obj_Rel_Insert_Input>;
  operatorName?: InputMaybe<Scalars['String']['input']>;
  oplog?: InputMaybe<Scalars['bigint']['input']>;
  output?: InputMaybe<Scalars['String']['input']>;
  sourceIp?: InputMaybe<Scalars['String']['input']>;
  startDate?: InputMaybe<Scalars['timestamptz']['input']>;
  tool?: InputMaybe<Scalars['String']['input']>;
  userContext?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type OplogEntry_Max_Fields = {
  __typename?: 'oplogEntry_max_fields';
  command?: Maybe<Scalars['String']['output']>;
  comments?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  destIp?: Maybe<Scalars['String']['output']>;
  endDate?: Maybe<Scalars['timestamptz']['output']>;
  entryIdentifier?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  operatorName?: Maybe<Scalars['String']['output']>;
  oplog?: Maybe<Scalars['bigint']['output']>;
  output?: Maybe<Scalars['String']['output']>;
  sourceIp?: Maybe<Scalars['String']['output']>;
  startDate?: Maybe<Scalars['timestamptz']['output']>;
  tool?: Maybe<Scalars['String']['output']>;
  userContext?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "oplog_oplogentry" */
export type OplogEntry_Max_Order_By = {
  command?: InputMaybe<Order_By>;
  comments?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  destIp?: InputMaybe<Order_By>;
  endDate?: InputMaybe<Order_By>;
  entryIdentifier?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorName?: InputMaybe<Order_By>;
  oplog?: InputMaybe<Order_By>;
  output?: InputMaybe<Order_By>;
  sourceIp?: InputMaybe<Order_By>;
  startDate?: InputMaybe<Order_By>;
  tool?: InputMaybe<Order_By>;
  userContext?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type OplogEntry_Min_Fields = {
  __typename?: 'oplogEntry_min_fields';
  command?: Maybe<Scalars['String']['output']>;
  comments?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  destIp?: Maybe<Scalars['String']['output']>;
  endDate?: Maybe<Scalars['timestamptz']['output']>;
  entryIdentifier?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  operatorName?: Maybe<Scalars['String']['output']>;
  oplog?: Maybe<Scalars['bigint']['output']>;
  output?: Maybe<Scalars['String']['output']>;
  sourceIp?: Maybe<Scalars['String']['output']>;
  startDate?: Maybe<Scalars['timestamptz']['output']>;
  tool?: Maybe<Scalars['String']['output']>;
  userContext?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "oplog_oplogentry" */
export type OplogEntry_Min_Order_By = {
  command?: InputMaybe<Order_By>;
  comments?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  destIp?: InputMaybe<Order_By>;
  endDate?: InputMaybe<Order_By>;
  entryIdentifier?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorName?: InputMaybe<Order_By>;
  oplog?: InputMaybe<Order_By>;
  output?: InputMaybe<Order_By>;
  sourceIp?: InputMaybe<Order_By>;
  startDate?: InputMaybe<Order_By>;
  tool?: InputMaybe<Order_By>;
  userContext?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "oplog_oplogentry" */
export type OplogEntry_Mutation_Response = {
  __typename?: 'oplogEntry_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<OplogEntry>;
};

/** on_conflict condition type for table "oplog_oplogentry" */
export type OplogEntry_On_Conflict = {
  constraint: OplogEntry_Constraint;
  update_columns?: Array<OplogEntry_Update_Column>;
  where?: InputMaybe<OplogEntry_Bool_Exp>;
};

/** Ordering options when selecting data from "oplog_oplogentry". */
export type OplogEntry_Order_By = {
  command?: InputMaybe<Order_By>;
  comments?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  destIp?: InputMaybe<Order_By>;
  endDate?: InputMaybe<Order_By>;
  entryIdentifier?: InputMaybe<Order_By>;
  extraFields?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  log?: InputMaybe<Oplog_Order_By>;
  operatorName?: InputMaybe<Order_By>;
  oplog?: InputMaybe<Order_By>;
  output?: InputMaybe<Order_By>;
  sourceIp?: InputMaybe<Order_By>;
  startDate?: InputMaybe<Order_By>;
  tool?: InputMaybe<Order_By>;
  userContext?: InputMaybe<Order_By>;
};

/** primary key columns input for table: oplog_oplogentry */
export type OplogEntry_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type OplogEntry_Prepend_Input = {
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "oplog_oplogentry" */
export enum OplogEntry_Select_Column {
  /** column name */
  Command = 'command',
  /** column name */
  Comments = 'comments',
  /** column name */
  Description = 'description',
  /** column name */
  DestIp = 'destIp',
  /** column name */
  EndDate = 'endDate',
  /** column name */
  EntryIdentifier = 'entryIdentifier',
  /** column name */
  ExtraFields = 'extraFields',
  /** column name */
  Id = 'id',
  /** column name */
  OperatorName = 'operatorName',
  /** column name */
  Oplog = 'oplog',
  /** column name */
  Output = 'output',
  /** column name */
  SourceIp = 'sourceIp',
  /** column name */
  StartDate = 'startDate',
  /** column name */
  Tool = 'tool',
  /** column name */
  UserContext = 'userContext'
}

/** input type for updating data in table "oplog_oplogentry" */
export type OplogEntry_Set_Input = {
  command?: InputMaybe<Scalars['String']['input']>;
  comments?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  destIp?: InputMaybe<Scalars['String']['input']>;
  endDate?: InputMaybe<Scalars['timestamptz']['input']>;
  entryIdentifier?: InputMaybe<Scalars['String']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  operatorName?: InputMaybe<Scalars['String']['input']>;
  oplog?: InputMaybe<Scalars['bigint']['input']>;
  output?: InputMaybe<Scalars['String']['input']>;
  sourceIp?: InputMaybe<Scalars['String']['input']>;
  startDate?: InputMaybe<Scalars['timestamptz']['input']>;
  tool?: InputMaybe<Scalars['String']['input']>;
  userContext?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type OplogEntry_Stddev_Fields = {
  __typename?: 'oplogEntry_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  oplog?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "oplog_oplogentry" */
export type OplogEntry_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  oplog?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type OplogEntry_Stddev_Pop_Fields = {
  __typename?: 'oplogEntry_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  oplog?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "oplog_oplogentry" */
export type OplogEntry_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  oplog?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type OplogEntry_Stddev_Samp_Fields = {
  __typename?: 'oplogEntry_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  oplog?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "oplog_oplogentry" */
export type OplogEntry_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  oplog?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "oplogEntry" */
export type OplogEntry_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: OplogEntry_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type OplogEntry_Stream_Cursor_Value_Input = {
  command?: InputMaybe<Scalars['String']['input']>;
  comments?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  destIp?: InputMaybe<Scalars['String']['input']>;
  endDate?: InputMaybe<Scalars['timestamptz']['input']>;
  entryIdentifier?: InputMaybe<Scalars['String']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  operatorName?: InputMaybe<Scalars['String']['input']>;
  oplog?: InputMaybe<Scalars['bigint']['input']>;
  output?: InputMaybe<Scalars['String']['input']>;
  sourceIp?: InputMaybe<Scalars['String']['input']>;
  startDate?: InputMaybe<Scalars['timestamptz']['input']>;
  tool?: InputMaybe<Scalars['String']['input']>;
  userContext?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type OplogEntry_Sum_Fields = {
  __typename?: 'oplogEntry_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  oplog?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "oplog_oplogentry" */
export type OplogEntry_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  oplog?: InputMaybe<Order_By>;
};

/** update columns of table "oplog_oplogentry" */
export enum OplogEntry_Update_Column {
  /** column name */
  Command = 'command',
  /** column name */
  Comments = 'comments',
  /** column name */
  Description = 'description',
  /** column name */
  DestIp = 'destIp',
  /** column name */
  EndDate = 'endDate',
  /** column name */
  EntryIdentifier = 'entryIdentifier',
  /** column name */
  ExtraFields = 'extraFields',
  /** column name */
  Id = 'id',
  /** column name */
  OperatorName = 'operatorName',
  /** column name */
  Oplog = 'oplog',
  /** column name */
  Output = 'output',
  /** column name */
  SourceIp = 'sourceIp',
  /** column name */
  StartDate = 'startDate',
  /** column name */
  Tool = 'tool',
  /** column name */
  UserContext = 'userContext'
}

export type OplogEntry_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<OplogEntry_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<OplogEntry_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<OplogEntry_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<OplogEntry_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<OplogEntry_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<OplogEntry_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<OplogEntry_Set_Input>;
  /** filter the rows which have to be updated */
  where: OplogEntry_Bool_Exp;
};

/** aggregate var_pop on columns */
export type OplogEntry_Var_Pop_Fields = {
  __typename?: 'oplogEntry_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  oplog?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "oplog_oplogentry" */
export type OplogEntry_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  oplog?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type OplogEntry_Var_Samp_Fields = {
  __typename?: 'oplogEntry_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  oplog?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "oplog_oplogentry" */
export type OplogEntry_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  oplog?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type OplogEntry_Variance_Fields = {
  __typename?: 'oplogEntry_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  oplog?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "oplog_oplogentry" */
export type OplogEntry_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  oplog?: InputMaybe<Order_By>;
};

/** aggregated selection of "oplog_oplog" */
export type Oplog_Aggregate = {
  __typename?: 'oplog_aggregate';
  aggregate?: Maybe<Oplog_Aggregate_Fields>;
  nodes: Array<Oplog>;
};

export type Oplog_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Oplog_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Oplog_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Oplog_Aggregate_Bool_Exp_Count>;
};

export type Oplog_Aggregate_Bool_Exp_Bool_And = {
  arguments: Oplog_Select_Column_Oplog_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Oplog_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Oplog_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Oplog_Select_Column_Oplog_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Oplog_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Oplog_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Oplog_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Oplog_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "oplog_oplog" */
export type Oplog_Aggregate_Fields = {
  __typename?: 'oplog_aggregate_fields';
  avg?: Maybe<Oplog_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Oplog_Max_Fields>;
  min?: Maybe<Oplog_Min_Fields>;
  stddev?: Maybe<Oplog_Stddev_Fields>;
  stddev_pop?: Maybe<Oplog_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Oplog_Stddev_Samp_Fields>;
  sum?: Maybe<Oplog_Sum_Fields>;
  var_pop?: Maybe<Oplog_Var_Pop_Fields>;
  var_samp?: Maybe<Oplog_Var_Samp_Fields>;
  variance?: Maybe<Oplog_Variance_Fields>;
};


/** aggregate fields of "oplog_oplog" */
export type Oplog_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Oplog_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "oplog_oplog" */
export type Oplog_Aggregate_Order_By = {
  avg?: InputMaybe<Oplog_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Oplog_Max_Order_By>;
  min?: InputMaybe<Oplog_Min_Order_By>;
  stddev?: InputMaybe<Oplog_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Oplog_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Oplog_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Oplog_Sum_Order_By>;
  var_pop?: InputMaybe<Oplog_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Oplog_Var_Samp_Order_By>;
  variance?: InputMaybe<Oplog_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "oplog_oplog" */
export type Oplog_Arr_Rel_Insert_Input = {
  data: Array<Oplog_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Oplog_On_Conflict>;
};

/** aggregate avg on columns */
export type Oplog_Avg_Fields = {
  __typename?: 'oplog_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "oplog_oplog" */
export type Oplog_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "oplog_oplog". All fields are combined with a logical 'AND'. */
export type Oplog_Bool_Exp = {
  _and?: InputMaybe<Array<Oplog_Bool_Exp>>;
  _not?: InputMaybe<Oplog_Bool_Exp>;
  _or?: InputMaybe<Array<Oplog_Bool_Exp>>;
  entries?: InputMaybe<OplogEntry_Bool_Exp>;
  entries_aggregate?: InputMaybe<OplogEntry_Aggregate_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  mute_notifications?: InputMaybe<Boolean_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  project?: InputMaybe<Project_Bool_Exp>;
  projectId?: InputMaybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "oplog_oplog" */
export enum Oplog_Constraint {
  /** unique or primary key constraint on columns "project_id", "name" */
  OplogOplogNameProjectIdCf3103eeUniq = 'oplog_oplog_name_project_id_cf3103ee_uniq',
  /** unique or primary key constraint on columns "id" */
  OplogOplogPkey = 'oplog_oplog_pkey'
}

/** input type for incrementing numeric columns in table "oplog_oplog" */
export type Oplog_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "oplog_oplog" */
export type Oplog_Insert_Input = {
  entries?: InputMaybe<OplogEntry_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  mute_notifications?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  project?: InputMaybe<Project_Obj_Rel_Insert_Input>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate max on columns */
export type Oplog_Max_Fields = {
  __typename?: 'oplog_max_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
};

/** order by max() on columns of table "oplog_oplog" */
export type Oplog_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Oplog_Min_Fields = {
  __typename?: 'oplog_min_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
};

/** order by min() on columns of table "oplog_oplog" */
export type Oplog_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "oplog_oplog" */
export type Oplog_Mutation_Response = {
  __typename?: 'oplog_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Oplog>;
};

/** input type for inserting object relation for remote table "oplog_oplog" */
export type Oplog_Obj_Rel_Insert_Input = {
  data: Oplog_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Oplog_On_Conflict>;
};

/** on_conflict condition type for table "oplog_oplog" */
export type Oplog_On_Conflict = {
  constraint: Oplog_Constraint;
  update_columns?: Array<Oplog_Update_Column>;
  where?: InputMaybe<Oplog_Bool_Exp>;
};

/** Ordering options when selecting data from "oplog_oplog". */
export type Oplog_Order_By = {
  entries_aggregate?: InputMaybe<OplogEntry_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  mute_notifications?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  project?: InputMaybe<Project_Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: oplog_oplog */
export type Oplog_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "oplog_oplog" */
export enum Oplog_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  MuteNotifications = 'mute_notifications',
  /** column name */
  Name = 'name',
  /** column name */
  ProjectId = 'projectId'
}

/** select "oplog_aggregate_bool_exp_bool_and_arguments_columns" columns of table "oplog_oplog" */
export enum Oplog_Select_Column_Oplog_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  MuteNotifications = 'mute_notifications'
}

/** select "oplog_aggregate_bool_exp_bool_or_arguments_columns" columns of table "oplog_oplog" */
export enum Oplog_Select_Column_Oplog_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  MuteNotifications = 'mute_notifications'
}

/** input type for updating data in table "oplog_oplog" */
export type Oplog_Set_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  mute_notifications?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate stddev on columns */
export type Oplog_Stddev_Fields = {
  __typename?: 'oplog_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "oplog_oplog" */
export type Oplog_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Oplog_Stddev_Pop_Fields = {
  __typename?: 'oplog_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "oplog_oplog" */
export type Oplog_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Oplog_Stddev_Samp_Fields = {
  __typename?: 'oplog_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "oplog_oplog" */
export type Oplog_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "oplog" */
export type Oplog_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Oplog_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Oplog_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  mute_notifications?: InputMaybe<Scalars['Boolean']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type Oplog_Sum_Fields = {
  __typename?: 'oplog_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "oplog_oplog" */
export type Oplog_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** update columns of table "oplog_oplog" */
export enum Oplog_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  MuteNotifications = 'mute_notifications',
  /** column name */
  Name = 'name',
  /** column name */
  ProjectId = 'projectId'
}

export type Oplog_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Oplog_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Oplog_Set_Input>;
  /** filter the rows which have to be updated */
  where: Oplog_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Oplog_Var_Pop_Fields = {
  __typename?: 'oplog_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "oplog_oplog" */
export type Oplog_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Oplog_Var_Samp_Fields = {
  __typename?: 'oplog_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "oplog_oplog" */
export type Oplog_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Oplog_Variance_Fields = {
  __typename?: 'oplog_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "oplog_oplog" */
export type Oplog_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** column ordering options */
export enum Order_By {
  /** in ascending order, nulls last */
  Asc = 'asc',
  /** in ascending order, nulls first */
  AscNullsFirst = 'asc_nulls_first',
  /** in ascending order, nulls last */
  AscNullsLast = 'asc_nulls_last',
  /** in descending order, nulls first */
  Desc = 'desc',
  /** in descending order, nulls first */
  DescNullsFirst = 'desc_nulls_first',
  /** in descending order, nulls last */
  DescNullsLast = 'desc_nulls_last'
}

/** columns and relationships of "rolodex_project" */
export type Project = {
  __typename?: 'project';
  /** An array relationship */
  archives: Array<Archive>;
  /** An aggregate relationship */
  archives_aggregate: Archive_Aggregate;
  /** An array relationship */
  assignments: Array<ProjectAssignment>;
  /** An aggregate relationship */
  assignments_aggregate: ProjectAssignment_Aggregate;
  bloodhound_api_key_id: Scalars['String']['output'];
  bloodhound_api_key_token: Scalars['String']['output'];
  bloodhound_api_root_url: Scalars['String']['output'];
  bloodhound_results?: Maybe<Scalars['jsonb']['output']>;
  /** An object relationship */
  client: Client;
  clientId: Scalars['bigint']['output'];
  /** An array relationship */
  cloudServers: Array<CloudServer>;
  /** An aggregate relationship */
  cloudServers_aggregate: CloudServer_Aggregate;
  codename: Scalars['String']['output'];
  collab_note: Scalars['String']['output'];
  /** An array relationship */
  comments: Array<ProjectNote>;
  /** An aggregate relationship */
  comments_aggregate: ProjectNote_Aggregate;
  complete: Scalars['Boolean']['output'];
  /** An array relationship */
  contacts: Array<ProjectContact>;
  /** An aggregate relationship */
  contacts_aggregate: ProjectContact_Aggregate;
  /** An array relationship */
  deconflictions: Array<Deconfliction>;
  /** An aggregate relationship */
  deconflictions_aggregate: Deconfliction_Aggregate;
  description: Scalars['String']['output'];
  /** An array relationship */
  domainServerConnections: Array<DomainServerConnection>;
  /** An aggregate relationship */
  domainServerConnections_aggregate: DomainServerConnection_Aggregate;
  /** An array relationship */
  domains: Array<DomainCheckout>;
  /** An aggregate relationship */
  domains_aggregate: DomainCheckout_Aggregate;
  endDate: Scalars['date']['output'];
  endTime?: Maybe<Scalars['time']['output']>;
  extraFields: Scalars['jsonb']['output'];
  id: Scalars['bigint']['output'];
  /** An array relationship */
  invites: Array<ProjectInvite>;
  /** An aggregate relationship */
  invites_aggregate: ProjectInvite_Aggregate;
  /** An array relationship */
  objectives: Array<Objective>;
  /** An aggregate relationship */
  objectives_aggregate: Objective_Aggregate;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  /** An array relationship */
  oplogs: Array<Oplog>;
  /** An aggregate relationship */
  oplogs_aggregate: Oplog_Aggregate;
  /** An object relationship */
  projectType: ProjectType;
  projectTypeId: Scalars['bigint']['output'];
  /** An array relationship */
  reports: Array<Report>;
  /** An aggregate relationship */
  reports_aggregate: Report_Aggregate;
  /** An array relationship */
  scopes: Array<Scope>;
  /** An aggregate relationship */
  scopes_aggregate: Scope_Aggregate;
  slackChannel: Scalars['String']['output'];
  startDate: Scalars['date']['output'];
  startTime?: Maybe<Scalars['time']['output']>;
  /** An array relationship */
  staticServers: Array<ServerCheckout>;
  /** An aggregate relationship */
  staticServers_aggregate: ServerCheckout_Aggregate;
  /** An array relationship */
  targets: Array<Target>;
  /** An aggregate relationship */
  targets_aggregate: Target_Aggregate;
  timezone: Scalars['String']['output'];
  /** An object relationship */
  user?: Maybe<User>;
  /** An array relationship */
  whitecards: Array<Whitecard>;
  /** An aggregate relationship */
  whitecards_aggregate: Whitecard_Aggregate;
};


/** columns and relationships of "rolodex_project" */
export type ProjectArchivesArgs = {
  distinct_on?: InputMaybe<Array<Archive_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Archive_Order_By>>;
  where?: InputMaybe<Archive_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectArchives_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Archive_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Archive_Order_By>>;
  where?: InputMaybe<Archive_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectAssignmentsArgs = {
  distinct_on?: InputMaybe<Array<ProjectAssignment_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectAssignment_Order_By>>;
  where?: InputMaybe<ProjectAssignment_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectAssignments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ProjectAssignment_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectAssignment_Order_By>>;
  where?: InputMaybe<ProjectAssignment_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectBloodhound_ResultsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectCloudServersArgs = {
  distinct_on?: InputMaybe<Array<CloudServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CloudServer_Order_By>>;
  where?: InputMaybe<CloudServer_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectCloudServers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<CloudServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CloudServer_Order_By>>;
  where?: InputMaybe<CloudServer_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectCommentsArgs = {
  distinct_on?: InputMaybe<Array<ProjectNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectNote_Order_By>>;
  where?: InputMaybe<ProjectNote_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectComments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ProjectNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectNote_Order_By>>;
  where?: InputMaybe<ProjectNote_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectContactsArgs = {
  distinct_on?: InputMaybe<Array<ProjectContact_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectContact_Order_By>>;
  where?: InputMaybe<ProjectContact_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectContacts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ProjectContact_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectContact_Order_By>>;
  where?: InputMaybe<ProjectContact_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectDeconflictionsArgs = {
  distinct_on?: InputMaybe<Array<Deconfliction_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Deconfliction_Order_By>>;
  where?: InputMaybe<Deconfliction_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectDeconflictions_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Deconfliction_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Deconfliction_Order_By>>;
  where?: InputMaybe<Deconfliction_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectDomainServerConnectionsArgs = {
  distinct_on?: InputMaybe<Array<DomainServerConnection_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainServerConnection_Order_By>>;
  where?: InputMaybe<DomainServerConnection_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectDomainServerConnections_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DomainServerConnection_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainServerConnection_Order_By>>;
  where?: InputMaybe<DomainServerConnection_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectDomainsArgs = {
  distinct_on?: InputMaybe<Array<DomainCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainCheckout_Order_By>>;
  where?: InputMaybe<DomainCheckout_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectDomains_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DomainCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainCheckout_Order_By>>;
  where?: InputMaybe<DomainCheckout_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectExtraFieldsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectInvitesArgs = {
  distinct_on?: InputMaybe<Array<ProjectInvite_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectInvite_Order_By>>;
  where?: InputMaybe<ProjectInvite_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectInvites_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ProjectInvite_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectInvite_Order_By>>;
  where?: InputMaybe<ProjectInvite_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectObjectivesArgs = {
  distinct_on?: InputMaybe<Array<Objective_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Objective_Order_By>>;
  where?: InputMaybe<Objective_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectObjectives_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Objective_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Objective_Order_By>>;
  where?: InputMaybe<Objective_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectOplogsArgs = {
  distinct_on?: InputMaybe<Array<Oplog_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Oplog_Order_By>>;
  where?: InputMaybe<Oplog_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectOplogs_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Oplog_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Oplog_Order_By>>;
  where?: InputMaybe<Oplog_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectReportsArgs = {
  distinct_on?: InputMaybe<Array<Report_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Report_Order_By>>;
  where?: InputMaybe<Report_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectReports_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Report_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Report_Order_By>>;
  where?: InputMaybe<Report_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectScopesArgs = {
  distinct_on?: InputMaybe<Array<Scope_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Scope_Order_By>>;
  where?: InputMaybe<Scope_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectScopes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Scope_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Scope_Order_By>>;
  where?: InputMaybe<Scope_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectStaticServersArgs = {
  distinct_on?: InputMaybe<Array<ServerCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerCheckout_Order_By>>;
  where?: InputMaybe<ServerCheckout_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectStaticServers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerCheckout_Order_By>>;
  where?: InputMaybe<ServerCheckout_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectTargetsArgs = {
  distinct_on?: InputMaybe<Array<Target_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Target_Order_By>>;
  where?: InputMaybe<Target_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectTargets_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Target_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Target_Order_By>>;
  where?: InputMaybe<Target_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectWhitecardsArgs = {
  distinct_on?: InputMaybe<Array<Whitecard_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Whitecard_Order_By>>;
  where?: InputMaybe<Whitecard_Bool_Exp>;
};


/** columns and relationships of "rolodex_project" */
export type ProjectWhitecards_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Whitecard_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Whitecard_Order_By>>;
  where?: InputMaybe<Whitecard_Bool_Exp>;
};

/** columns and relationships of "rolodex_projectassignment" */
export type ProjectAssignment = {
  __typename?: 'projectAssignment';
  endDate?: Maybe<Scalars['date']['output']>;
  id: Scalars['bigint']['output'];
  note: Scalars['String']['output'];
  operatorId?: Maybe<Scalars['bigint']['output']>;
  /** An object relationship */
  project: Project;
  projectId: Scalars['bigint']['output'];
  /** An object relationship */
  projectRole?: Maybe<ProjectRole>;
  roleId?: Maybe<Scalars['bigint']['output']>;
  startDate?: Maybe<Scalars['date']['output']>;
  /** An object relationship */
  user?: Maybe<User>;
};

/** aggregated selection of "rolodex_projectassignment" */
export type ProjectAssignment_Aggregate = {
  __typename?: 'projectAssignment_aggregate';
  aggregate?: Maybe<ProjectAssignment_Aggregate_Fields>;
  nodes: Array<ProjectAssignment>;
};

export type ProjectAssignment_Aggregate_Bool_Exp = {
  count?: InputMaybe<ProjectAssignment_Aggregate_Bool_Exp_Count>;
};

export type ProjectAssignment_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ProjectAssignment_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ProjectAssignment_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "rolodex_projectassignment" */
export type ProjectAssignment_Aggregate_Fields = {
  __typename?: 'projectAssignment_aggregate_fields';
  avg?: Maybe<ProjectAssignment_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ProjectAssignment_Max_Fields>;
  min?: Maybe<ProjectAssignment_Min_Fields>;
  stddev?: Maybe<ProjectAssignment_Stddev_Fields>;
  stddev_pop?: Maybe<ProjectAssignment_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ProjectAssignment_Stddev_Samp_Fields>;
  sum?: Maybe<ProjectAssignment_Sum_Fields>;
  var_pop?: Maybe<ProjectAssignment_Var_Pop_Fields>;
  var_samp?: Maybe<ProjectAssignment_Var_Samp_Fields>;
  variance?: Maybe<ProjectAssignment_Variance_Fields>;
};


/** aggregate fields of "rolodex_projectassignment" */
export type ProjectAssignment_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ProjectAssignment_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "rolodex_projectassignment" */
export type ProjectAssignment_Aggregate_Order_By = {
  avg?: InputMaybe<ProjectAssignment_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ProjectAssignment_Max_Order_By>;
  min?: InputMaybe<ProjectAssignment_Min_Order_By>;
  stddev?: InputMaybe<ProjectAssignment_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ProjectAssignment_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ProjectAssignment_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ProjectAssignment_Sum_Order_By>;
  var_pop?: InputMaybe<ProjectAssignment_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ProjectAssignment_Var_Samp_Order_By>;
  variance?: InputMaybe<ProjectAssignment_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "rolodex_projectassignment" */
export type ProjectAssignment_Arr_Rel_Insert_Input = {
  data: Array<ProjectAssignment_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ProjectAssignment_On_Conflict>;
};

/** aggregate avg on columns */
export type ProjectAssignment_Avg_Fields = {
  __typename?: 'projectAssignment_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  roleId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "rolodex_projectassignment" */
export type ProjectAssignment_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  roleId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "rolodex_projectassignment". All fields are combined with a logical 'AND'. */
export type ProjectAssignment_Bool_Exp = {
  _and?: InputMaybe<Array<ProjectAssignment_Bool_Exp>>;
  _not?: InputMaybe<ProjectAssignment_Bool_Exp>;
  _or?: InputMaybe<Array<ProjectAssignment_Bool_Exp>>;
  endDate?: InputMaybe<Date_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  operatorId?: InputMaybe<Bigint_Comparison_Exp>;
  project?: InputMaybe<Project_Bool_Exp>;
  projectId?: InputMaybe<Bigint_Comparison_Exp>;
  projectRole?: InputMaybe<ProjectRole_Bool_Exp>;
  roleId?: InputMaybe<Bigint_Comparison_Exp>;
  startDate?: InputMaybe<Date_Comparison_Exp>;
  user?: InputMaybe<User_Bool_Exp>;
};

/** unique or primary key constraints on table "rolodex_projectassignment" */
export enum ProjectAssignment_Constraint {
  /** unique or primary key constraint on columns "id" */
  RolodexProjectassignmentPkey = 'rolodex_projectassignment_pkey'
}

/** input type for incrementing numeric columns in table "rolodex_projectassignment" */
export type ProjectAssignment_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  roleId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "rolodex_projectassignment" */
export type ProjectAssignment_Insert_Input = {
  endDate?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  project?: InputMaybe<Project_Obj_Rel_Insert_Input>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  projectRole?: InputMaybe<ProjectRole_Obj_Rel_Insert_Input>;
  roleId?: InputMaybe<Scalars['bigint']['input']>;
  startDate?: InputMaybe<Scalars['date']['input']>;
  user?: InputMaybe<User_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type ProjectAssignment_Max_Fields = {
  __typename?: 'projectAssignment_max_fields';
  endDate?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  roleId?: Maybe<Scalars['bigint']['output']>;
  startDate?: Maybe<Scalars['date']['output']>;
};

/** order by max() on columns of table "rolodex_projectassignment" */
export type ProjectAssignment_Max_Order_By = {
  endDate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  roleId?: InputMaybe<Order_By>;
  startDate?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ProjectAssignment_Min_Fields = {
  __typename?: 'projectAssignment_min_fields';
  endDate?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  roleId?: Maybe<Scalars['bigint']['output']>;
  startDate?: Maybe<Scalars['date']['output']>;
};

/** order by min() on columns of table "rolodex_projectassignment" */
export type ProjectAssignment_Min_Order_By = {
  endDate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  roleId?: InputMaybe<Order_By>;
  startDate?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "rolodex_projectassignment" */
export type ProjectAssignment_Mutation_Response = {
  __typename?: 'projectAssignment_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ProjectAssignment>;
};

/** on_conflict condition type for table "rolodex_projectassignment" */
export type ProjectAssignment_On_Conflict = {
  constraint: ProjectAssignment_Constraint;
  update_columns?: Array<ProjectAssignment_Update_Column>;
  where?: InputMaybe<ProjectAssignment_Bool_Exp>;
};

/** Ordering options when selecting data from "rolodex_projectassignment". */
export type ProjectAssignment_Order_By = {
  endDate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  project?: InputMaybe<Project_Order_By>;
  projectId?: InputMaybe<Order_By>;
  projectRole?: InputMaybe<ProjectRole_Order_By>;
  roleId?: InputMaybe<Order_By>;
  startDate?: InputMaybe<Order_By>;
  user?: InputMaybe<User_Order_By>;
};

/** primary key columns input for table: rolodex_projectassignment */
export type ProjectAssignment_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "rolodex_projectassignment" */
export enum ProjectAssignment_Select_Column {
  /** column name */
  EndDate = 'endDate',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  OperatorId = 'operatorId',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  RoleId = 'roleId',
  /** column name */
  StartDate = 'startDate'
}

/** input type for updating data in table "rolodex_projectassignment" */
export type ProjectAssignment_Set_Input = {
  endDate?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  roleId?: InputMaybe<Scalars['bigint']['input']>;
  startDate?: InputMaybe<Scalars['date']['input']>;
};

/** aggregate stddev on columns */
export type ProjectAssignment_Stddev_Fields = {
  __typename?: 'projectAssignment_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  roleId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "rolodex_projectassignment" */
export type ProjectAssignment_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  roleId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ProjectAssignment_Stddev_Pop_Fields = {
  __typename?: 'projectAssignment_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  roleId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "rolodex_projectassignment" */
export type ProjectAssignment_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  roleId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ProjectAssignment_Stddev_Samp_Fields = {
  __typename?: 'projectAssignment_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  roleId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "rolodex_projectassignment" */
export type ProjectAssignment_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  roleId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "projectAssignment" */
export type ProjectAssignment_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ProjectAssignment_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ProjectAssignment_Stream_Cursor_Value_Input = {
  endDate?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  roleId?: InputMaybe<Scalars['bigint']['input']>;
  startDate?: InputMaybe<Scalars['date']['input']>;
};

/** aggregate sum on columns */
export type ProjectAssignment_Sum_Fields = {
  __typename?: 'projectAssignment_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  roleId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "rolodex_projectassignment" */
export type ProjectAssignment_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  roleId?: InputMaybe<Order_By>;
};

/** update columns of table "rolodex_projectassignment" */
export enum ProjectAssignment_Update_Column {
  /** column name */
  EndDate = 'endDate',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  OperatorId = 'operatorId',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  RoleId = 'roleId',
  /** column name */
  StartDate = 'startDate'
}

export type ProjectAssignment_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ProjectAssignment_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ProjectAssignment_Set_Input>;
  /** filter the rows which have to be updated */
  where: ProjectAssignment_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ProjectAssignment_Var_Pop_Fields = {
  __typename?: 'projectAssignment_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  roleId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "rolodex_projectassignment" */
export type ProjectAssignment_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  roleId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ProjectAssignment_Var_Samp_Fields = {
  __typename?: 'projectAssignment_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  roleId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "rolodex_projectassignment" */
export type ProjectAssignment_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  roleId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ProjectAssignment_Variance_Fields = {
  __typename?: 'projectAssignment_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  roleId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "rolodex_projectassignment" */
export type ProjectAssignment_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  roleId?: InputMaybe<Order_By>;
};

/** columns and relationships of "rolodex_projectcontact" */
export type ProjectContact = {
  __typename?: 'projectContact';
  email: Scalars['String']['output'];
  id: Scalars['bigint']['output'];
  job_title: Scalars['String']['output'];
  name: Scalars['String']['output'];
  note: Scalars['String']['output'];
  phone: Scalars['String']['output'];
  primary: Scalars['Boolean']['output'];
  /** An object relationship */
  project: Project;
  projectId: Scalars['bigint']['output'];
  timezone: Scalars['String']['output'];
};

/** aggregated selection of "rolodex_projectcontact" */
export type ProjectContact_Aggregate = {
  __typename?: 'projectContact_aggregate';
  aggregate?: Maybe<ProjectContact_Aggregate_Fields>;
  nodes: Array<ProjectContact>;
};

export type ProjectContact_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<ProjectContact_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<ProjectContact_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<ProjectContact_Aggregate_Bool_Exp_Count>;
};

export type ProjectContact_Aggregate_Bool_Exp_Bool_And = {
  arguments: ProjectContact_Select_Column_ProjectContact_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ProjectContact_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type ProjectContact_Aggregate_Bool_Exp_Bool_Or = {
  arguments: ProjectContact_Select_Column_ProjectContact_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ProjectContact_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type ProjectContact_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ProjectContact_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ProjectContact_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "rolodex_projectcontact" */
export type ProjectContact_Aggregate_Fields = {
  __typename?: 'projectContact_aggregate_fields';
  avg?: Maybe<ProjectContact_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ProjectContact_Max_Fields>;
  min?: Maybe<ProjectContact_Min_Fields>;
  stddev?: Maybe<ProjectContact_Stddev_Fields>;
  stddev_pop?: Maybe<ProjectContact_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ProjectContact_Stddev_Samp_Fields>;
  sum?: Maybe<ProjectContact_Sum_Fields>;
  var_pop?: Maybe<ProjectContact_Var_Pop_Fields>;
  var_samp?: Maybe<ProjectContact_Var_Samp_Fields>;
  variance?: Maybe<ProjectContact_Variance_Fields>;
};


/** aggregate fields of "rolodex_projectcontact" */
export type ProjectContact_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ProjectContact_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "rolodex_projectcontact" */
export type ProjectContact_Aggregate_Order_By = {
  avg?: InputMaybe<ProjectContact_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ProjectContact_Max_Order_By>;
  min?: InputMaybe<ProjectContact_Min_Order_By>;
  stddev?: InputMaybe<ProjectContact_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ProjectContact_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ProjectContact_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ProjectContact_Sum_Order_By>;
  var_pop?: InputMaybe<ProjectContact_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ProjectContact_Var_Samp_Order_By>;
  variance?: InputMaybe<ProjectContact_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "rolodex_projectcontact" */
export type ProjectContact_Arr_Rel_Insert_Input = {
  data: Array<ProjectContact_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ProjectContact_On_Conflict>;
};

/** aggregate avg on columns */
export type ProjectContact_Avg_Fields = {
  __typename?: 'projectContact_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "rolodex_projectcontact" */
export type ProjectContact_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "rolodex_projectcontact". All fields are combined with a logical 'AND'. */
export type ProjectContact_Bool_Exp = {
  _and?: InputMaybe<Array<ProjectContact_Bool_Exp>>;
  _not?: InputMaybe<ProjectContact_Bool_Exp>;
  _or?: InputMaybe<Array<ProjectContact_Bool_Exp>>;
  email?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  job_title?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  phone?: InputMaybe<String_Comparison_Exp>;
  primary?: InputMaybe<Boolean_Comparison_Exp>;
  project?: InputMaybe<Project_Bool_Exp>;
  projectId?: InputMaybe<Bigint_Comparison_Exp>;
  timezone?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "rolodex_projectcontact" */
export enum ProjectContact_Constraint {
  /** unique or primary key constraint on columns "project_id", "name" */
  RolodexProjectcontactNameProjectIdBb480f62Uniq = 'rolodex_projectcontact_name_project_id_bb480f62_uniq',
  /** unique or primary key constraint on columns "id" */
  RolodexProjectcontactPkey = 'rolodex_projectcontact_pkey'
}

/** input type for incrementing numeric columns in table "rolodex_projectcontact" */
export type ProjectContact_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "rolodex_projectcontact" */
export type ProjectContact_Insert_Input = {
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  job_title?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  primary?: InputMaybe<Scalars['Boolean']['input']>;
  project?: InputMaybe<Project_Obj_Rel_Insert_Input>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  timezone?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type ProjectContact_Max_Fields = {
  __typename?: 'projectContact_max_fields';
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  job_title?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  timezone?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "rolodex_projectcontact" */
export type ProjectContact_Max_Order_By = {
  email?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  job_title?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  phone?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  timezone?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ProjectContact_Min_Fields = {
  __typename?: 'projectContact_min_fields';
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  job_title?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  timezone?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "rolodex_projectcontact" */
export type ProjectContact_Min_Order_By = {
  email?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  job_title?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  phone?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  timezone?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "rolodex_projectcontact" */
export type ProjectContact_Mutation_Response = {
  __typename?: 'projectContact_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ProjectContact>;
};

/** on_conflict condition type for table "rolodex_projectcontact" */
export type ProjectContact_On_Conflict = {
  constraint: ProjectContact_Constraint;
  update_columns?: Array<ProjectContact_Update_Column>;
  where?: InputMaybe<ProjectContact_Bool_Exp>;
};

/** Ordering options when selecting data from "rolodex_projectcontact". */
export type ProjectContact_Order_By = {
  email?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  job_title?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  phone?: InputMaybe<Order_By>;
  primary?: InputMaybe<Order_By>;
  project?: InputMaybe<Project_Order_By>;
  projectId?: InputMaybe<Order_By>;
  timezone?: InputMaybe<Order_By>;
};

/** primary key columns input for table: rolodex_projectcontact */
export type ProjectContact_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "rolodex_projectcontact" */
export enum ProjectContact_Select_Column {
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  JobTitle = 'job_title',
  /** column name */
  Name = 'name',
  /** column name */
  Note = 'note',
  /** column name */
  Phone = 'phone',
  /** column name */
  Primary = 'primary',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  Timezone = 'timezone'
}

/** select "projectContact_aggregate_bool_exp_bool_and_arguments_columns" columns of table "rolodex_projectcontact" */
export enum ProjectContact_Select_Column_ProjectContact_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Primary = 'primary'
}

/** select "projectContact_aggregate_bool_exp_bool_or_arguments_columns" columns of table "rolodex_projectcontact" */
export enum ProjectContact_Select_Column_ProjectContact_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Primary = 'primary'
}

/** input type for updating data in table "rolodex_projectcontact" */
export type ProjectContact_Set_Input = {
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  job_title?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  primary?: InputMaybe<Scalars['Boolean']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  timezone?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type ProjectContact_Stddev_Fields = {
  __typename?: 'projectContact_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "rolodex_projectcontact" */
export type ProjectContact_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ProjectContact_Stddev_Pop_Fields = {
  __typename?: 'projectContact_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "rolodex_projectcontact" */
export type ProjectContact_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ProjectContact_Stddev_Samp_Fields = {
  __typename?: 'projectContact_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "rolodex_projectcontact" */
export type ProjectContact_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "projectContact" */
export type ProjectContact_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ProjectContact_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ProjectContact_Stream_Cursor_Value_Input = {
  email?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  job_title?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  primary?: InputMaybe<Scalars['Boolean']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  timezone?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type ProjectContact_Sum_Fields = {
  __typename?: 'projectContact_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "rolodex_projectcontact" */
export type ProjectContact_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** update columns of table "rolodex_projectcontact" */
export enum ProjectContact_Update_Column {
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  JobTitle = 'job_title',
  /** column name */
  Name = 'name',
  /** column name */
  Note = 'note',
  /** column name */
  Phone = 'phone',
  /** column name */
  Primary = 'primary',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  Timezone = 'timezone'
}

export type ProjectContact_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ProjectContact_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ProjectContact_Set_Input>;
  /** filter the rows which have to be updated */
  where: ProjectContact_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ProjectContact_Var_Pop_Fields = {
  __typename?: 'projectContact_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "rolodex_projectcontact" */
export type ProjectContact_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ProjectContact_Var_Samp_Fields = {
  __typename?: 'projectContact_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "rolodex_projectcontact" */
export type ProjectContact_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ProjectContact_Variance_Fields = {
  __typename?: 'projectContact_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "rolodex_projectcontact" */
export type ProjectContact_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** columns and relationships of "rolodex_projectinvite" */
export type ProjectInvite = {
  __typename?: 'projectInvite';
  /** An array relationship */
  assignments: Array<ProjectAssignment>;
  /** An aggregate relationship */
  assignments_aggregate: ProjectAssignment_Aggregate;
  comment: Scalars['String']['output'];
  id: Scalars['bigint']['output'];
  /** An object relationship */
  project: Project;
  projectId: Scalars['bigint']['output'];
  /** An object relationship */
  user: User;
  userId: Scalars['bigint']['output'];
};


/** columns and relationships of "rolodex_projectinvite" */
export type ProjectInviteAssignmentsArgs = {
  distinct_on?: InputMaybe<Array<ProjectAssignment_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectAssignment_Order_By>>;
  where?: InputMaybe<ProjectAssignment_Bool_Exp>;
};


/** columns and relationships of "rolodex_projectinvite" */
export type ProjectInviteAssignments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ProjectAssignment_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectAssignment_Order_By>>;
  where?: InputMaybe<ProjectAssignment_Bool_Exp>;
};

/** aggregated selection of "rolodex_projectinvite" */
export type ProjectInvite_Aggregate = {
  __typename?: 'projectInvite_aggregate';
  aggregate?: Maybe<ProjectInvite_Aggregate_Fields>;
  nodes: Array<ProjectInvite>;
};

export type ProjectInvite_Aggregate_Bool_Exp = {
  count?: InputMaybe<ProjectInvite_Aggregate_Bool_Exp_Count>;
};

export type ProjectInvite_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ProjectInvite_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ProjectInvite_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "rolodex_projectinvite" */
export type ProjectInvite_Aggregate_Fields = {
  __typename?: 'projectInvite_aggregate_fields';
  avg?: Maybe<ProjectInvite_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ProjectInvite_Max_Fields>;
  min?: Maybe<ProjectInvite_Min_Fields>;
  stddev?: Maybe<ProjectInvite_Stddev_Fields>;
  stddev_pop?: Maybe<ProjectInvite_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ProjectInvite_Stddev_Samp_Fields>;
  sum?: Maybe<ProjectInvite_Sum_Fields>;
  var_pop?: Maybe<ProjectInvite_Var_Pop_Fields>;
  var_samp?: Maybe<ProjectInvite_Var_Samp_Fields>;
  variance?: Maybe<ProjectInvite_Variance_Fields>;
};


/** aggregate fields of "rolodex_projectinvite" */
export type ProjectInvite_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ProjectInvite_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "rolodex_projectinvite" */
export type ProjectInvite_Aggregate_Order_By = {
  avg?: InputMaybe<ProjectInvite_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ProjectInvite_Max_Order_By>;
  min?: InputMaybe<ProjectInvite_Min_Order_By>;
  stddev?: InputMaybe<ProjectInvite_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ProjectInvite_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ProjectInvite_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ProjectInvite_Sum_Order_By>;
  var_pop?: InputMaybe<ProjectInvite_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ProjectInvite_Var_Samp_Order_By>;
  variance?: InputMaybe<ProjectInvite_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "rolodex_projectinvite" */
export type ProjectInvite_Arr_Rel_Insert_Input = {
  data: Array<ProjectInvite_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ProjectInvite_On_Conflict>;
};

/** aggregate avg on columns */
export type ProjectInvite_Avg_Fields = {
  __typename?: 'projectInvite_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "rolodex_projectinvite" */
export type ProjectInvite_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "rolodex_projectinvite". All fields are combined with a logical 'AND'. */
export type ProjectInvite_Bool_Exp = {
  _and?: InputMaybe<Array<ProjectInvite_Bool_Exp>>;
  _not?: InputMaybe<ProjectInvite_Bool_Exp>;
  _or?: InputMaybe<Array<ProjectInvite_Bool_Exp>>;
  assignments?: InputMaybe<ProjectAssignment_Bool_Exp>;
  assignments_aggregate?: InputMaybe<ProjectAssignment_Aggregate_Bool_Exp>;
  comment?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  project?: InputMaybe<Project_Bool_Exp>;
  projectId?: InputMaybe<Bigint_Comparison_Exp>;
  user?: InputMaybe<User_Bool_Exp>;
  userId?: InputMaybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "rolodex_projectinvite" */
export enum ProjectInvite_Constraint {
  /** unique or primary key constraint on columns "id" */
  RolodexProjectinvitePkey = 'rolodex_projectinvite_pkey'
}

/** input type for incrementing numeric columns in table "rolodex_projectinvite" */
export type ProjectInvite_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "rolodex_projectinvite" */
export type ProjectInvite_Insert_Input = {
  assignments?: InputMaybe<ProjectAssignment_Arr_Rel_Insert_Input>;
  comment?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  project?: InputMaybe<Project_Obj_Rel_Insert_Input>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  user?: InputMaybe<User_Obj_Rel_Insert_Input>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate max on columns */
export type ProjectInvite_Max_Fields = {
  __typename?: 'projectInvite_max_fields';
  comment?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

/** order by max() on columns of table "rolodex_projectinvite" */
export type ProjectInvite_Max_Order_By = {
  comment?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ProjectInvite_Min_Fields = {
  __typename?: 'projectInvite_min_fields';
  comment?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

/** order by min() on columns of table "rolodex_projectinvite" */
export type ProjectInvite_Min_Order_By = {
  comment?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "rolodex_projectinvite" */
export type ProjectInvite_Mutation_Response = {
  __typename?: 'projectInvite_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ProjectInvite>;
};

/** on_conflict condition type for table "rolodex_projectinvite" */
export type ProjectInvite_On_Conflict = {
  constraint: ProjectInvite_Constraint;
  update_columns?: Array<ProjectInvite_Update_Column>;
  where?: InputMaybe<ProjectInvite_Bool_Exp>;
};

/** Ordering options when selecting data from "rolodex_projectinvite". */
export type ProjectInvite_Order_By = {
  assignments_aggregate?: InputMaybe<ProjectAssignment_Aggregate_Order_By>;
  comment?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  project?: InputMaybe<Project_Order_By>;
  projectId?: InputMaybe<Order_By>;
  user?: InputMaybe<User_Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: rolodex_projectinvite */
export type ProjectInvite_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "rolodex_projectinvite" */
export enum ProjectInvite_Select_Column {
  /** column name */
  Comment = 'comment',
  /** column name */
  Id = 'id',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  UserId = 'userId'
}

/** input type for updating data in table "rolodex_projectinvite" */
export type ProjectInvite_Set_Input = {
  comment?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate stddev on columns */
export type ProjectInvite_Stddev_Fields = {
  __typename?: 'projectInvite_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "rolodex_projectinvite" */
export type ProjectInvite_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ProjectInvite_Stddev_Pop_Fields = {
  __typename?: 'projectInvite_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "rolodex_projectinvite" */
export type ProjectInvite_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ProjectInvite_Stddev_Samp_Fields = {
  __typename?: 'projectInvite_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "rolodex_projectinvite" */
export type ProjectInvite_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "projectInvite" */
export type ProjectInvite_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ProjectInvite_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ProjectInvite_Stream_Cursor_Value_Input = {
  comment?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type ProjectInvite_Sum_Fields = {
  __typename?: 'projectInvite_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "rolodex_projectinvite" */
export type ProjectInvite_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** update columns of table "rolodex_projectinvite" */
export enum ProjectInvite_Update_Column {
  /** column name */
  Comment = 'comment',
  /** column name */
  Id = 'id',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  UserId = 'userId'
}

export type ProjectInvite_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ProjectInvite_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ProjectInvite_Set_Input>;
  /** filter the rows which have to be updated */
  where: ProjectInvite_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ProjectInvite_Var_Pop_Fields = {
  __typename?: 'projectInvite_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "rolodex_projectinvite" */
export type ProjectInvite_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ProjectInvite_Var_Samp_Fields = {
  __typename?: 'projectInvite_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "rolodex_projectinvite" */
export type ProjectInvite_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ProjectInvite_Variance_Fields = {
  __typename?: 'projectInvite_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "rolodex_projectinvite" */
export type ProjectInvite_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** columns and relationships of "rolodex_projectnote" */
export type ProjectNote = {
  __typename?: 'projectNote';
  id: Scalars['bigint']['output'];
  note: Scalars['String']['output'];
  operatorId?: Maybe<Scalars['bigint']['output']>;
  /** An object relationship */
  project: Project;
  projectId: Scalars['bigint']['output'];
  timestamp: Scalars['date']['output'];
  /** An object relationship */
  user?: Maybe<User>;
};

/** aggregated selection of "rolodex_projectnote" */
export type ProjectNote_Aggregate = {
  __typename?: 'projectNote_aggregate';
  aggregate?: Maybe<ProjectNote_Aggregate_Fields>;
  nodes: Array<ProjectNote>;
};

export type ProjectNote_Aggregate_Bool_Exp = {
  count?: InputMaybe<ProjectNote_Aggregate_Bool_Exp_Count>;
};

export type ProjectNote_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ProjectNote_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ProjectNote_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "rolodex_projectnote" */
export type ProjectNote_Aggregate_Fields = {
  __typename?: 'projectNote_aggregate_fields';
  avg?: Maybe<ProjectNote_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ProjectNote_Max_Fields>;
  min?: Maybe<ProjectNote_Min_Fields>;
  stddev?: Maybe<ProjectNote_Stddev_Fields>;
  stddev_pop?: Maybe<ProjectNote_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ProjectNote_Stddev_Samp_Fields>;
  sum?: Maybe<ProjectNote_Sum_Fields>;
  var_pop?: Maybe<ProjectNote_Var_Pop_Fields>;
  var_samp?: Maybe<ProjectNote_Var_Samp_Fields>;
  variance?: Maybe<ProjectNote_Variance_Fields>;
};


/** aggregate fields of "rolodex_projectnote" */
export type ProjectNote_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ProjectNote_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "rolodex_projectnote" */
export type ProjectNote_Aggregate_Order_By = {
  avg?: InputMaybe<ProjectNote_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ProjectNote_Max_Order_By>;
  min?: InputMaybe<ProjectNote_Min_Order_By>;
  stddev?: InputMaybe<ProjectNote_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ProjectNote_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ProjectNote_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ProjectNote_Sum_Order_By>;
  var_pop?: InputMaybe<ProjectNote_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ProjectNote_Var_Samp_Order_By>;
  variance?: InputMaybe<ProjectNote_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "rolodex_projectnote" */
export type ProjectNote_Arr_Rel_Insert_Input = {
  data: Array<ProjectNote_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ProjectNote_On_Conflict>;
};

/** aggregate avg on columns */
export type ProjectNote_Avg_Fields = {
  __typename?: 'projectNote_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "rolodex_projectnote" */
export type ProjectNote_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "rolodex_projectnote". All fields are combined with a logical 'AND'. */
export type ProjectNote_Bool_Exp = {
  _and?: InputMaybe<Array<ProjectNote_Bool_Exp>>;
  _not?: InputMaybe<ProjectNote_Bool_Exp>;
  _or?: InputMaybe<Array<ProjectNote_Bool_Exp>>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  operatorId?: InputMaybe<Bigint_Comparison_Exp>;
  project?: InputMaybe<Project_Bool_Exp>;
  projectId?: InputMaybe<Bigint_Comparison_Exp>;
  timestamp?: InputMaybe<Date_Comparison_Exp>;
  user?: InputMaybe<User_Bool_Exp>;
};

/** unique or primary key constraints on table "rolodex_projectnote" */
export enum ProjectNote_Constraint {
  /** unique or primary key constraint on columns "id" */
  RolodexProjectnotePkey = 'rolodex_projectnote_pkey'
}

/** input type for incrementing numeric columns in table "rolodex_projectnote" */
export type ProjectNote_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "rolodex_projectnote" */
export type ProjectNote_Insert_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  project?: InputMaybe<Project_Obj_Rel_Insert_Input>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  timestamp?: InputMaybe<Scalars['date']['input']>;
  user?: InputMaybe<User_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type ProjectNote_Max_Fields = {
  __typename?: 'projectNote_max_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  timestamp?: Maybe<Scalars['date']['output']>;
};

/** order by max() on columns of table "rolodex_projectnote" */
export type ProjectNote_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ProjectNote_Min_Fields = {
  __typename?: 'projectNote_min_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  timestamp?: Maybe<Scalars['date']['output']>;
};

/** order by min() on columns of table "rolodex_projectnote" */
export type ProjectNote_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "rolodex_projectnote" */
export type ProjectNote_Mutation_Response = {
  __typename?: 'projectNote_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ProjectNote>;
};

/** on_conflict condition type for table "rolodex_projectnote" */
export type ProjectNote_On_Conflict = {
  constraint: ProjectNote_Constraint;
  update_columns?: Array<ProjectNote_Update_Column>;
  where?: InputMaybe<ProjectNote_Bool_Exp>;
};

/** Ordering options when selecting data from "rolodex_projectnote". */
export type ProjectNote_Order_By = {
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  project?: InputMaybe<Project_Order_By>;
  projectId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  user?: InputMaybe<User_Order_By>;
};

/** primary key columns input for table: rolodex_projectnote */
export type ProjectNote_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "rolodex_projectnote" */
export enum ProjectNote_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  OperatorId = 'operatorId',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  Timestamp = 'timestamp'
}

/** input type for updating data in table "rolodex_projectnote" */
export type ProjectNote_Set_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  timestamp?: InputMaybe<Scalars['date']['input']>;
};

/** aggregate stddev on columns */
export type ProjectNote_Stddev_Fields = {
  __typename?: 'projectNote_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "rolodex_projectnote" */
export type ProjectNote_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ProjectNote_Stddev_Pop_Fields = {
  __typename?: 'projectNote_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "rolodex_projectnote" */
export type ProjectNote_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ProjectNote_Stddev_Samp_Fields = {
  __typename?: 'projectNote_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "rolodex_projectnote" */
export type ProjectNote_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "projectNote" */
export type ProjectNote_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ProjectNote_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ProjectNote_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  timestamp?: InputMaybe<Scalars['date']['input']>;
};

/** aggregate sum on columns */
export type ProjectNote_Sum_Fields = {
  __typename?: 'projectNote_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "rolodex_projectnote" */
export type ProjectNote_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** update columns of table "rolodex_projectnote" */
export enum ProjectNote_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  OperatorId = 'operatorId',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  Timestamp = 'timestamp'
}

export type ProjectNote_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ProjectNote_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ProjectNote_Set_Input>;
  /** filter the rows which have to be updated */
  where: ProjectNote_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ProjectNote_Var_Pop_Fields = {
  __typename?: 'projectNote_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "rolodex_projectnote" */
export type ProjectNote_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ProjectNote_Var_Samp_Fields = {
  __typename?: 'projectNote_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "rolodex_projectnote" */
export type ProjectNote_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ProjectNote_Variance_Fields = {
  __typename?: 'projectNote_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "rolodex_projectnote" */
export type ProjectNote_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** columns and relationships of "rolodex_projectrole" */
export type ProjectRole = {
  __typename?: 'projectRole';
  /** An array relationship */
  assignments: Array<ProjectAssignment>;
  /** An aggregate relationship */
  assignments_aggregate: ProjectAssignment_Aggregate;
  id: Scalars['bigint']['output'];
  projectRole: Scalars['String']['output'];
};


/** columns and relationships of "rolodex_projectrole" */
export type ProjectRoleAssignmentsArgs = {
  distinct_on?: InputMaybe<Array<ProjectAssignment_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectAssignment_Order_By>>;
  where?: InputMaybe<ProjectAssignment_Bool_Exp>;
};


/** columns and relationships of "rolodex_projectrole" */
export type ProjectRoleAssignments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ProjectAssignment_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectAssignment_Order_By>>;
  where?: InputMaybe<ProjectAssignment_Bool_Exp>;
};

/** aggregated selection of "rolodex_projectrole" */
export type ProjectRole_Aggregate = {
  __typename?: 'projectRole_aggregate';
  aggregate?: Maybe<ProjectRole_Aggregate_Fields>;
  nodes: Array<ProjectRole>;
};

/** aggregate fields of "rolodex_projectrole" */
export type ProjectRole_Aggregate_Fields = {
  __typename?: 'projectRole_aggregate_fields';
  avg?: Maybe<ProjectRole_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ProjectRole_Max_Fields>;
  min?: Maybe<ProjectRole_Min_Fields>;
  stddev?: Maybe<ProjectRole_Stddev_Fields>;
  stddev_pop?: Maybe<ProjectRole_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ProjectRole_Stddev_Samp_Fields>;
  sum?: Maybe<ProjectRole_Sum_Fields>;
  var_pop?: Maybe<ProjectRole_Var_Pop_Fields>;
  var_samp?: Maybe<ProjectRole_Var_Samp_Fields>;
  variance?: Maybe<ProjectRole_Variance_Fields>;
};


/** aggregate fields of "rolodex_projectrole" */
export type ProjectRole_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ProjectRole_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type ProjectRole_Avg_Fields = {
  __typename?: 'projectRole_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "rolodex_projectrole". All fields are combined with a logical 'AND'. */
export type ProjectRole_Bool_Exp = {
  _and?: InputMaybe<Array<ProjectRole_Bool_Exp>>;
  _not?: InputMaybe<ProjectRole_Bool_Exp>;
  _or?: InputMaybe<Array<ProjectRole_Bool_Exp>>;
  assignments?: InputMaybe<ProjectAssignment_Bool_Exp>;
  assignments_aggregate?: InputMaybe<ProjectAssignment_Aggregate_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  projectRole?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "rolodex_projectrole" */
export enum ProjectRole_Constraint {
  /** unique or primary key constraint on columns "id" */
  RolodexProjectrolePkey = 'rolodex_projectrole_pkey',
  /** unique or primary key constraint on columns "project_role" */
  RolodexProjectroleProjectRoleKey = 'rolodex_projectrole_project_role_key'
}

/** input type for incrementing numeric columns in table "rolodex_projectrole" */
export type ProjectRole_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "rolodex_projectrole" */
export type ProjectRole_Insert_Input = {
  assignments?: InputMaybe<ProjectAssignment_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectRole?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type ProjectRole_Max_Fields = {
  __typename?: 'projectRole_max_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  projectRole?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type ProjectRole_Min_Fields = {
  __typename?: 'projectRole_min_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  projectRole?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "rolodex_projectrole" */
export type ProjectRole_Mutation_Response = {
  __typename?: 'projectRole_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ProjectRole>;
};

/** input type for inserting object relation for remote table "rolodex_projectrole" */
export type ProjectRole_Obj_Rel_Insert_Input = {
  data: ProjectRole_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ProjectRole_On_Conflict>;
};

/** on_conflict condition type for table "rolodex_projectrole" */
export type ProjectRole_On_Conflict = {
  constraint: ProjectRole_Constraint;
  update_columns?: Array<ProjectRole_Update_Column>;
  where?: InputMaybe<ProjectRole_Bool_Exp>;
};

/** Ordering options when selecting data from "rolodex_projectrole". */
export type ProjectRole_Order_By = {
  assignments_aggregate?: InputMaybe<ProjectAssignment_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  projectRole?: InputMaybe<Order_By>;
};

/** primary key columns input for table: rolodex_projectrole */
export type ProjectRole_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "rolodex_projectrole" */
export enum ProjectRole_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ProjectRole = 'projectRole'
}

/** input type for updating data in table "rolodex_projectrole" */
export type ProjectRole_Set_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectRole?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type ProjectRole_Stddev_Fields = {
  __typename?: 'projectRole_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type ProjectRole_Stddev_Pop_Fields = {
  __typename?: 'projectRole_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type ProjectRole_Stddev_Samp_Fields = {
  __typename?: 'projectRole_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "projectRole" */
export type ProjectRole_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ProjectRole_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ProjectRole_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectRole?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type ProjectRole_Sum_Fields = {
  __typename?: 'projectRole_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
};

/** update columns of table "rolodex_projectrole" */
export enum ProjectRole_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ProjectRole = 'projectRole'
}

export type ProjectRole_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ProjectRole_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ProjectRole_Set_Input>;
  /** filter the rows which have to be updated */
  where: ProjectRole_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ProjectRole_Var_Pop_Fields = {
  __typename?: 'projectRole_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type ProjectRole_Var_Samp_Fields = {
  __typename?: 'projectRole_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type ProjectRole_Variance_Fields = {
  __typename?: 'projectRole_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "rolodex_projecttype" */
export type ProjectType = {
  __typename?: 'projectType';
  id: Scalars['bigint']['output'];
  projectType: Scalars['String']['output'];
  /** An array relationship */
  projects: Array<Project>;
  /** An aggregate relationship */
  projects_aggregate: Project_Aggregate;
};


/** columns and relationships of "rolodex_projecttype" */
export type ProjectTypeProjectsArgs = {
  distinct_on?: InputMaybe<Array<Project_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Order_By>>;
  where?: InputMaybe<Project_Bool_Exp>;
};


/** columns and relationships of "rolodex_projecttype" */
export type ProjectTypeProjects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Order_By>>;
  where?: InputMaybe<Project_Bool_Exp>;
};

/** aggregated selection of "rolodex_projecttype" */
export type ProjectType_Aggregate = {
  __typename?: 'projectType_aggregate';
  aggregate?: Maybe<ProjectType_Aggregate_Fields>;
  nodes: Array<ProjectType>;
};

/** aggregate fields of "rolodex_projecttype" */
export type ProjectType_Aggregate_Fields = {
  __typename?: 'projectType_aggregate_fields';
  avg?: Maybe<ProjectType_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ProjectType_Max_Fields>;
  min?: Maybe<ProjectType_Min_Fields>;
  stddev?: Maybe<ProjectType_Stddev_Fields>;
  stddev_pop?: Maybe<ProjectType_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ProjectType_Stddev_Samp_Fields>;
  sum?: Maybe<ProjectType_Sum_Fields>;
  var_pop?: Maybe<ProjectType_Var_Pop_Fields>;
  var_samp?: Maybe<ProjectType_Var_Samp_Fields>;
  variance?: Maybe<ProjectType_Variance_Fields>;
};


/** aggregate fields of "rolodex_projecttype" */
export type ProjectType_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ProjectType_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type ProjectType_Avg_Fields = {
  __typename?: 'projectType_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "rolodex_projecttype". All fields are combined with a logical 'AND'. */
export type ProjectType_Bool_Exp = {
  _and?: InputMaybe<Array<ProjectType_Bool_Exp>>;
  _not?: InputMaybe<ProjectType_Bool_Exp>;
  _or?: InputMaybe<Array<ProjectType_Bool_Exp>>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  projectType?: InputMaybe<String_Comparison_Exp>;
  projects?: InputMaybe<Project_Bool_Exp>;
  projects_aggregate?: InputMaybe<Project_Aggregate_Bool_Exp>;
};

/** unique or primary key constraints on table "rolodex_projecttype" */
export enum ProjectType_Constraint {
  /** unique or primary key constraint on columns "id" */
  RolodexProjecttypePkey = 'rolodex_projecttype_pkey',
  /** unique or primary key constraint on columns "project_type" */
  RolodexProjecttypeProjectTypeKey = 'rolodex_projecttype_project_type_key'
}

/** input type for incrementing numeric columns in table "rolodex_projecttype" */
export type ProjectType_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "rolodex_projecttype" */
export type ProjectType_Insert_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectType?: InputMaybe<Scalars['String']['input']>;
  projects?: InputMaybe<Project_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type ProjectType_Max_Fields = {
  __typename?: 'projectType_max_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  projectType?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type ProjectType_Min_Fields = {
  __typename?: 'projectType_min_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  projectType?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "rolodex_projecttype" */
export type ProjectType_Mutation_Response = {
  __typename?: 'projectType_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ProjectType>;
};

/** input type for inserting object relation for remote table "rolodex_projecttype" */
export type ProjectType_Obj_Rel_Insert_Input = {
  data: ProjectType_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ProjectType_On_Conflict>;
};

/** on_conflict condition type for table "rolodex_projecttype" */
export type ProjectType_On_Conflict = {
  constraint: ProjectType_Constraint;
  update_columns?: Array<ProjectType_Update_Column>;
  where?: InputMaybe<ProjectType_Bool_Exp>;
};

/** Ordering options when selecting data from "rolodex_projecttype". */
export type ProjectType_Order_By = {
  id?: InputMaybe<Order_By>;
  projectType?: InputMaybe<Order_By>;
  projects_aggregate?: InputMaybe<Project_Aggregate_Order_By>;
};

/** primary key columns input for table: rolodex_projecttype */
export type ProjectType_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "rolodex_projecttype" */
export enum ProjectType_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ProjectType = 'projectType'
}

/** input type for updating data in table "rolodex_projecttype" */
export type ProjectType_Set_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectType?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type ProjectType_Stddev_Fields = {
  __typename?: 'projectType_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type ProjectType_Stddev_Pop_Fields = {
  __typename?: 'projectType_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type ProjectType_Stddev_Samp_Fields = {
  __typename?: 'projectType_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "projectType" */
export type ProjectType_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ProjectType_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ProjectType_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectType?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type ProjectType_Sum_Fields = {
  __typename?: 'projectType_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
};

/** update columns of table "rolodex_projecttype" */
export enum ProjectType_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ProjectType = 'projectType'
}

export type ProjectType_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ProjectType_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ProjectType_Set_Input>;
  /** filter the rows which have to be updated */
  where: ProjectType_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ProjectType_Var_Pop_Fields = {
  __typename?: 'projectType_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type ProjectType_Var_Samp_Fields = {
  __typename?: 'projectType_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type ProjectType_Variance_Fields = {
  __typename?: 'projectType_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregated selection of "rolodex_project" */
export type Project_Aggregate = {
  __typename?: 'project_aggregate';
  aggregate?: Maybe<Project_Aggregate_Fields>;
  nodes: Array<Project>;
};

export type Project_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Project_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Project_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Project_Aggregate_Bool_Exp_Count>;
};

export type Project_Aggregate_Bool_Exp_Bool_And = {
  arguments: Project_Select_Column_Project_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Project_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Project_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Project_Select_Column_Project_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Project_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Project_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Project_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Project_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "rolodex_project" */
export type Project_Aggregate_Fields = {
  __typename?: 'project_aggregate_fields';
  avg?: Maybe<Project_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Project_Max_Fields>;
  min?: Maybe<Project_Min_Fields>;
  stddev?: Maybe<Project_Stddev_Fields>;
  stddev_pop?: Maybe<Project_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Project_Stddev_Samp_Fields>;
  sum?: Maybe<Project_Sum_Fields>;
  var_pop?: Maybe<Project_Var_Pop_Fields>;
  var_samp?: Maybe<Project_Var_Samp_Fields>;
  variance?: Maybe<Project_Variance_Fields>;
};


/** aggregate fields of "rolodex_project" */
export type Project_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Project_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "rolodex_project" */
export type Project_Aggregate_Order_By = {
  avg?: InputMaybe<Project_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Project_Max_Order_By>;
  min?: InputMaybe<Project_Min_Order_By>;
  stddev?: InputMaybe<Project_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Project_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Project_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Project_Sum_Order_By>;
  var_pop?: InputMaybe<Project_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Project_Var_Samp_Order_By>;
  variance?: InputMaybe<Project_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Project_Append_Input = {
  bloodhound_results?: InputMaybe<Scalars['jsonb']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "rolodex_project" */
export type Project_Arr_Rel_Insert_Input = {
  data: Array<Project_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Project_On_Conflict>;
};

/** aggregate avg on columns */
export type Project_Avg_Fields = {
  __typename?: 'project_avg_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectTypeId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "rolodex_project" */
export type Project_Avg_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectTypeId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "rolodex_project". All fields are combined with a logical 'AND'. */
export type Project_Bool_Exp = {
  _and?: InputMaybe<Array<Project_Bool_Exp>>;
  _not?: InputMaybe<Project_Bool_Exp>;
  _or?: InputMaybe<Array<Project_Bool_Exp>>;
  archives?: InputMaybe<Archive_Bool_Exp>;
  archives_aggregate?: InputMaybe<Archive_Aggregate_Bool_Exp>;
  assignments?: InputMaybe<ProjectAssignment_Bool_Exp>;
  assignments_aggregate?: InputMaybe<ProjectAssignment_Aggregate_Bool_Exp>;
  bloodhound_api_key_id?: InputMaybe<String_Comparison_Exp>;
  bloodhound_api_key_token?: InputMaybe<String_Comparison_Exp>;
  bloodhound_api_root_url?: InputMaybe<String_Comparison_Exp>;
  bloodhound_results?: InputMaybe<Jsonb_Comparison_Exp>;
  client?: InputMaybe<Client_Bool_Exp>;
  clientId?: InputMaybe<Bigint_Comparison_Exp>;
  cloudServers?: InputMaybe<CloudServer_Bool_Exp>;
  cloudServers_aggregate?: InputMaybe<CloudServer_Aggregate_Bool_Exp>;
  codename?: InputMaybe<String_Comparison_Exp>;
  collab_note?: InputMaybe<String_Comparison_Exp>;
  comments?: InputMaybe<ProjectNote_Bool_Exp>;
  comments_aggregate?: InputMaybe<ProjectNote_Aggregate_Bool_Exp>;
  complete?: InputMaybe<Boolean_Comparison_Exp>;
  contacts?: InputMaybe<ProjectContact_Bool_Exp>;
  contacts_aggregate?: InputMaybe<ProjectContact_Aggregate_Bool_Exp>;
  deconflictions?: InputMaybe<Deconfliction_Bool_Exp>;
  deconflictions_aggregate?: InputMaybe<Deconfliction_Aggregate_Bool_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  domainServerConnections?: InputMaybe<DomainServerConnection_Bool_Exp>;
  domainServerConnections_aggregate?: InputMaybe<DomainServerConnection_Aggregate_Bool_Exp>;
  domains?: InputMaybe<DomainCheckout_Bool_Exp>;
  domains_aggregate?: InputMaybe<DomainCheckout_Aggregate_Bool_Exp>;
  endDate?: InputMaybe<Date_Comparison_Exp>;
  endTime?: InputMaybe<Time_Comparison_Exp>;
  extraFields?: InputMaybe<Jsonb_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  invites?: InputMaybe<ProjectInvite_Bool_Exp>;
  invites_aggregate?: InputMaybe<ProjectInvite_Aggregate_Bool_Exp>;
  objectives?: InputMaybe<Objective_Bool_Exp>;
  objectives_aggregate?: InputMaybe<Objective_Aggregate_Bool_Exp>;
  operatorId?: InputMaybe<Bigint_Comparison_Exp>;
  oplogs?: InputMaybe<Oplog_Bool_Exp>;
  oplogs_aggregate?: InputMaybe<Oplog_Aggregate_Bool_Exp>;
  projectType?: InputMaybe<ProjectType_Bool_Exp>;
  projectTypeId?: InputMaybe<Bigint_Comparison_Exp>;
  reports?: InputMaybe<Report_Bool_Exp>;
  reports_aggregate?: InputMaybe<Report_Aggregate_Bool_Exp>;
  scopes?: InputMaybe<Scope_Bool_Exp>;
  scopes_aggregate?: InputMaybe<Scope_Aggregate_Bool_Exp>;
  slackChannel?: InputMaybe<String_Comparison_Exp>;
  startDate?: InputMaybe<Date_Comparison_Exp>;
  startTime?: InputMaybe<Time_Comparison_Exp>;
  staticServers?: InputMaybe<ServerCheckout_Bool_Exp>;
  staticServers_aggregate?: InputMaybe<ServerCheckout_Aggregate_Bool_Exp>;
  targets?: InputMaybe<Target_Bool_Exp>;
  targets_aggregate?: InputMaybe<Target_Aggregate_Bool_Exp>;
  timezone?: InputMaybe<String_Comparison_Exp>;
  user?: InputMaybe<User_Bool_Exp>;
  whitecards?: InputMaybe<Whitecard_Bool_Exp>;
  whitecards_aggregate?: InputMaybe<Whitecard_Aggregate_Bool_Exp>;
};

/** unique or primary key constraints on table "rolodex_project" */
export enum Project_Constraint {
  /** unique or primary key constraint on columns "id" */
  RolodexProjectPkey = 'rolodex_project_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Project_Delete_At_Path_Input = {
  bloodhound_results?: InputMaybe<Array<Scalars['String']['input']>>;
  extraFields?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Project_Delete_Elem_Input = {
  bloodhound_results?: InputMaybe<Scalars['Int']['input']>;
  extraFields?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Project_Delete_Key_Input = {
  bloodhound_results?: InputMaybe<Scalars['String']['input']>;
  extraFields?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "rolodex_project" */
export type Project_Inc_Input = {
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  projectTypeId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "rolodex_project" */
export type Project_Insert_Input = {
  archives?: InputMaybe<Archive_Arr_Rel_Insert_Input>;
  assignments?: InputMaybe<ProjectAssignment_Arr_Rel_Insert_Input>;
  bloodhound_api_key_id?: InputMaybe<Scalars['String']['input']>;
  bloodhound_api_key_token?: InputMaybe<Scalars['String']['input']>;
  bloodhound_api_root_url?: InputMaybe<Scalars['String']['input']>;
  bloodhound_results?: InputMaybe<Scalars['jsonb']['input']>;
  client?: InputMaybe<Client_Obj_Rel_Insert_Input>;
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  cloudServers?: InputMaybe<CloudServer_Arr_Rel_Insert_Input>;
  codename?: InputMaybe<Scalars['String']['input']>;
  collab_note?: InputMaybe<Scalars['String']['input']>;
  comments?: InputMaybe<ProjectNote_Arr_Rel_Insert_Input>;
  complete?: InputMaybe<Scalars['Boolean']['input']>;
  contacts?: InputMaybe<ProjectContact_Arr_Rel_Insert_Input>;
  deconflictions?: InputMaybe<Deconfliction_Arr_Rel_Insert_Input>;
  description?: InputMaybe<Scalars['String']['input']>;
  domainServerConnections?: InputMaybe<DomainServerConnection_Arr_Rel_Insert_Input>;
  domains?: InputMaybe<DomainCheckout_Arr_Rel_Insert_Input>;
  endDate?: InputMaybe<Scalars['date']['input']>;
  endTime?: InputMaybe<Scalars['time']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  invites?: InputMaybe<ProjectInvite_Arr_Rel_Insert_Input>;
  objectives?: InputMaybe<Objective_Arr_Rel_Insert_Input>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  oplogs?: InputMaybe<Oplog_Arr_Rel_Insert_Input>;
  projectType?: InputMaybe<ProjectType_Obj_Rel_Insert_Input>;
  projectTypeId?: InputMaybe<Scalars['bigint']['input']>;
  reports?: InputMaybe<Report_Arr_Rel_Insert_Input>;
  scopes?: InputMaybe<Scope_Arr_Rel_Insert_Input>;
  slackChannel?: InputMaybe<Scalars['String']['input']>;
  startDate?: InputMaybe<Scalars['date']['input']>;
  startTime?: InputMaybe<Scalars['time']['input']>;
  staticServers?: InputMaybe<ServerCheckout_Arr_Rel_Insert_Input>;
  targets?: InputMaybe<Target_Arr_Rel_Insert_Input>;
  timezone?: InputMaybe<Scalars['String']['input']>;
  user?: InputMaybe<User_Obj_Rel_Insert_Input>;
  whitecards?: InputMaybe<Whitecard_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Project_Max_Fields = {
  __typename?: 'project_max_fields';
  bloodhound_api_key_id?: Maybe<Scalars['String']['output']>;
  bloodhound_api_key_token?: Maybe<Scalars['String']['output']>;
  bloodhound_api_root_url?: Maybe<Scalars['String']['output']>;
  clientId?: Maybe<Scalars['bigint']['output']>;
  codename?: Maybe<Scalars['String']['output']>;
  collab_note?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  endDate?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  projectTypeId?: Maybe<Scalars['bigint']['output']>;
  slackChannel?: Maybe<Scalars['String']['output']>;
  startDate?: Maybe<Scalars['date']['output']>;
  timezone?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "rolodex_project" */
export type Project_Max_Order_By = {
  bloodhound_api_key_id?: InputMaybe<Order_By>;
  bloodhound_api_key_token?: InputMaybe<Order_By>;
  bloodhound_api_root_url?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  codename?: InputMaybe<Order_By>;
  collab_note?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  endDate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectTypeId?: InputMaybe<Order_By>;
  slackChannel?: InputMaybe<Order_By>;
  startDate?: InputMaybe<Order_By>;
  timezone?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Project_Min_Fields = {
  __typename?: 'project_min_fields';
  bloodhound_api_key_id?: Maybe<Scalars['String']['output']>;
  bloodhound_api_key_token?: Maybe<Scalars['String']['output']>;
  bloodhound_api_root_url?: Maybe<Scalars['String']['output']>;
  clientId?: Maybe<Scalars['bigint']['output']>;
  codename?: Maybe<Scalars['String']['output']>;
  collab_note?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  endDate?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  projectTypeId?: Maybe<Scalars['bigint']['output']>;
  slackChannel?: Maybe<Scalars['String']['output']>;
  startDate?: Maybe<Scalars['date']['output']>;
  timezone?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "rolodex_project" */
export type Project_Min_Order_By = {
  bloodhound_api_key_id?: InputMaybe<Order_By>;
  bloodhound_api_key_token?: InputMaybe<Order_By>;
  bloodhound_api_root_url?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  codename?: InputMaybe<Order_By>;
  collab_note?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  endDate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectTypeId?: InputMaybe<Order_By>;
  slackChannel?: InputMaybe<Order_By>;
  startDate?: InputMaybe<Order_By>;
  timezone?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "rolodex_project" */
export type Project_Mutation_Response = {
  __typename?: 'project_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Project>;
};

/** input type for inserting object relation for remote table "rolodex_project" */
export type Project_Obj_Rel_Insert_Input = {
  data: Project_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Project_On_Conflict>;
};

/** on_conflict condition type for table "rolodex_project" */
export type Project_On_Conflict = {
  constraint: Project_Constraint;
  update_columns?: Array<Project_Update_Column>;
  where?: InputMaybe<Project_Bool_Exp>;
};

/** Ordering options when selecting data from "rolodex_project". */
export type Project_Order_By = {
  archives_aggregate?: InputMaybe<Archive_Aggregate_Order_By>;
  assignments_aggregate?: InputMaybe<ProjectAssignment_Aggregate_Order_By>;
  bloodhound_api_key_id?: InputMaybe<Order_By>;
  bloodhound_api_key_token?: InputMaybe<Order_By>;
  bloodhound_api_root_url?: InputMaybe<Order_By>;
  bloodhound_results?: InputMaybe<Order_By>;
  client?: InputMaybe<Client_Order_By>;
  clientId?: InputMaybe<Order_By>;
  cloudServers_aggregate?: InputMaybe<CloudServer_Aggregate_Order_By>;
  codename?: InputMaybe<Order_By>;
  collab_note?: InputMaybe<Order_By>;
  comments_aggregate?: InputMaybe<ProjectNote_Aggregate_Order_By>;
  complete?: InputMaybe<Order_By>;
  contacts_aggregate?: InputMaybe<ProjectContact_Aggregate_Order_By>;
  deconflictions_aggregate?: InputMaybe<Deconfliction_Aggregate_Order_By>;
  description?: InputMaybe<Order_By>;
  domainServerConnections_aggregate?: InputMaybe<DomainServerConnection_Aggregate_Order_By>;
  domains_aggregate?: InputMaybe<DomainCheckout_Aggregate_Order_By>;
  endDate?: InputMaybe<Order_By>;
  endTime?: InputMaybe<Order_By>;
  extraFields?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  invites_aggregate?: InputMaybe<ProjectInvite_Aggregate_Order_By>;
  objectives_aggregate?: InputMaybe<Objective_Aggregate_Order_By>;
  operatorId?: InputMaybe<Order_By>;
  oplogs_aggregate?: InputMaybe<Oplog_Aggregate_Order_By>;
  projectType?: InputMaybe<ProjectType_Order_By>;
  projectTypeId?: InputMaybe<Order_By>;
  reports_aggregate?: InputMaybe<Report_Aggregate_Order_By>;
  scopes_aggregate?: InputMaybe<Scope_Aggregate_Order_By>;
  slackChannel?: InputMaybe<Order_By>;
  startDate?: InputMaybe<Order_By>;
  startTime?: InputMaybe<Order_By>;
  staticServers_aggregate?: InputMaybe<ServerCheckout_Aggregate_Order_By>;
  targets_aggregate?: InputMaybe<Target_Aggregate_Order_By>;
  timezone?: InputMaybe<Order_By>;
  user?: InputMaybe<User_Order_By>;
  whitecards_aggregate?: InputMaybe<Whitecard_Aggregate_Order_By>;
};

/** primary key columns input for table: rolodex_project */
export type Project_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Project_Prepend_Input = {
  bloodhound_results?: InputMaybe<Scalars['jsonb']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "rolodex_project" */
export enum Project_Select_Column {
  /** column name */
  BloodhoundApiKeyId = 'bloodhound_api_key_id',
  /** column name */
  BloodhoundApiKeyToken = 'bloodhound_api_key_token',
  /** column name */
  BloodhoundApiRootUrl = 'bloodhound_api_root_url',
  /** column name */
  BloodhoundResults = 'bloodhound_results',
  /** column name */
  ClientId = 'clientId',
  /** column name */
  Codename = 'codename',
  /** column name */
  CollabNote = 'collab_note',
  /** column name */
  Complete = 'complete',
  /** column name */
  Description = 'description',
  /** column name */
  EndDate = 'endDate',
  /** column name */
  EndTime = 'endTime',
  /** column name */
  ExtraFields = 'extraFields',
  /** column name */
  Id = 'id',
  /** column name */
  OperatorId = 'operatorId',
  /** column name */
  ProjectTypeId = 'projectTypeId',
  /** column name */
  SlackChannel = 'slackChannel',
  /** column name */
  StartDate = 'startDate',
  /** column name */
  StartTime = 'startTime',
  /** column name */
  Timezone = 'timezone'
}

/** select "project_aggregate_bool_exp_bool_and_arguments_columns" columns of table "rolodex_project" */
export enum Project_Select_Column_Project_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Complete = 'complete'
}

/** select "project_aggregate_bool_exp_bool_or_arguments_columns" columns of table "rolodex_project" */
export enum Project_Select_Column_Project_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Complete = 'complete'
}

/** input type for updating data in table "rolodex_project" */
export type Project_Set_Input = {
  bloodhound_api_key_id?: InputMaybe<Scalars['String']['input']>;
  bloodhound_api_key_token?: InputMaybe<Scalars['String']['input']>;
  bloodhound_api_root_url?: InputMaybe<Scalars['String']['input']>;
  bloodhound_results?: InputMaybe<Scalars['jsonb']['input']>;
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  codename?: InputMaybe<Scalars['String']['input']>;
  collab_note?: InputMaybe<Scalars['String']['input']>;
  complete?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  endDate?: InputMaybe<Scalars['date']['input']>;
  endTime?: InputMaybe<Scalars['time']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  projectTypeId?: InputMaybe<Scalars['bigint']['input']>;
  slackChannel?: InputMaybe<Scalars['String']['input']>;
  startDate?: InputMaybe<Scalars['date']['input']>;
  startTime?: InputMaybe<Scalars['time']['input']>;
  timezone?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Project_Stddev_Fields = {
  __typename?: 'project_stddev_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectTypeId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "rolodex_project" */
export type Project_Stddev_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectTypeId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Project_Stddev_Pop_Fields = {
  __typename?: 'project_stddev_pop_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectTypeId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "rolodex_project" */
export type Project_Stddev_Pop_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectTypeId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Project_Stddev_Samp_Fields = {
  __typename?: 'project_stddev_samp_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectTypeId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "rolodex_project" */
export type Project_Stddev_Samp_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectTypeId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "project" */
export type Project_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Project_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Project_Stream_Cursor_Value_Input = {
  bloodhound_api_key_id?: InputMaybe<Scalars['String']['input']>;
  bloodhound_api_key_token?: InputMaybe<Scalars['String']['input']>;
  bloodhound_api_root_url?: InputMaybe<Scalars['String']['input']>;
  bloodhound_results?: InputMaybe<Scalars['jsonb']['input']>;
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  codename?: InputMaybe<Scalars['String']['input']>;
  collab_note?: InputMaybe<Scalars['String']['input']>;
  complete?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  endDate?: InputMaybe<Scalars['date']['input']>;
  endTime?: InputMaybe<Scalars['time']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  projectTypeId?: InputMaybe<Scalars['bigint']['input']>;
  slackChannel?: InputMaybe<Scalars['String']['input']>;
  startDate?: InputMaybe<Scalars['date']['input']>;
  startTime?: InputMaybe<Scalars['time']['input']>;
  timezone?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Project_Sum_Fields = {
  __typename?: 'project_sum_fields';
  clientId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  projectTypeId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "rolodex_project" */
export type Project_Sum_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectTypeId?: InputMaybe<Order_By>;
};

/** update columns of table "rolodex_project" */
export enum Project_Update_Column {
  /** column name */
  BloodhoundApiKeyId = 'bloodhound_api_key_id',
  /** column name */
  BloodhoundApiKeyToken = 'bloodhound_api_key_token',
  /** column name */
  BloodhoundApiRootUrl = 'bloodhound_api_root_url',
  /** column name */
  BloodhoundResults = 'bloodhound_results',
  /** column name */
  ClientId = 'clientId',
  /** column name */
  Codename = 'codename',
  /** column name */
  CollabNote = 'collab_note',
  /** column name */
  Complete = 'complete',
  /** column name */
  Description = 'description',
  /** column name */
  EndDate = 'endDate',
  /** column name */
  EndTime = 'endTime',
  /** column name */
  ExtraFields = 'extraFields',
  /** column name */
  Id = 'id',
  /** column name */
  OperatorId = 'operatorId',
  /** column name */
  ProjectTypeId = 'projectTypeId',
  /** column name */
  SlackChannel = 'slackChannel',
  /** column name */
  StartDate = 'startDate',
  /** column name */
  StartTime = 'startTime',
  /** column name */
  Timezone = 'timezone'
}

export type Project_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Project_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Project_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Project_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Project_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Project_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Project_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Project_Set_Input>;
  /** filter the rows which have to be updated */
  where: Project_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Project_Var_Pop_Fields = {
  __typename?: 'project_var_pop_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectTypeId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "rolodex_project" */
export type Project_Var_Pop_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectTypeId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Project_Var_Samp_Fields = {
  __typename?: 'project_var_samp_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectTypeId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "rolodex_project" */
export type Project_Var_Samp_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectTypeId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Project_Variance_Fields = {
  __typename?: 'project_variance_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectTypeId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "rolodex_project" */
export type Project_Variance_Order_By = {
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectTypeId?: InputMaybe<Order_By>;
};

export type Query_Root = {
  __typename?: 'query_root';
  /** fetch data from the table: "shepherd_activitytype" */
  activityType: Array<ActivityType>;
  /** fetch aggregated fields from the table: "shepherd_activitytype" */
  activityType_aggregate: ActivityType_Aggregate;
  /** fetch data from the table: "shepherd_activitytype" using primary key columns */
  activityType_by_pk?: Maybe<ActivityType>;
  /** fetch data from the table: "reporting_archive" */
  archive: Array<Archive>;
  /** fetch aggregated fields from the table: "reporting_archive" */
  archive_aggregate: Archive_Aggregate;
  /** fetch data from the table: "reporting_archive" using primary key columns */
  archive_by_pk?: Maybe<Archive>;
  /** fetch data from the table: "auth_permission" */
  authPermission: Array<AuthPermission>;
  /** fetch aggregated fields from the table: "auth_permission" */
  authPermission_aggregate: AuthPermission_Aggregate;
  /** fetch data from the table: "auth_permission" using primary key columns */
  authPermission_by_pk?: Maybe<AuthPermission>;
  /** An array relationship */
  auxServerAddresses: Array<AuxServerAddresses>;
  /** An aggregate relationship */
  auxServerAddresses_aggregate: AuxServerAddresses_Aggregate;
  /** fetch data from the table: "shepherd_auxserveraddress" using primary key columns */
  auxServerAddresses_by_pk?: Maybe<AuxServerAddresses>;
  /** fetch data from the table: "rolodex_client" */
  client: Array<Client>;
  /** fetch data from the table: "rolodex_clientcontact" */
  clientContact: Array<ClientContact>;
  /** fetch aggregated fields from the table: "rolodex_clientcontact" */
  clientContact_aggregate: ClientContact_Aggregate;
  /** fetch data from the table: "rolodex_clientcontact" using primary key columns */
  clientContact_by_pk?: Maybe<ClientContact>;
  /** fetch data from the table: "rolodex_clientinvite" */
  clientInvite: Array<ClientInvite>;
  /** fetch aggregated fields from the table: "rolodex_clientinvite" */
  clientInvite_aggregate: ClientInvite_Aggregate;
  /** fetch data from the table: "rolodex_clientinvite" using primary key columns */
  clientInvite_by_pk?: Maybe<ClientInvite>;
  /** fetch data from the table: "rolodex_clientnote" */
  clientNote: Array<ClientNote>;
  /** fetch aggregated fields from the table: "rolodex_clientnote" */
  clientNote_aggregate: ClientNote_Aggregate;
  /** fetch data from the table: "rolodex_clientnote" using primary key columns */
  clientNote_by_pk?: Maybe<ClientNote>;
  /** fetch aggregated fields from the table: "rolodex_client" */
  client_aggregate: Client_Aggregate;
  /** fetch data from the table: "rolodex_client" using primary key columns */
  client_by_pk?: Maybe<Client>;
  /** fetch data from the table: "shepherd_transientserver" */
  cloudServer: Array<CloudServer>;
  /** fetch aggregated fields from the table: "shepherd_transientserver" */
  cloudServer_aggregate: CloudServer_Aggregate;
  /** fetch data from the table: "shepherd_transientserver" using primary key columns */
  cloudServer_by_pk?: Maybe<CloudServer>;
  /** fetch data from the table: "commandcenter_companyinformation" */
  companyInfo: Array<CompanyInfo>;
  /** fetch aggregated fields from the table: "commandcenter_companyinformation" */
  companyInfo_aggregate: CompanyInfo_Aggregate;
  /** fetch data from the table: "commandcenter_companyinformation" using primary key columns */
  companyInfo_by_pk?: Maybe<CompanyInfo>;
  /** fetch data from the table: "rolodex_deconfliction" */
  deconfliction: Array<Deconfliction>;
  /** fetch data from the table: "rolodex_deconflictionstatus" */
  deconflictionStatus: Array<DeconflictionStatus>;
  /** fetch aggregated fields from the table: "rolodex_deconflictionstatus" */
  deconflictionStatus_aggregate: DeconflictionStatus_Aggregate;
  /** fetch data from the table: "rolodex_deconflictionstatus" using primary key columns */
  deconflictionStatus_by_pk?: Maybe<DeconflictionStatus>;
  /** fetch aggregated fields from the table: "rolodex_deconfliction" */
  deconfliction_aggregate: Deconfliction_Aggregate;
  /** fetch data from the table: "rolodex_deconfliction" using primary key columns */
  deconfliction_by_pk?: Maybe<Deconfliction>;
  /** fetch data from the table: "django_content_type" */
  djangoContentType: Array<DjangoContentType>;
  /** fetch aggregated fields from the table: "django_content_type" */
  djangoContentType_aggregate: DjangoContentType_Aggregate;
  /** fetch data from the table: "django_content_type" using primary key columns */
  djangoContentType_by_pk?: Maybe<DjangoContentType>;
  /** fetch data from the table: "reporting_doctype" */
  docType: Array<DocType>;
  /** fetch aggregated fields from the table: "reporting_doctype" */
  docType_aggregate: DocType_Aggregate;
  /** fetch data from the table: "reporting_doctype" using primary key columns */
  docType_by_pk?: Maybe<DocType>;
  /** fetch data from the table: "shepherd_domain" */
  domain: Array<Domain>;
  /** fetch data from the table: "shepherd_history" */
  domainCheckout: Array<DomainCheckout>;
  /** fetch aggregated fields from the table: "shepherd_history" */
  domainCheckout_aggregate: DomainCheckout_Aggregate;
  /** fetch data from the table: "shepherd_history" using primary key columns */
  domainCheckout_by_pk?: Maybe<DomainCheckout>;
  /** fetch data from the table: "shepherd_domainnote" */
  domainNote: Array<DomainNote>;
  /** fetch aggregated fields from the table: "shepherd_domainnote" */
  domainNote_aggregate: DomainNote_Aggregate;
  /** fetch data from the table: "shepherd_domainnote" using primary key columns */
  domainNote_by_pk?: Maybe<DomainNote>;
  /** fetch data from the table: "shepherd_domainserverconnection" */
  domainServerConnection: Array<DomainServerConnection>;
  /** fetch aggregated fields from the table: "shepherd_domainserverconnection" */
  domainServerConnection_aggregate: DomainServerConnection_Aggregate;
  /** fetch data from the table: "shepherd_domainserverconnection" using primary key columns */
  domainServerConnection_by_pk?: Maybe<DomainServerConnection>;
  /** fetch data from the table: "shepherd_domainstatus" */
  domainStatus: Array<DomainStatus>;
  /** fetch aggregated fields from the table: "shepherd_domainstatus" */
  domainStatus_aggregate: DomainStatus_Aggregate;
  /** fetch data from the table: "shepherd_domainstatus" using primary key columns */
  domainStatus_by_pk?: Maybe<DomainStatus>;
  /** fetch aggregated fields from the table: "shepherd_domain" */
  domain_aggregate: Domain_Aggregate;
  /** fetch data from the table: "shepherd_domain" using primary key columns */
  domain_by_pk?: Maybe<Domain>;
  /** An array relationship */
  evidence: Array<Evidence>;
  /** An aggregate relationship */
  evidence_aggregate: Evidence_Aggregate;
  /** fetch data from the table: "reporting_evidence" using primary key columns */
  evidence_by_pk?: Maybe<Evidence>;
  /** fetch data from the table: "commandcenter_extrafieldmodel" */
  extraFieldModel: Array<ExtraFieldModel>;
  /** fetch aggregated fields from the table: "commandcenter_extrafieldmodel" */
  extraFieldModel_aggregate: ExtraFieldModel_Aggregate;
  /** fetch data from the table: "commandcenter_extrafieldmodel" using primary key columns */
  extraFieldModel_by_pk?: Maybe<ExtraFieldModel>;
  /** fetch data from the table: "commandcenter_extrafieldspec" */
  extraFieldSpec: Array<ExtraFieldSpec>;
  /** fetch aggregated fields from the table: "commandcenter_extrafieldspec" */
  extraFieldSpec_aggregate: ExtraFieldSpec_Aggregate;
  /** fetch data from the table: "commandcenter_extrafieldspec" using primary key columns */
  extraFieldSpec_by_pk?: Maybe<ExtraFieldSpec>;
  /** fetch data from the table: "reporting_finding" */
  finding: Array<Finding>;
  /** fetch data from the table: "reporting_findingnote" */
  findingNote: Array<FindingNote>;
  /** fetch aggregated fields from the table: "reporting_findingnote" */
  findingNote_aggregate: FindingNote_Aggregate;
  /** fetch data from the table: "reporting_findingnote" using primary key columns */
  findingNote_by_pk?: Maybe<FindingNote>;
  /** fetch data from the table: "reporting_severity" */
  findingSeverity: Array<FindingSeverity>;
  /** fetch aggregated fields from the table: "reporting_severity" */
  findingSeverity_aggregate: FindingSeverity_Aggregate;
  /** fetch data from the table: "reporting_severity" using primary key columns */
  findingSeverity_by_pk?: Maybe<FindingSeverity>;
  /** fetch data from the table: "reporting_findingtype" */
  findingType: Array<FindingType>;
  /** fetch aggregated fields from the table: "reporting_findingtype" */
  findingType_aggregate: FindingType_Aggregate;
  /** fetch data from the table: "reporting_findingtype" using primary key columns */
  findingType_by_pk?: Maybe<FindingType>;
  /** fetch aggregated fields from the table: "reporting_finding" */
  finding_aggregate: Finding_Aggregate;
  /** fetch data from the table: "reporting_finding" using primary key columns */
  finding_by_pk?: Maybe<Finding>;
  /** FindingsByTag */
  finding_by_tag?: Maybe<Array<GetFindingByTagsResponse>>;
  /** Fetch the extra field spec for a model */
  getExtraFieldSpec?: Maybe<ExtraFieldSpecOutput>;
  /** fetch data from the table: "auth_group" */
  group: Array<Group>;
  /** fetch data from the table: "auth_group_permissions" */
  groupPermission: Array<GroupPermission>;
  /** fetch aggregated fields from the table: "auth_group_permissions" */
  groupPermission_aggregate: GroupPermission_Aggregate;
  /** fetch data from the table: "auth_group_permissions" using primary key columns */
  groupPermission_by_pk?: Maybe<GroupPermission>;
  /** fetch aggregated fields from the table: "auth_group" */
  group_aggregate: Group_Aggregate;
  /** fetch data from the table: "auth_group" using primary key columns */
  group_by_pk?: Maybe<Group>;
  /** fetch data from the table: "shepherd_healthstatus" */
  healthStatus: Array<HealthStatus>;
  /** fetch aggregated fields from the table: "shepherd_healthstatus" */
  healthStatus_aggregate: HealthStatus_Aggregate;
  /** fetch data from the table: "shepherd_healthstatus" using primary key columns */
  healthStatus_by_pk?: Maybe<HealthStatus>;
  /** fetch data from the table: "rolodex_projectobjective" */
  objective: Array<Objective>;
  /** fetch data from the table: "rolodex_objectivepriority" */
  objectivePriority: Array<ObjectivePriority>;
  /** fetch aggregated fields from the table: "rolodex_objectivepriority" */
  objectivePriority_aggregate: ObjectivePriority_Aggregate;
  /** fetch data from the table: "rolodex_objectivepriority" using primary key columns */
  objectivePriority_by_pk?: Maybe<ObjectivePriority>;
  /** fetch data from the table: "rolodex_objectivestatus" */
  objectiveStatus: Array<ObjectiveStatus>;
  /** fetch aggregated fields from the table: "rolodex_objectivestatus" */
  objectiveStatus_aggregate: ObjectiveStatus_Aggregate;
  /** fetch data from the table: "rolodex_objectivestatus" using primary key columns */
  objectiveStatus_by_pk?: Maybe<ObjectiveStatus>;
  /** fetch data from the table: "rolodex_projectsubtask" */
  objectiveSubTask: Array<ObjectiveSubTask>;
  /** fetch aggregated fields from the table: "rolodex_projectsubtask" */
  objectiveSubTask_aggregate: ObjectiveSubTask_Aggregate;
  /** fetch data from the table: "rolodex_projectsubtask" using primary key columns */
  objectiveSubTask_by_pk?: Maybe<ObjectiveSubTask>;
  /** fetch aggregated fields from the table: "rolodex_projectobjective" */
  objective_aggregate: Objective_Aggregate;
  /** fetch data from the table: "rolodex_projectobjective" using primary key columns */
  objective_by_pk?: Maybe<Objective>;
  /** ObservationsByTag */
  observation_by_tag?: Maybe<Array<GetObservationByTagsResponse>>;
  /** fetch data from the table: "oplog_oplog" */
  oplog: Array<Oplog>;
  /** fetch data from the table: "oplog_oplogentry" */
  oplogEntry: Array<OplogEntry>;
  /** fetch aggregated fields from the table: "oplog_oplogentry" */
  oplogEntry_aggregate: OplogEntry_Aggregate;
  /** fetch data from the table: "oplog_oplogentry" using primary key columns */
  oplogEntry_by_pk?: Maybe<OplogEntry>;
  oplogEntry_by_tag?: Maybe<Array<GetOplogEntryByTagsResponse>>;
  /** fetch aggregated fields from the table: "oplog_oplog" */
  oplog_aggregate: Oplog_Aggregate;
  /** fetch data from the table: "oplog_oplog" using primary key columns */
  oplog_by_pk?: Maybe<Oplog>;
  /** fetch data from the table: "rolodex_project" */
  project: Array<Project>;
  /** fetch data from the table: "rolodex_projectassignment" */
  projectAssignment: Array<ProjectAssignment>;
  /** fetch aggregated fields from the table: "rolodex_projectassignment" */
  projectAssignment_aggregate: ProjectAssignment_Aggregate;
  /** fetch data from the table: "rolodex_projectassignment" using primary key columns */
  projectAssignment_by_pk?: Maybe<ProjectAssignment>;
  /** fetch data from the table: "rolodex_projectcontact" */
  projectContact: Array<ProjectContact>;
  /** fetch aggregated fields from the table: "rolodex_projectcontact" */
  projectContact_aggregate: ProjectContact_Aggregate;
  /** fetch data from the table: "rolodex_projectcontact" using primary key columns */
  projectContact_by_pk?: Maybe<ProjectContact>;
  /** fetch data from the table: "rolodex_projectinvite" */
  projectInvite: Array<ProjectInvite>;
  /** fetch aggregated fields from the table: "rolodex_projectinvite" */
  projectInvite_aggregate: ProjectInvite_Aggregate;
  /** fetch data from the table: "rolodex_projectinvite" using primary key columns */
  projectInvite_by_pk?: Maybe<ProjectInvite>;
  /** fetch data from the table: "rolodex_projectnote" */
  projectNote: Array<ProjectNote>;
  /** fetch aggregated fields from the table: "rolodex_projectnote" */
  projectNote_aggregate: ProjectNote_Aggregate;
  /** fetch data from the table: "rolodex_projectnote" using primary key columns */
  projectNote_by_pk?: Maybe<ProjectNote>;
  /** fetch data from the table: "rolodex_projectrole" */
  projectRole: Array<ProjectRole>;
  /** fetch aggregated fields from the table: "rolodex_projectrole" */
  projectRole_aggregate: ProjectRole_Aggregate;
  /** fetch data from the table: "rolodex_projectrole" using primary key columns */
  projectRole_by_pk?: Maybe<ProjectRole>;
  /** fetch data from the table: "rolodex_projecttype" */
  projectType: Array<ProjectType>;
  /** fetch aggregated fields from the table: "rolodex_projecttype" */
  projectType_aggregate: ProjectType_Aggregate;
  /** fetch data from the table: "rolodex_projecttype" using primary key columns */
  projectType_by_pk?: Maybe<ProjectType>;
  /** fetch aggregated fields from the table: "rolodex_project" */
  project_aggregate: Project_Aggregate;
  /** fetch data from the table: "rolodex_project" using primary key columns */
  project_by_pk?: Maybe<Project>;
  /** fetch data from the table: "reporting_report" */
  report: Array<Report>;
  /** fetch data from the table: "commandcenter_reportconfiguration" */
  reportConfiguration: Array<ReportConfiguration>;
  /** fetch aggregated fields from the table: "commandcenter_reportconfiguration" */
  reportConfiguration_aggregate: ReportConfiguration_Aggregate;
  /** fetch data from the table: "commandcenter_reportconfiguration" using primary key columns */
  reportConfiguration_by_pk?: Maybe<ReportConfiguration>;
  /** fetch aggregated fields from the table: "reporting_report" */
  report_aggregate: Report_Aggregate;
  /** fetch data from the table: "reporting_report" using primary key columns */
  report_by_pk?: Maybe<Report>;
  /** fetch data from the table: "reporting_reportfindinglink" */
  reportedFinding: Array<ReportedFinding>;
  /** fetch data from the table: "reporting_localfindingnote" */
  reportedFindingNote: Array<ReportedFindingNote>;
  /** fetch aggregated fields from the table: "reporting_localfindingnote" */
  reportedFindingNote_aggregate: ReportedFindingNote_Aggregate;
  /** fetch data from the table: "reporting_localfindingnote" using primary key columns */
  reportedFindingNote_by_pk?: Maybe<ReportedFindingNote>;
  /** fetch aggregated fields from the table: "reporting_reportfindinglink" */
  reportedFinding_aggregate: ReportedFinding_Aggregate;
  /** fetch data from the table: "reporting_reportfindinglink" using primary key columns */
  reportedFinding_by_pk?: Maybe<ReportedFinding>;
  reportedFinding_by_tag?: Maybe<Array<GetReportFindingByTagsResponse>>;
  /** ReportObservationsByTag */
  reportedObservation_by_tag?: Maybe<Array<GetReportObservationByTagsResponse>>;
  /** fetch data from the table: "reporting_observation" */
  reporting_observation: Array<Reporting_Observation>;
  /** fetch aggregated fields from the table: "reporting_observation" */
  reporting_observation_aggregate: Reporting_Observation_Aggregate;
  /** fetch data from the table: "reporting_observation" using primary key columns */
  reporting_observation_by_pk?: Maybe<Reporting_Observation>;
  /** fetch data from the table: "reporting_reportobservationlink" */
  reporting_reportobservationlink: Array<Reporting_Reportobservationlink>;
  /** fetch aggregated fields from the table: "reporting_reportobservationlink" */
  reporting_reportobservationlink_aggregate: Reporting_Reportobservationlink_Aggregate;
  /** fetch data from the table: "reporting_reportobservationlink" using primary key columns */
  reporting_reportobservationlink_by_pk?: Maybe<Reporting_Reportobservationlink>;
  /** fetch data from the table: "rolodex_projectscope" */
  scope: Array<Scope>;
  /** fetch aggregated fields from the table: "rolodex_projectscope" */
  scope_aggregate: Scope_Aggregate;
  /** fetch data from the table: "rolodex_projectscope" using primary key columns */
  scope_by_pk?: Maybe<Scope>;
  /** fetch data from the table: "shepherd_serverhistory" */
  serverCheckout: Array<ServerCheckout>;
  /** fetch aggregated fields from the table: "shepherd_serverhistory" */
  serverCheckout_aggregate: ServerCheckout_Aggregate;
  /** fetch data from the table: "shepherd_serverhistory" using primary key columns */
  serverCheckout_by_pk?: Maybe<ServerCheckout>;
  /** fetch data from the table: "shepherd_servernote" */
  serverNote: Array<ServerNote>;
  /** fetch aggregated fields from the table: "shepherd_servernote" */
  serverNote_aggregate: ServerNote_Aggregate;
  /** fetch data from the table: "shepherd_servernote" using primary key columns */
  serverNote_by_pk?: Maybe<ServerNote>;
  /** fetch data from the table: "shepherd_serverprovider" */
  serverProvider: Array<ServerProvider>;
  /** fetch aggregated fields from the table: "shepherd_serverprovider" */
  serverProvider_aggregate: ServerProvider_Aggregate;
  /** fetch data from the table: "shepherd_serverprovider" using primary key columns */
  serverProvider_by_pk?: Maybe<ServerProvider>;
  /** fetch data from the table: "shepherd_serverrole" */
  serverRole: Array<ServerRole>;
  /** fetch aggregated fields from the table: "shepherd_serverrole" */
  serverRole_aggregate: ServerRole_Aggregate;
  /** fetch data from the table: "shepherd_serverrole" using primary key columns */
  serverRole_by_pk?: Maybe<ServerRole>;
  /** fetch data from the table: "shepherd_serverstatus" */
  serverStatus: Array<ServerStatus>;
  /** fetch aggregated fields from the table: "shepherd_serverstatus" */
  serverStatus_aggregate: ServerStatus_Aggregate;
  /** fetch data from the table: "shepherd_serverstatus" using primary key columns */
  serverStatus_by_pk?: Maybe<ServerStatus>;
  /** fetch data from the table: "shepherd_staticserver" */
  staticServer: Array<StaticServer>;
  /** fetch aggregated fields from the table: "shepherd_staticserver" */
  staticServer_aggregate: StaticServer_Aggregate;
  /** fetch data from the table: "shepherd_staticserver" using primary key columns */
  staticServer_by_pk?: Maybe<StaticServer>;
  /** fetch data from the table: "taggit_tag" */
  tag: Array<Tag>;
  /** fetch aggregated fields from the table: "taggit_tag" */
  tag_aggregate: Tag_Aggregate;
  /** fetch data from the table: "taggit_tag" using primary key columns */
  tag_by_pk?: Maybe<Tag>;
  /** An array relationship */
  taggedItem: Array<TaggedItem>;
  /** An aggregate relationship */
  taggedItem_aggregate: TaggedItem_Aggregate;
  /** fetch data from the table: "taggit_taggeditem" using primary key columns */
  taggedItem_by_pk?: Maybe<TaggedItem>;
  /** Get Tags */
  tags: TagsResult;
  /** fetch data from the table: "rolodex_projecttarget" */
  target: Array<Target>;
  /** fetch aggregated fields from the table: "rolodex_projecttarget" */
  target_aggregate: Target_Aggregate;
  /** fetch data from the table: "rolodex_projecttarget" using primary key columns */
  target_by_pk?: Maybe<Target>;
  /** fetch data from the table: "django_q_task" */
  task: Array<Task>;
  /** fetch aggregated fields from the table: "django_q_task" */
  task_aggregate: Task_Aggregate;
  /** fetch data from the table: "django_q_task" using primary key columns */
  task_by_pk?: Maybe<Task>;
  /** fetch data from the table: "reporting_reporttemplate" */
  template: Array<Template>;
  /** fetch aggregated fields from the table: "reporting_reporttemplate" */
  template_aggregate: Template_Aggregate;
  /** fetch data from the table: "reporting_reporttemplate" using primary key columns */
  template_by_pk?: Maybe<Template>;
  /** fetch data from the table: "users_user" */
  user: Array<User>;
  /** fetch data from the table: "users_user_groups" */
  userGroup: Array<UserGroup>;
  /** fetch aggregated fields from the table: "users_user_groups" */
  userGroup_aggregate: UserGroup_Aggregate;
  /** fetch data from the table: "users_user_groups" using primary key columns */
  userGroup_by_pk?: Maybe<UserGroup>;
  /** fetch data from the table: "users_user_user_permissions" */
  userPermission: Array<UserPermission>;
  /** fetch aggregated fields from the table: "users_user_user_permissions" */
  userPermission_aggregate: UserPermission_Aggregate;
  /** fetch data from the table: "users_user_user_permissions" using primary key columns */
  userPermission_by_pk?: Maybe<UserPermission>;
  /** fetch data from the table: "home_userprofile" */
  userProfile: Array<UserProfile>;
  /** fetch aggregated fields from the table: "home_userprofile" */
  userProfile_aggregate: UserProfile_Aggregate;
  /** fetch data from the table: "home_userprofile" using primary key columns */
  userProfile_by_pk?: Maybe<UserProfile>;
  /** fetch aggregated fields from the table: "users_user" */
  user_aggregate: User_Aggregate;
  /** fetch data from the table: "users_user" using primary key columns */
  user_by_pk?: Maybe<User>;
  /** fetch data from the table: "rolodex_whitecard" */
  whitecard: Array<Whitecard>;
  /** fetch aggregated fields from the table: "rolodex_whitecard" */
  whitecard_aggregate: Whitecard_Aggregate;
  /** fetch data from the table: "rolodex_whitecard" using primary key columns */
  whitecard_by_pk?: Maybe<Whitecard>;
  /** User `whoami` query for JWT */
  whoami?: Maybe<WhoamiOutput>;
  /** fetch data from the table: "shepherd_whoisstatus" */
  whoisStatus: Array<WhoisStatus>;
  /** fetch aggregated fields from the table: "shepherd_whoisstatus" */
  whoisStatus_aggregate: WhoisStatus_Aggregate;
  /** fetch data from the table: "shepherd_whoisstatus" using primary key columns */
  whoisStatus_by_pk?: Maybe<WhoisStatus>;
};


export type Query_RootActivityTypeArgs = {
  distinct_on?: InputMaybe<Array<ActivityType_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ActivityType_Order_By>>;
  where?: InputMaybe<ActivityType_Bool_Exp>;
};


export type Query_RootActivityType_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ActivityType_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ActivityType_Order_By>>;
  where?: InputMaybe<ActivityType_Bool_Exp>;
};


export type Query_RootActivityType_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootArchiveArgs = {
  distinct_on?: InputMaybe<Array<Archive_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Archive_Order_By>>;
  where?: InputMaybe<Archive_Bool_Exp>;
};


export type Query_RootArchive_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Archive_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Archive_Order_By>>;
  where?: InputMaybe<Archive_Bool_Exp>;
};


export type Query_RootArchive_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootAuthPermissionArgs = {
  distinct_on?: InputMaybe<Array<AuthPermission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AuthPermission_Order_By>>;
  where?: InputMaybe<AuthPermission_Bool_Exp>;
};


export type Query_RootAuthPermission_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AuthPermission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AuthPermission_Order_By>>;
  where?: InputMaybe<AuthPermission_Bool_Exp>;
};


export type Query_RootAuthPermission_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootAuxServerAddressesArgs = {
  distinct_on?: InputMaybe<Array<AuxServerAddresses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AuxServerAddresses_Order_By>>;
  where?: InputMaybe<AuxServerAddresses_Bool_Exp>;
};


export type Query_RootAuxServerAddresses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AuxServerAddresses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AuxServerAddresses_Order_By>>;
  where?: InputMaybe<AuxServerAddresses_Bool_Exp>;
};


export type Query_RootAuxServerAddresses_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootClientArgs = {
  distinct_on?: InputMaybe<Array<Client_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Client_Order_By>>;
  where?: InputMaybe<Client_Bool_Exp>;
};


export type Query_RootClientContactArgs = {
  distinct_on?: InputMaybe<Array<ClientContact_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientContact_Order_By>>;
  where?: InputMaybe<ClientContact_Bool_Exp>;
};


export type Query_RootClientContact_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ClientContact_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientContact_Order_By>>;
  where?: InputMaybe<ClientContact_Bool_Exp>;
};


export type Query_RootClientContact_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootClientInviteArgs = {
  distinct_on?: InputMaybe<Array<ClientInvite_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientInvite_Order_By>>;
  where?: InputMaybe<ClientInvite_Bool_Exp>;
};


export type Query_RootClientInvite_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ClientInvite_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientInvite_Order_By>>;
  where?: InputMaybe<ClientInvite_Bool_Exp>;
};


export type Query_RootClientInvite_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootClientNoteArgs = {
  distinct_on?: InputMaybe<Array<ClientNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientNote_Order_By>>;
  where?: InputMaybe<ClientNote_Bool_Exp>;
};


export type Query_RootClientNote_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ClientNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientNote_Order_By>>;
  where?: InputMaybe<ClientNote_Bool_Exp>;
};


export type Query_RootClientNote_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootClient_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Client_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Client_Order_By>>;
  where?: InputMaybe<Client_Bool_Exp>;
};


export type Query_RootClient_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootCloudServerArgs = {
  distinct_on?: InputMaybe<Array<CloudServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CloudServer_Order_By>>;
  where?: InputMaybe<CloudServer_Bool_Exp>;
};


export type Query_RootCloudServer_AggregateArgs = {
  distinct_on?: InputMaybe<Array<CloudServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CloudServer_Order_By>>;
  where?: InputMaybe<CloudServer_Bool_Exp>;
};


export type Query_RootCloudServer_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootCompanyInfoArgs = {
  distinct_on?: InputMaybe<Array<CompanyInfo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CompanyInfo_Order_By>>;
  where?: InputMaybe<CompanyInfo_Bool_Exp>;
};


export type Query_RootCompanyInfo_AggregateArgs = {
  distinct_on?: InputMaybe<Array<CompanyInfo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CompanyInfo_Order_By>>;
  where?: InputMaybe<CompanyInfo_Bool_Exp>;
};


export type Query_RootCompanyInfo_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootDeconflictionArgs = {
  distinct_on?: InputMaybe<Array<Deconfliction_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Deconfliction_Order_By>>;
  where?: InputMaybe<Deconfliction_Bool_Exp>;
};


export type Query_RootDeconflictionStatusArgs = {
  distinct_on?: InputMaybe<Array<DeconflictionStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DeconflictionStatus_Order_By>>;
  where?: InputMaybe<DeconflictionStatus_Bool_Exp>;
};


export type Query_RootDeconflictionStatus_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DeconflictionStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DeconflictionStatus_Order_By>>;
  where?: InputMaybe<DeconflictionStatus_Bool_Exp>;
};


export type Query_RootDeconflictionStatus_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootDeconfliction_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Deconfliction_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Deconfliction_Order_By>>;
  where?: InputMaybe<Deconfliction_Bool_Exp>;
};


export type Query_RootDeconfliction_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootDjangoContentTypeArgs = {
  distinct_on?: InputMaybe<Array<DjangoContentType_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DjangoContentType_Order_By>>;
  where?: InputMaybe<DjangoContentType_Bool_Exp>;
};


export type Query_RootDjangoContentType_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DjangoContentType_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DjangoContentType_Order_By>>;
  where?: InputMaybe<DjangoContentType_Bool_Exp>;
};


export type Query_RootDjangoContentType_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootDocTypeArgs = {
  distinct_on?: InputMaybe<Array<DocType_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DocType_Order_By>>;
  where?: InputMaybe<DocType_Bool_Exp>;
};


export type Query_RootDocType_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DocType_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DocType_Order_By>>;
  where?: InputMaybe<DocType_Bool_Exp>;
};


export type Query_RootDocType_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootDomainArgs = {
  distinct_on?: InputMaybe<Array<Domain_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Domain_Order_By>>;
  where?: InputMaybe<Domain_Bool_Exp>;
};


export type Query_RootDomainCheckoutArgs = {
  distinct_on?: InputMaybe<Array<DomainCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainCheckout_Order_By>>;
  where?: InputMaybe<DomainCheckout_Bool_Exp>;
};


export type Query_RootDomainCheckout_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DomainCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainCheckout_Order_By>>;
  where?: InputMaybe<DomainCheckout_Bool_Exp>;
};


export type Query_RootDomainCheckout_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootDomainNoteArgs = {
  distinct_on?: InputMaybe<Array<DomainNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainNote_Order_By>>;
  where?: InputMaybe<DomainNote_Bool_Exp>;
};


export type Query_RootDomainNote_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DomainNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainNote_Order_By>>;
  where?: InputMaybe<DomainNote_Bool_Exp>;
};


export type Query_RootDomainNote_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootDomainServerConnectionArgs = {
  distinct_on?: InputMaybe<Array<DomainServerConnection_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainServerConnection_Order_By>>;
  where?: InputMaybe<DomainServerConnection_Bool_Exp>;
};


export type Query_RootDomainServerConnection_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DomainServerConnection_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainServerConnection_Order_By>>;
  where?: InputMaybe<DomainServerConnection_Bool_Exp>;
};


export type Query_RootDomainServerConnection_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootDomainStatusArgs = {
  distinct_on?: InputMaybe<Array<DomainStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainStatus_Order_By>>;
  where?: InputMaybe<DomainStatus_Bool_Exp>;
};


export type Query_RootDomainStatus_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DomainStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainStatus_Order_By>>;
  where?: InputMaybe<DomainStatus_Bool_Exp>;
};


export type Query_RootDomainStatus_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootDomain_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Domain_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Domain_Order_By>>;
  where?: InputMaybe<Domain_Bool_Exp>;
};


export type Query_RootDomain_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootEvidenceArgs = {
  distinct_on?: InputMaybe<Array<Evidence_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evidence_Order_By>>;
  where?: InputMaybe<Evidence_Bool_Exp>;
};


export type Query_RootEvidence_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Evidence_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evidence_Order_By>>;
  where?: InputMaybe<Evidence_Bool_Exp>;
};


export type Query_RootEvidence_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootExtraFieldModelArgs = {
  distinct_on?: InputMaybe<Array<ExtraFieldModel_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ExtraFieldModel_Order_By>>;
  where?: InputMaybe<ExtraFieldModel_Bool_Exp>;
};


export type Query_RootExtraFieldModel_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ExtraFieldModel_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ExtraFieldModel_Order_By>>;
  where?: InputMaybe<ExtraFieldModel_Bool_Exp>;
};


export type Query_RootExtraFieldModel_By_PkArgs = {
  modelInternalName: Scalars['String']['input'];
};


export type Query_RootExtraFieldSpecArgs = {
  distinct_on?: InputMaybe<Array<ExtraFieldSpec_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ExtraFieldSpec_Order_By>>;
  where?: InputMaybe<ExtraFieldSpec_Bool_Exp>;
};


export type Query_RootExtraFieldSpec_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ExtraFieldSpec_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ExtraFieldSpec_Order_By>>;
  where?: InputMaybe<ExtraFieldSpec_Bool_Exp>;
};


export type Query_RootExtraFieldSpec_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootFindingArgs = {
  distinct_on?: InputMaybe<Array<Finding_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Finding_Order_By>>;
  where?: InputMaybe<Finding_Bool_Exp>;
};


export type Query_RootFindingNoteArgs = {
  distinct_on?: InputMaybe<Array<FindingNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<FindingNote_Order_By>>;
  where?: InputMaybe<FindingNote_Bool_Exp>;
};


export type Query_RootFindingNote_AggregateArgs = {
  distinct_on?: InputMaybe<Array<FindingNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<FindingNote_Order_By>>;
  where?: InputMaybe<FindingNote_Bool_Exp>;
};


export type Query_RootFindingNote_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootFindingSeverityArgs = {
  distinct_on?: InputMaybe<Array<FindingSeverity_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<FindingSeverity_Order_By>>;
  where?: InputMaybe<FindingSeverity_Bool_Exp>;
};


export type Query_RootFindingSeverity_AggregateArgs = {
  distinct_on?: InputMaybe<Array<FindingSeverity_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<FindingSeverity_Order_By>>;
  where?: InputMaybe<FindingSeverity_Bool_Exp>;
};


export type Query_RootFindingSeverity_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootFindingTypeArgs = {
  distinct_on?: InputMaybe<Array<FindingType_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<FindingType_Order_By>>;
  where?: InputMaybe<FindingType_Bool_Exp>;
};


export type Query_RootFindingType_AggregateArgs = {
  distinct_on?: InputMaybe<Array<FindingType_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<FindingType_Order_By>>;
  where?: InputMaybe<FindingType_Bool_Exp>;
};


export type Query_RootFindingType_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootFinding_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Finding_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Finding_Order_By>>;
  where?: InputMaybe<Finding_Bool_Exp>;
};


export type Query_RootFinding_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootFinding_By_TagArgs = {
  tag: Scalars['String']['input'];
};


export type Query_RootGetExtraFieldSpecArgs = {
  model: Scalars['String']['input'];
};


export type Query_RootGroupArgs = {
  distinct_on?: InputMaybe<Array<Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Group_Order_By>>;
  where?: InputMaybe<Group_Bool_Exp>;
};


export type Query_RootGroupPermissionArgs = {
  distinct_on?: InputMaybe<Array<GroupPermission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<GroupPermission_Order_By>>;
  where?: InputMaybe<GroupPermission_Bool_Exp>;
};


export type Query_RootGroupPermission_AggregateArgs = {
  distinct_on?: InputMaybe<Array<GroupPermission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<GroupPermission_Order_By>>;
  where?: InputMaybe<GroupPermission_Bool_Exp>;
};


export type Query_RootGroupPermission_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootGroup_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Group_Order_By>>;
  where?: InputMaybe<Group_Bool_Exp>;
};


export type Query_RootGroup_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootHealthStatusArgs = {
  distinct_on?: InputMaybe<Array<HealthStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<HealthStatus_Order_By>>;
  where?: InputMaybe<HealthStatus_Bool_Exp>;
};


export type Query_RootHealthStatus_AggregateArgs = {
  distinct_on?: InputMaybe<Array<HealthStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<HealthStatus_Order_By>>;
  where?: InputMaybe<HealthStatus_Bool_Exp>;
};


export type Query_RootHealthStatus_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootObjectiveArgs = {
  distinct_on?: InputMaybe<Array<Objective_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Objective_Order_By>>;
  where?: InputMaybe<Objective_Bool_Exp>;
};


export type Query_RootObjectivePriorityArgs = {
  distinct_on?: InputMaybe<Array<ObjectivePriority_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ObjectivePriority_Order_By>>;
  where?: InputMaybe<ObjectivePriority_Bool_Exp>;
};


export type Query_RootObjectivePriority_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ObjectivePriority_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ObjectivePriority_Order_By>>;
  where?: InputMaybe<ObjectivePriority_Bool_Exp>;
};


export type Query_RootObjectivePriority_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootObjectiveStatusArgs = {
  distinct_on?: InputMaybe<Array<ObjectiveStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ObjectiveStatus_Order_By>>;
  where?: InputMaybe<ObjectiveStatus_Bool_Exp>;
};


export type Query_RootObjectiveStatus_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ObjectiveStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ObjectiveStatus_Order_By>>;
  where?: InputMaybe<ObjectiveStatus_Bool_Exp>;
};


export type Query_RootObjectiveStatus_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootObjectiveSubTaskArgs = {
  distinct_on?: InputMaybe<Array<ObjectiveSubTask_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ObjectiveSubTask_Order_By>>;
  where?: InputMaybe<ObjectiveSubTask_Bool_Exp>;
};


export type Query_RootObjectiveSubTask_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ObjectiveSubTask_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ObjectiveSubTask_Order_By>>;
  where?: InputMaybe<ObjectiveSubTask_Bool_Exp>;
};


export type Query_RootObjectiveSubTask_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootObjective_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Objective_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Objective_Order_By>>;
  where?: InputMaybe<Objective_Bool_Exp>;
};


export type Query_RootObjective_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootObservation_By_TagArgs = {
  tag: Scalars['String']['input'];
};


export type Query_RootOplogArgs = {
  distinct_on?: InputMaybe<Array<Oplog_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Oplog_Order_By>>;
  where?: InputMaybe<Oplog_Bool_Exp>;
};


export type Query_RootOplogEntryArgs = {
  distinct_on?: InputMaybe<Array<OplogEntry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OplogEntry_Order_By>>;
  where?: InputMaybe<OplogEntry_Bool_Exp>;
};


export type Query_RootOplogEntry_AggregateArgs = {
  distinct_on?: InputMaybe<Array<OplogEntry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OplogEntry_Order_By>>;
  where?: InputMaybe<OplogEntry_Bool_Exp>;
};


export type Query_RootOplogEntry_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootOplogEntry_By_TagArgs = {
  tag: Scalars['String']['input'];
};


export type Query_RootOplog_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Oplog_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Oplog_Order_By>>;
  where?: InputMaybe<Oplog_Bool_Exp>;
};


export type Query_RootOplog_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootProjectArgs = {
  distinct_on?: InputMaybe<Array<Project_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Order_By>>;
  where?: InputMaybe<Project_Bool_Exp>;
};


export type Query_RootProjectAssignmentArgs = {
  distinct_on?: InputMaybe<Array<ProjectAssignment_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectAssignment_Order_By>>;
  where?: InputMaybe<ProjectAssignment_Bool_Exp>;
};


export type Query_RootProjectAssignment_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ProjectAssignment_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectAssignment_Order_By>>;
  where?: InputMaybe<ProjectAssignment_Bool_Exp>;
};


export type Query_RootProjectAssignment_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootProjectContactArgs = {
  distinct_on?: InputMaybe<Array<ProjectContact_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectContact_Order_By>>;
  where?: InputMaybe<ProjectContact_Bool_Exp>;
};


export type Query_RootProjectContact_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ProjectContact_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectContact_Order_By>>;
  where?: InputMaybe<ProjectContact_Bool_Exp>;
};


export type Query_RootProjectContact_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootProjectInviteArgs = {
  distinct_on?: InputMaybe<Array<ProjectInvite_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectInvite_Order_By>>;
  where?: InputMaybe<ProjectInvite_Bool_Exp>;
};


export type Query_RootProjectInvite_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ProjectInvite_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectInvite_Order_By>>;
  where?: InputMaybe<ProjectInvite_Bool_Exp>;
};


export type Query_RootProjectInvite_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootProjectNoteArgs = {
  distinct_on?: InputMaybe<Array<ProjectNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectNote_Order_By>>;
  where?: InputMaybe<ProjectNote_Bool_Exp>;
};


export type Query_RootProjectNote_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ProjectNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectNote_Order_By>>;
  where?: InputMaybe<ProjectNote_Bool_Exp>;
};


export type Query_RootProjectNote_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootProjectRoleArgs = {
  distinct_on?: InputMaybe<Array<ProjectRole_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectRole_Order_By>>;
  where?: InputMaybe<ProjectRole_Bool_Exp>;
};


export type Query_RootProjectRole_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ProjectRole_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectRole_Order_By>>;
  where?: InputMaybe<ProjectRole_Bool_Exp>;
};


export type Query_RootProjectRole_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootProjectTypeArgs = {
  distinct_on?: InputMaybe<Array<ProjectType_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectType_Order_By>>;
  where?: InputMaybe<ProjectType_Bool_Exp>;
};


export type Query_RootProjectType_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ProjectType_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectType_Order_By>>;
  where?: InputMaybe<ProjectType_Bool_Exp>;
};


export type Query_RootProjectType_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootProject_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Order_By>>;
  where?: InputMaybe<Project_Bool_Exp>;
};


export type Query_RootProject_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootReportArgs = {
  distinct_on?: InputMaybe<Array<Report_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Report_Order_By>>;
  where?: InputMaybe<Report_Bool_Exp>;
};


export type Query_RootReportConfigurationArgs = {
  distinct_on?: InputMaybe<Array<ReportConfiguration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportConfiguration_Order_By>>;
  where?: InputMaybe<ReportConfiguration_Bool_Exp>;
};


export type Query_RootReportConfiguration_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ReportConfiguration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportConfiguration_Order_By>>;
  where?: InputMaybe<ReportConfiguration_Bool_Exp>;
};


export type Query_RootReportConfiguration_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootReport_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Report_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Report_Order_By>>;
  where?: InputMaybe<Report_Bool_Exp>;
};


export type Query_RootReport_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootReportedFindingArgs = {
  distinct_on?: InputMaybe<Array<ReportedFinding_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportedFinding_Order_By>>;
  where?: InputMaybe<ReportedFinding_Bool_Exp>;
};


export type Query_RootReportedFindingNoteArgs = {
  distinct_on?: InputMaybe<Array<ReportedFindingNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportedFindingNote_Order_By>>;
  where?: InputMaybe<ReportedFindingNote_Bool_Exp>;
};


export type Query_RootReportedFindingNote_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ReportedFindingNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportedFindingNote_Order_By>>;
  where?: InputMaybe<ReportedFindingNote_Bool_Exp>;
};


export type Query_RootReportedFindingNote_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootReportedFinding_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ReportedFinding_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportedFinding_Order_By>>;
  where?: InputMaybe<ReportedFinding_Bool_Exp>;
};


export type Query_RootReportedFinding_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootReportedFinding_By_TagArgs = {
  tag: Scalars['String']['input'];
};


export type Query_RootReportedObservation_By_TagArgs = {
  tag: Scalars['String']['input'];
};


export type Query_RootReporting_ObservationArgs = {
  distinct_on?: InputMaybe<Array<Reporting_Observation_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reporting_Observation_Order_By>>;
  where?: InputMaybe<Reporting_Observation_Bool_Exp>;
};


export type Query_RootReporting_Observation_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Reporting_Observation_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reporting_Observation_Order_By>>;
  where?: InputMaybe<Reporting_Observation_Bool_Exp>;
};


export type Query_RootReporting_Observation_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootReporting_ReportobservationlinkArgs = {
  distinct_on?: InputMaybe<Array<Reporting_Reportobservationlink_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reporting_Reportobservationlink_Order_By>>;
  where?: InputMaybe<Reporting_Reportobservationlink_Bool_Exp>;
};


export type Query_RootReporting_Reportobservationlink_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Reporting_Reportobservationlink_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reporting_Reportobservationlink_Order_By>>;
  where?: InputMaybe<Reporting_Reportobservationlink_Bool_Exp>;
};


export type Query_RootReporting_Reportobservationlink_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootScopeArgs = {
  distinct_on?: InputMaybe<Array<Scope_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Scope_Order_By>>;
  where?: InputMaybe<Scope_Bool_Exp>;
};


export type Query_RootScope_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Scope_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Scope_Order_By>>;
  where?: InputMaybe<Scope_Bool_Exp>;
};


export type Query_RootScope_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootServerCheckoutArgs = {
  distinct_on?: InputMaybe<Array<ServerCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerCheckout_Order_By>>;
  where?: InputMaybe<ServerCheckout_Bool_Exp>;
};


export type Query_RootServerCheckout_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerCheckout_Order_By>>;
  where?: InputMaybe<ServerCheckout_Bool_Exp>;
};


export type Query_RootServerCheckout_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootServerNoteArgs = {
  distinct_on?: InputMaybe<Array<ServerNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerNote_Order_By>>;
  where?: InputMaybe<ServerNote_Bool_Exp>;
};


export type Query_RootServerNote_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerNote_Order_By>>;
  where?: InputMaybe<ServerNote_Bool_Exp>;
};


export type Query_RootServerNote_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootServerProviderArgs = {
  distinct_on?: InputMaybe<Array<ServerProvider_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerProvider_Order_By>>;
  where?: InputMaybe<ServerProvider_Bool_Exp>;
};


export type Query_RootServerProvider_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerProvider_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerProvider_Order_By>>;
  where?: InputMaybe<ServerProvider_Bool_Exp>;
};


export type Query_RootServerProvider_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootServerRoleArgs = {
  distinct_on?: InputMaybe<Array<ServerRole_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerRole_Order_By>>;
  where?: InputMaybe<ServerRole_Bool_Exp>;
};


export type Query_RootServerRole_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerRole_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerRole_Order_By>>;
  where?: InputMaybe<ServerRole_Bool_Exp>;
};


export type Query_RootServerRole_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootServerStatusArgs = {
  distinct_on?: InputMaybe<Array<ServerStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerStatus_Order_By>>;
  where?: InputMaybe<ServerStatus_Bool_Exp>;
};


export type Query_RootServerStatus_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerStatus_Order_By>>;
  where?: InputMaybe<ServerStatus_Bool_Exp>;
};


export type Query_RootServerStatus_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootStaticServerArgs = {
  distinct_on?: InputMaybe<Array<StaticServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StaticServer_Order_By>>;
  where?: InputMaybe<StaticServer_Bool_Exp>;
};


export type Query_RootStaticServer_AggregateArgs = {
  distinct_on?: InputMaybe<Array<StaticServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StaticServer_Order_By>>;
  where?: InputMaybe<StaticServer_Bool_Exp>;
};


export type Query_RootStaticServer_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootTagArgs = {
  distinct_on?: InputMaybe<Array<Tag_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tag_Order_By>>;
  where?: InputMaybe<Tag_Bool_Exp>;
};


export type Query_RootTag_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tag_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tag_Order_By>>;
  where?: InputMaybe<Tag_Bool_Exp>;
};


export type Query_RootTag_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootTaggedItemArgs = {
  distinct_on?: InputMaybe<Array<TaggedItem_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TaggedItem_Order_By>>;
  where?: InputMaybe<TaggedItem_Bool_Exp>;
};


export type Query_RootTaggedItem_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TaggedItem_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TaggedItem_Order_By>>;
  where?: InputMaybe<TaggedItem_Bool_Exp>;
};


export type Query_RootTaggedItem_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Query_RootTagsArgs = {
  id: Scalars['bigint']['input'];
  model: Scalars['String']['input'];
};


export type Query_RootTargetArgs = {
  distinct_on?: InputMaybe<Array<Target_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Target_Order_By>>;
  where?: InputMaybe<Target_Bool_Exp>;
};


export type Query_RootTarget_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Target_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Target_Order_By>>;
  where?: InputMaybe<Target_Bool_Exp>;
};


export type Query_RootTarget_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootTaskArgs = {
  distinct_on?: InputMaybe<Array<Task_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Task_Order_By>>;
  where?: InputMaybe<Task_Bool_Exp>;
};


export type Query_RootTask_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Task_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Task_Order_By>>;
  where?: InputMaybe<Task_Bool_Exp>;
};


export type Query_RootTask_By_PkArgs = {
  id: Scalars['String']['input'];
};


export type Query_RootTemplateArgs = {
  distinct_on?: InputMaybe<Array<Template_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Template_Order_By>>;
  where?: InputMaybe<Template_Bool_Exp>;
};


export type Query_RootTemplate_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Template_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Template_Order_By>>;
  where?: InputMaybe<Template_Bool_Exp>;
};


export type Query_RootTemplate_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootUserArgs = {
  distinct_on?: InputMaybe<Array<User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Order_By>>;
  where?: InputMaybe<User_Bool_Exp>;
};


export type Query_RootUserGroupArgs = {
  distinct_on?: InputMaybe<Array<UserGroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<UserGroup_Order_By>>;
  where?: InputMaybe<UserGroup_Bool_Exp>;
};


export type Query_RootUserGroup_AggregateArgs = {
  distinct_on?: InputMaybe<Array<UserGroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<UserGroup_Order_By>>;
  where?: InputMaybe<UserGroup_Bool_Exp>;
};


export type Query_RootUserGroup_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootUserPermissionArgs = {
  distinct_on?: InputMaybe<Array<UserPermission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<UserPermission_Order_By>>;
  where?: InputMaybe<UserPermission_Bool_Exp>;
};


export type Query_RootUserPermission_AggregateArgs = {
  distinct_on?: InputMaybe<Array<UserPermission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<UserPermission_Order_By>>;
  where?: InputMaybe<UserPermission_Bool_Exp>;
};


export type Query_RootUserPermission_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootUserProfileArgs = {
  distinct_on?: InputMaybe<Array<UserProfile_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<UserProfile_Order_By>>;
  where?: InputMaybe<UserProfile_Bool_Exp>;
};


export type Query_RootUserProfile_AggregateArgs = {
  distinct_on?: InputMaybe<Array<UserProfile_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<UserProfile_Order_By>>;
  where?: InputMaybe<UserProfile_Bool_Exp>;
};


export type Query_RootUserProfile_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootUser_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Order_By>>;
  where?: InputMaybe<User_Bool_Exp>;
};


export type Query_RootUser_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootWhitecardArgs = {
  distinct_on?: InputMaybe<Array<Whitecard_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Whitecard_Order_By>>;
  where?: InputMaybe<Whitecard_Bool_Exp>;
};


export type Query_RootWhitecard_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Whitecard_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Whitecard_Order_By>>;
  where?: InputMaybe<Whitecard_Bool_Exp>;
};


export type Query_RootWhitecard_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Query_RootWhoisStatusArgs = {
  distinct_on?: InputMaybe<Array<WhoisStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<WhoisStatus_Order_By>>;
  where?: InputMaybe<WhoisStatus_Bool_Exp>;
};


export type Query_RootWhoisStatus_AggregateArgs = {
  distinct_on?: InputMaybe<Array<WhoisStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<WhoisStatus_Order_By>>;
  where?: InputMaybe<WhoisStatus_Bool_Exp>;
};


export type Query_RootWhoisStatus_By_PkArgs = {
  id: Scalars['bigint']['input'];
};

/** columns and relationships of "reporting_report" */
export type Report = {
  __typename?: 'report';
  archived: Scalars['Boolean']['output'];
  complete: Scalars['Boolean']['output'];
  createdById?: Maybe<Scalars['bigint']['output']>;
  creation: Scalars['date']['output'];
  delivered: Scalars['Boolean']['output'];
  /** An object relationship */
  docxTemplate?: Maybe<Template>;
  docxTemplateId?: Maybe<Scalars['bigint']['output']>;
  /** An array relationship */
  evidence: Array<Evidence>;
  /** An aggregate relationship */
  evidence_aggregate: Evidence_Aggregate;
  extraFields: Scalars['jsonb']['output'];
  /** An array relationship */
  findings: Array<ReportedFinding>;
  /** An aggregate relationship */
  findings_aggregate: ReportedFinding_Aggregate;
  id: Scalars['bigint']['output'];
  last_update: Scalars['date']['output'];
  /** An array relationship */
  observations: Array<Reporting_Reportobservationlink>;
  /** An aggregate relationship */
  observations_aggregate: Reporting_Reportobservationlink_Aggregate;
  /** An object relationship */
  pptxTemplate?: Maybe<Template>;
  pptxTemplateId?: Maybe<Scalars['bigint']['output']>;
  /** An object relationship */
  project?: Maybe<Project>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  title: Scalars['String']['output'];
  /** An object relationship */
  user?: Maybe<User>;
};


/** columns and relationships of "reporting_report" */
export type ReportEvidenceArgs = {
  distinct_on?: InputMaybe<Array<Evidence_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evidence_Order_By>>;
  where?: InputMaybe<Evidence_Bool_Exp>;
};


/** columns and relationships of "reporting_report" */
export type ReportEvidence_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Evidence_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evidence_Order_By>>;
  where?: InputMaybe<Evidence_Bool_Exp>;
};


/** columns and relationships of "reporting_report" */
export type ReportExtraFieldsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "reporting_report" */
export type ReportFindingsArgs = {
  distinct_on?: InputMaybe<Array<ReportedFinding_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportedFinding_Order_By>>;
  where?: InputMaybe<ReportedFinding_Bool_Exp>;
};


/** columns and relationships of "reporting_report" */
export type ReportFindings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ReportedFinding_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportedFinding_Order_By>>;
  where?: InputMaybe<ReportedFinding_Bool_Exp>;
};


/** columns and relationships of "reporting_report" */
export type ReportObservationsArgs = {
  distinct_on?: InputMaybe<Array<Reporting_Reportobservationlink_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reporting_Reportobservationlink_Order_By>>;
  where?: InputMaybe<Reporting_Reportobservationlink_Bool_Exp>;
};


/** columns and relationships of "reporting_report" */
export type ReportObservations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Reporting_Reportobservationlink_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reporting_Reportobservationlink_Order_By>>;
  where?: InputMaybe<Reporting_Reportobservationlink_Bool_Exp>;
};

/** columns and relationships of "commandcenter_reportconfiguration" */
export type ReportConfiguration = {
  __typename?: 'reportConfiguration';
  borderColor: Scalars['String']['output'];
  borderWeight: Scalars['Int']['output'];
  /** An object relationship */
  docxTemplate?: Maybe<Template>;
  docxTemplateId?: Maybe<Scalars['bigint']['output']>;
  enableBorders: Scalars['Boolean']['output'];
  figure_caption_location: Scalars['String']['output'];
  id: Scalars['bigint']['output'];
  labelFigure: Scalars['String']['output'];
  labelTable: Scalars['String']['output'];
  /** An object relationship */
  pptxTemplate?: Maybe<Template>;
  pptxTemplateId?: Maybe<Scalars['bigint']['output']>;
  prefixFigure: Scalars['String']['output'];
  prefixTable: Scalars['String']['output'];
  project_filename: Scalars['String']['output'];
  report_filename: Scalars['String']['output'];
  table_caption_location: Scalars['String']['output'];
  target_delivery_date: Scalars['Int']['output'];
  title_case_captions: Scalars['Boolean']['output'];
  title_case_exceptions: Scalars['String']['output'];
};

/** aggregated selection of "commandcenter_reportconfiguration" */
export type ReportConfiguration_Aggregate = {
  __typename?: 'reportConfiguration_aggregate';
  aggregate?: Maybe<ReportConfiguration_Aggregate_Fields>;
  nodes: Array<ReportConfiguration>;
};

export type ReportConfiguration_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<ReportConfiguration_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<ReportConfiguration_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<ReportConfiguration_Aggregate_Bool_Exp_Count>;
};

export type ReportConfiguration_Aggregate_Bool_Exp_Bool_And = {
  arguments: ReportConfiguration_Select_Column_ReportConfiguration_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ReportConfiguration_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type ReportConfiguration_Aggregate_Bool_Exp_Bool_Or = {
  arguments: ReportConfiguration_Select_Column_ReportConfiguration_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ReportConfiguration_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type ReportConfiguration_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ReportConfiguration_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ReportConfiguration_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "commandcenter_reportconfiguration" */
export type ReportConfiguration_Aggregate_Fields = {
  __typename?: 'reportConfiguration_aggregate_fields';
  avg?: Maybe<ReportConfiguration_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ReportConfiguration_Max_Fields>;
  min?: Maybe<ReportConfiguration_Min_Fields>;
  stddev?: Maybe<ReportConfiguration_Stddev_Fields>;
  stddev_pop?: Maybe<ReportConfiguration_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ReportConfiguration_Stddev_Samp_Fields>;
  sum?: Maybe<ReportConfiguration_Sum_Fields>;
  var_pop?: Maybe<ReportConfiguration_Var_Pop_Fields>;
  var_samp?: Maybe<ReportConfiguration_Var_Samp_Fields>;
  variance?: Maybe<ReportConfiguration_Variance_Fields>;
};


/** aggregate fields of "commandcenter_reportconfiguration" */
export type ReportConfiguration_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ReportConfiguration_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "commandcenter_reportconfiguration" */
export type ReportConfiguration_Aggregate_Order_By = {
  avg?: InputMaybe<ReportConfiguration_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ReportConfiguration_Max_Order_By>;
  min?: InputMaybe<ReportConfiguration_Min_Order_By>;
  stddev?: InputMaybe<ReportConfiguration_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ReportConfiguration_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ReportConfiguration_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ReportConfiguration_Sum_Order_By>;
  var_pop?: InputMaybe<ReportConfiguration_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ReportConfiguration_Var_Samp_Order_By>;
  variance?: InputMaybe<ReportConfiguration_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "commandcenter_reportconfiguration" */
export type ReportConfiguration_Arr_Rel_Insert_Input = {
  data: Array<ReportConfiguration_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ReportConfiguration_On_Conflict>;
};

/** aggregate avg on columns */
export type ReportConfiguration_Avg_Fields = {
  __typename?: 'reportConfiguration_avg_fields';
  borderWeight?: Maybe<Scalars['Float']['output']>;
  docxTemplateId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pptxTemplateId?: Maybe<Scalars['Float']['output']>;
  target_delivery_date?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "commandcenter_reportconfiguration" */
export type ReportConfiguration_Avg_Order_By = {
  borderWeight?: InputMaybe<Order_By>;
  docxTemplateId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pptxTemplateId?: InputMaybe<Order_By>;
  target_delivery_date?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "commandcenter_reportconfiguration". All fields are combined with a logical 'AND'. */
export type ReportConfiguration_Bool_Exp = {
  _and?: InputMaybe<Array<ReportConfiguration_Bool_Exp>>;
  _not?: InputMaybe<ReportConfiguration_Bool_Exp>;
  _or?: InputMaybe<Array<ReportConfiguration_Bool_Exp>>;
  borderColor?: InputMaybe<String_Comparison_Exp>;
  borderWeight?: InputMaybe<Int_Comparison_Exp>;
  docxTemplate?: InputMaybe<Template_Bool_Exp>;
  docxTemplateId?: InputMaybe<Bigint_Comparison_Exp>;
  enableBorders?: InputMaybe<Boolean_Comparison_Exp>;
  figure_caption_location?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  labelFigure?: InputMaybe<String_Comparison_Exp>;
  labelTable?: InputMaybe<String_Comparison_Exp>;
  pptxTemplate?: InputMaybe<Template_Bool_Exp>;
  pptxTemplateId?: InputMaybe<Bigint_Comparison_Exp>;
  prefixFigure?: InputMaybe<String_Comparison_Exp>;
  prefixTable?: InputMaybe<String_Comparison_Exp>;
  project_filename?: InputMaybe<String_Comparison_Exp>;
  report_filename?: InputMaybe<String_Comparison_Exp>;
  table_caption_location?: InputMaybe<String_Comparison_Exp>;
  target_delivery_date?: InputMaybe<Int_Comparison_Exp>;
  title_case_captions?: InputMaybe<Boolean_Comparison_Exp>;
  title_case_exceptions?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "commandcenter_reportconfiguration" */
export enum ReportConfiguration_Constraint {
  /** unique or primary key constraint on columns "id" */
  CommandcenterReportconfigurationPkey = 'commandcenter_reportconfiguration_pkey'
}

/** input type for incrementing numeric columns in table "commandcenter_reportconfiguration" */
export type ReportConfiguration_Inc_Input = {
  borderWeight?: InputMaybe<Scalars['Int']['input']>;
  docxTemplateId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  pptxTemplateId?: InputMaybe<Scalars['bigint']['input']>;
  target_delivery_date?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "commandcenter_reportconfiguration" */
export type ReportConfiguration_Insert_Input = {
  borderColor?: InputMaybe<Scalars['String']['input']>;
  borderWeight?: InputMaybe<Scalars['Int']['input']>;
  docxTemplate?: InputMaybe<Template_Obj_Rel_Insert_Input>;
  docxTemplateId?: InputMaybe<Scalars['bigint']['input']>;
  enableBorders?: InputMaybe<Scalars['Boolean']['input']>;
  figure_caption_location?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  labelFigure?: InputMaybe<Scalars['String']['input']>;
  labelTable?: InputMaybe<Scalars['String']['input']>;
  pptxTemplate?: InputMaybe<Template_Obj_Rel_Insert_Input>;
  pptxTemplateId?: InputMaybe<Scalars['bigint']['input']>;
  prefixFigure?: InputMaybe<Scalars['String']['input']>;
  prefixTable?: InputMaybe<Scalars['String']['input']>;
  project_filename?: InputMaybe<Scalars['String']['input']>;
  report_filename?: InputMaybe<Scalars['String']['input']>;
  table_caption_location?: InputMaybe<Scalars['String']['input']>;
  target_delivery_date?: InputMaybe<Scalars['Int']['input']>;
  title_case_captions?: InputMaybe<Scalars['Boolean']['input']>;
  title_case_exceptions?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type ReportConfiguration_Max_Fields = {
  __typename?: 'reportConfiguration_max_fields';
  borderColor?: Maybe<Scalars['String']['output']>;
  borderWeight?: Maybe<Scalars['Int']['output']>;
  docxTemplateId?: Maybe<Scalars['bigint']['output']>;
  figure_caption_location?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  labelFigure?: Maybe<Scalars['String']['output']>;
  labelTable?: Maybe<Scalars['String']['output']>;
  pptxTemplateId?: Maybe<Scalars['bigint']['output']>;
  prefixFigure?: Maybe<Scalars['String']['output']>;
  prefixTable?: Maybe<Scalars['String']['output']>;
  project_filename?: Maybe<Scalars['String']['output']>;
  report_filename?: Maybe<Scalars['String']['output']>;
  table_caption_location?: Maybe<Scalars['String']['output']>;
  target_delivery_date?: Maybe<Scalars['Int']['output']>;
  title_case_exceptions?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "commandcenter_reportconfiguration" */
export type ReportConfiguration_Max_Order_By = {
  borderColor?: InputMaybe<Order_By>;
  borderWeight?: InputMaybe<Order_By>;
  docxTemplateId?: InputMaybe<Order_By>;
  figure_caption_location?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  labelFigure?: InputMaybe<Order_By>;
  labelTable?: InputMaybe<Order_By>;
  pptxTemplateId?: InputMaybe<Order_By>;
  prefixFigure?: InputMaybe<Order_By>;
  prefixTable?: InputMaybe<Order_By>;
  project_filename?: InputMaybe<Order_By>;
  report_filename?: InputMaybe<Order_By>;
  table_caption_location?: InputMaybe<Order_By>;
  target_delivery_date?: InputMaybe<Order_By>;
  title_case_exceptions?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ReportConfiguration_Min_Fields = {
  __typename?: 'reportConfiguration_min_fields';
  borderColor?: Maybe<Scalars['String']['output']>;
  borderWeight?: Maybe<Scalars['Int']['output']>;
  docxTemplateId?: Maybe<Scalars['bigint']['output']>;
  figure_caption_location?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  labelFigure?: Maybe<Scalars['String']['output']>;
  labelTable?: Maybe<Scalars['String']['output']>;
  pptxTemplateId?: Maybe<Scalars['bigint']['output']>;
  prefixFigure?: Maybe<Scalars['String']['output']>;
  prefixTable?: Maybe<Scalars['String']['output']>;
  project_filename?: Maybe<Scalars['String']['output']>;
  report_filename?: Maybe<Scalars['String']['output']>;
  table_caption_location?: Maybe<Scalars['String']['output']>;
  target_delivery_date?: Maybe<Scalars['Int']['output']>;
  title_case_exceptions?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "commandcenter_reportconfiguration" */
export type ReportConfiguration_Min_Order_By = {
  borderColor?: InputMaybe<Order_By>;
  borderWeight?: InputMaybe<Order_By>;
  docxTemplateId?: InputMaybe<Order_By>;
  figure_caption_location?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  labelFigure?: InputMaybe<Order_By>;
  labelTable?: InputMaybe<Order_By>;
  pptxTemplateId?: InputMaybe<Order_By>;
  prefixFigure?: InputMaybe<Order_By>;
  prefixTable?: InputMaybe<Order_By>;
  project_filename?: InputMaybe<Order_By>;
  report_filename?: InputMaybe<Order_By>;
  table_caption_location?: InputMaybe<Order_By>;
  target_delivery_date?: InputMaybe<Order_By>;
  title_case_exceptions?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "commandcenter_reportconfiguration" */
export type ReportConfiguration_Mutation_Response = {
  __typename?: 'reportConfiguration_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ReportConfiguration>;
};

/** on_conflict condition type for table "commandcenter_reportconfiguration" */
export type ReportConfiguration_On_Conflict = {
  constraint: ReportConfiguration_Constraint;
  update_columns?: Array<ReportConfiguration_Update_Column>;
  where?: InputMaybe<ReportConfiguration_Bool_Exp>;
};

/** Ordering options when selecting data from "commandcenter_reportconfiguration". */
export type ReportConfiguration_Order_By = {
  borderColor?: InputMaybe<Order_By>;
  borderWeight?: InputMaybe<Order_By>;
  docxTemplate?: InputMaybe<Template_Order_By>;
  docxTemplateId?: InputMaybe<Order_By>;
  enableBorders?: InputMaybe<Order_By>;
  figure_caption_location?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  labelFigure?: InputMaybe<Order_By>;
  labelTable?: InputMaybe<Order_By>;
  pptxTemplate?: InputMaybe<Template_Order_By>;
  pptxTemplateId?: InputMaybe<Order_By>;
  prefixFigure?: InputMaybe<Order_By>;
  prefixTable?: InputMaybe<Order_By>;
  project_filename?: InputMaybe<Order_By>;
  report_filename?: InputMaybe<Order_By>;
  table_caption_location?: InputMaybe<Order_By>;
  target_delivery_date?: InputMaybe<Order_By>;
  title_case_captions?: InputMaybe<Order_By>;
  title_case_exceptions?: InputMaybe<Order_By>;
};

/** primary key columns input for table: commandcenter_reportconfiguration */
export type ReportConfiguration_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "commandcenter_reportconfiguration" */
export enum ReportConfiguration_Select_Column {
  /** column name */
  BorderColor = 'borderColor',
  /** column name */
  BorderWeight = 'borderWeight',
  /** column name */
  DocxTemplateId = 'docxTemplateId',
  /** column name */
  EnableBorders = 'enableBorders',
  /** column name */
  FigureCaptionLocation = 'figure_caption_location',
  /** column name */
  Id = 'id',
  /** column name */
  LabelFigure = 'labelFigure',
  /** column name */
  LabelTable = 'labelTable',
  /** column name */
  PptxTemplateId = 'pptxTemplateId',
  /** column name */
  PrefixFigure = 'prefixFigure',
  /** column name */
  PrefixTable = 'prefixTable',
  /** column name */
  ProjectFilename = 'project_filename',
  /** column name */
  ReportFilename = 'report_filename',
  /** column name */
  TableCaptionLocation = 'table_caption_location',
  /** column name */
  TargetDeliveryDate = 'target_delivery_date',
  /** column name */
  TitleCaseCaptions = 'title_case_captions',
  /** column name */
  TitleCaseExceptions = 'title_case_exceptions'
}

/** select "reportConfiguration_aggregate_bool_exp_bool_and_arguments_columns" columns of table "commandcenter_reportconfiguration" */
export enum ReportConfiguration_Select_Column_ReportConfiguration_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  EnableBorders = 'enableBorders',
  /** column name */
  TitleCaseCaptions = 'title_case_captions'
}

/** select "reportConfiguration_aggregate_bool_exp_bool_or_arguments_columns" columns of table "commandcenter_reportconfiguration" */
export enum ReportConfiguration_Select_Column_ReportConfiguration_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  EnableBorders = 'enableBorders',
  /** column name */
  TitleCaseCaptions = 'title_case_captions'
}

/** input type for updating data in table "commandcenter_reportconfiguration" */
export type ReportConfiguration_Set_Input = {
  borderColor?: InputMaybe<Scalars['String']['input']>;
  borderWeight?: InputMaybe<Scalars['Int']['input']>;
  docxTemplateId?: InputMaybe<Scalars['bigint']['input']>;
  enableBorders?: InputMaybe<Scalars['Boolean']['input']>;
  figure_caption_location?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  labelFigure?: InputMaybe<Scalars['String']['input']>;
  labelTable?: InputMaybe<Scalars['String']['input']>;
  pptxTemplateId?: InputMaybe<Scalars['bigint']['input']>;
  prefixFigure?: InputMaybe<Scalars['String']['input']>;
  prefixTable?: InputMaybe<Scalars['String']['input']>;
  project_filename?: InputMaybe<Scalars['String']['input']>;
  report_filename?: InputMaybe<Scalars['String']['input']>;
  table_caption_location?: InputMaybe<Scalars['String']['input']>;
  target_delivery_date?: InputMaybe<Scalars['Int']['input']>;
  title_case_captions?: InputMaybe<Scalars['Boolean']['input']>;
  title_case_exceptions?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type ReportConfiguration_Stddev_Fields = {
  __typename?: 'reportConfiguration_stddev_fields';
  borderWeight?: Maybe<Scalars['Float']['output']>;
  docxTemplateId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pptxTemplateId?: Maybe<Scalars['Float']['output']>;
  target_delivery_date?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "commandcenter_reportconfiguration" */
export type ReportConfiguration_Stddev_Order_By = {
  borderWeight?: InputMaybe<Order_By>;
  docxTemplateId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pptxTemplateId?: InputMaybe<Order_By>;
  target_delivery_date?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ReportConfiguration_Stddev_Pop_Fields = {
  __typename?: 'reportConfiguration_stddev_pop_fields';
  borderWeight?: Maybe<Scalars['Float']['output']>;
  docxTemplateId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pptxTemplateId?: Maybe<Scalars['Float']['output']>;
  target_delivery_date?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "commandcenter_reportconfiguration" */
export type ReportConfiguration_Stddev_Pop_Order_By = {
  borderWeight?: InputMaybe<Order_By>;
  docxTemplateId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pptxTemplateId?: InputMaybe<Order_By>;
  target_delivery_date?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ReportConfiguration_Stddev_Samp_Fields = {
  __typename?: 'reportConfiguration_stddev_samp_fields';
  borderWeight?: Maybe<Scalars['Float']['output']>;
  docxTemplateId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pptxTemplateId?: Maybe<Scalars['Float']['output']>;
  target_delivery_date?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "commandcenter_reportconfiguration" */
export type ReportConfiguration_Stddev_Samp_Order_By = {
  borderWeight?: InputMaybe<Order_By>;
  docxTemplateId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pptxTemplateId?: InputMaybe<Order_By>;
  target_delivery_date?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "reportConfiguration" */
export type ReportConfiguration_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ReportConfiguration_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ReportConfiguration_Stream_Cursor_Value_Input = {
  borderColor?: InputMaybe<Scalars['String']['input']>;
  borderWeight?: InputMaybe<Scalars['Int']['input']>;
  docxTemplateId?: InputMaybe<Scalars['bigint']['input']>;
  enableBorders?: InputMaybe<Scalars['Boolean']['input']>;
  figure_caption_location?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  labelFigure?: InputMaybe<Scalars['String']['input']>;
  labelTable?: InputMaybe<Scalars['String']['input']>;
  pptxTemplateId?: InputMaybe<Scalars['bigint']['input']>;
  prefixFigure?: InputMaybe<Scalars['String']['input']>;
  prefixTable?: InputMaybe<Scalars['String']['input']>;
  project_filename?: InputMaybe<Scalars['String']['input']>;
  report_filename?: InputMaybe<Scalars['String']['input']>;
  table_caption_location?: InputMaybe<Scalars['String']['input']>;
  target_delivery_date?: InputMaybe<Scalars['Int']['input']>;
  title_case_captions?: InputMaybe<Scalars['Boolean']['input']>;
  title_case_exceptions?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type ReportConfiguration_Sum_Fields = {
  __typename?: 'reportConfiguration_sum_fields';
  borderWeight?: Maybe<Scalars['Int']['output']>;
  docxTemplateId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  pptxTemplateId?: Maybe<Scalars['bigint']['output']>;
  target_delivery_date?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "commandcenter_reportconfiguration" */
export type ReportConfiguration_Sum_Order_By = {
  borderWeight?: InputMaybe<Order_By>;
  docxTemplateId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pptxTemplateId?: InputMaybe<Order_By>;
  target_delivery_date?: InputMaybe<Order_By>;
};

/** update columns of table "commandcenter_reportconfiguration" */
export enum ReportConfiguration_Update_Column {
  /** column name */
  BorderColor = 'borderColor',
  /** column name */
  BorderWeight = 'borderWeight',
  /** column name */
  DocxTemplateId = 'docxTemplateId',
  /** column name */
  EnableBorders = 'enableBorders',
  /** column name */
  FigureCaptionLocation = 'figure_caption_location',
  /** column name */
  Id = 'id',
  /** column name */
  LabelFigure = 'labelFigure',
  /** column name */
  LabelTable = 'labelTable',
  /** column name */
  PptxTemplateId = 'pptxTemplateId',
  /** column name */
  PrefixFigure = 'prefixFigure',
  /** column name */
  PrefixTable = 'prefixTable',
  /** column name */
  ProjectFilename = 'project_filename',
  /** column name */
  ReportFilename = 'report_filename',
  /** column name */
  TableCaptionLocation = 'table_caption_location',
  /** column name */
  TargetDeliveryDate = 'target_delivery_date',
  /** column name */
  TitleCaseCaptions = 'title_case_captions',
  /** column name */
  TitleCaseExceptions = 'title_case_exceptions'
}

export type ReportConfiguration_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ReportConfiguration_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ReportConfiguration_Set_Input>;
  /** filter the rows which have to be updated */
  where: ReportConfiguration_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ReportConfiguration_Var_Pop_Fields = {
  __typename?: 'reportConfiguration_var_pop_fields';
  borderWeight?: Maybe<Scalars['Float']['output']>;
  docxTemplateId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pptxTemplateId?: Maybe<Scalars['Float']['output']>;
  target_delivery_date?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "commandcenter_reportconfiguration" */
export type ReportConfiguration_Var_Pop_Order_By = {
  borderWeight?: InputMaybe<Order_By>;
  docxTemplateId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pptxTemplateId?: InputMaybe<Order_By>;
  target_delivery_date?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ReportConfiguration_Var_Samp_Fields = {
  __typename?: 'reportConfiguration_var_samp_fields';
  borderWeight?: Maybe<Scalars['Float']['output']>;
  docxTemplateId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pptxTemplateId?: Maybe<Scalars['Float']['output']>;
  target_delivery_date?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "commandcenter_reportconfiguration" */
export type ReportConfiguration_Var_Samp_Order_By = {
  borderWeight?: InputMaybe<Order_By>;
  docxTemplateId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pptxTemplateId?: InputMaybe<Order_By>;
  target_delivery_date?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ReportConfiguration_Variance_Fields = {
  __typename?: 'reportConfiguration_variance_fields';
  borderWeight?: Maybe<Scalars['Float']['output']>;
  docxTemplateId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pptxTemplateId?: Maybe<Scalars['Float']['output']>;
  target_delivery_date?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "commandcenter_reportconfiguration" */
export type ReportConfiguration_Variance_Order_By = {
  borderWeight?: InputMaybe<Order_By>;
  docxTemplateId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pptxTemplateId?: InputMaybe<Order_By>;
  target_delivery_date?: InputMaybe<Order_By>;
};

/** aggregated selection of "reporting_report" */
export type Report_Aggregate = {
  __typename?: 'report_aggregate';
  aggregate?: Maybe<Report_Aggregate_Fields>;
  nodes: Array<Report>;
};

export type Report_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Report_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Report_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Report_Aggregate_Bool_Exp_Count>;
};

export type Report_Aggregate_Bool_Exp_Bool_And = {
  arguments: Report_Select_Column_Report_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Report_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Report_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Report_Select_Column_Report_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Report_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Report_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Report_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Report_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "reporting_report" */
export type Report_Aggregate_Fields = {
  __typename?: 'report_aggregate_fields';
  avg?: Maybe<Report_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Report_Max_Fields>;
  min?: Maybe<Report_Min_Fields>;
  stddev?: Maybe<Report_Stddev_Fields>;
  stddev_pop?: Maybe<Report_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Report_Stddev_Samp_Fields>;
  sum?: Maybe<Report_Sum_Fields>;
  var_pop?: Maybe<Report_Var_Pop_Fields>;
  var_samp?: Maybe<Report_Var_Samp_Fields>;
  variance?: Maybe<Report_Variance_Fields>;
};


/** aggregate fields of "reporting_report" */
export type Report_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Report_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "reporting_report" */
export type Report_Aggregate_Order_By = {
  avg?: InputMaybe<Report_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Report_Max_Order_By>;
  min?: InputMaybe<Report_Min_Order_By>;
  stddev?: InputMaybe<Report_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Report_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Report_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Report_Sum_Order_By>;
  var_pop?: InputMaybe<Report_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Report_Var_Samp_Order_By>;
  variance?: InputMaybe<Report_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Report_Append_Input = {
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "reporting_report" */
export type Report_Arr_Rel_Insert_Input = {
  data: Array<Report_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Report_On_Conflict>;
};

/** aggregate avg on columns */
export type Report_Avg_Fields = {
  __typename?: 'report_avg_fields';
  createdById?: Maybe<Scalars['Float']['output']>;
  docxTemplateId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pptxTemplateId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "reporting_report" */
export type Report_Avg_Order_By = {
  createdById?: InputMaybe<Order_By>;
  docxTemplateId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pptxTemplateId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "reporting_report". All fields are combined with a logical 'AND'. */
export type Report_Bool_Exp = {
  _and?: InputMaybe<Array<Report_Bool_Exp>>;
  _not?: InputMaybe<Report_Bool_Exp>;
  _or?: InputMaybe<Array<Report_Bool_Exp>>;
  archived?: InputMaybe<Boolean_Comparison_Exp>;
  complete?: InputMaybe<Boolean_Comparison_Exp>;
  createdById?: InputMaybe<Bigint_Comparison_Exp>;
  creation?: InputMaybe<Date_Comparison_Exp>;
  delivered?: InputMaybe<Boolean_Comparison_Exp>;
  docxTemplate?: InputMaybe<Template_Bool_Exp>;
  docxTemplateId?: InputMaybe<Bigint_Comparison_Exp>;
  evidence?: InputMaybe<Evidence_Bool_Exp>;
  evidence_aggregate?: InputMaybe<Evidence_Aggregate_Bool_Exp>;
  extraFields?: InputMaybe<Jsonb_Comparison_Exp>;
  findings?: InputMaybe<ReportedFinding_Bool_Exp>;
  findings_aggregate?: InputMaybe<ReportedFinding_Aggregate_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  last_update?: InputMaybe<Date_Comparison_Exp>;
  observations?: InputMaybe<Reporting_Reportobservationlink_Bool_Exp>;
  observations_aggregate?: InputMaybe<Reporting_Reportobservationlink_Aggregate_Bool_Exp>;
  pptxTemplate?: InputMaybe<Template_Bool_Exp>;
  pptxTemplateId?: InputMaybe<Bigint_Comparison_Exp>;
  project?: InputMaybe<Project_Bool_Exp>;
  projectId?: InputMaybe<Bigint_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
  user?: InputMaybe<User_Bool_Exp>;
};

/** unique or primary key constraints on table "reporting_report" */
export enum Report_Constraint {
  /** unique or primary key constraint on columns "id" */
  ReportingReportPkey = 'reporting_report_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Report_Delete_At_Path_Input = {
  extraFields?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Report_Delete_Elem_Input = {
  extraFields?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Report_Delete_Key_Input = {
  extraFields?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "reporting_report" */
export type Report_Inc_Input = {
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  docxTemplateId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  pptxTemplateId?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "reporting_report" */
export type Report_Insert_Input = {
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  complete?: InputMaybe<Scalars['Boolean']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  creation?: InputMaybe<Scalars['date']['input']>;
  delivered?: InputMaybe<Scalars['Boolean']['input']>;
  docxTemplate?: InputMaybe<Template_Obj_Rel_Insert_Input>;
  docxTemplateId?: InputMaybe<Scalars['bigint']['input']>;
  evidence?: InputMaybe<Evidence_Arr_Rel_Insert_Input>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  findings?: InputMaybe<ReportedFinding_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  last_update?: InputMaybe<Scalars['date']['input']>;
  observations?: InputMaybe<Reporting_Reportobservationlink_Arr_Rel_Insert_Input>;
  pptxTemplate?: InputMaybe<Template_Obj_Rel_Insert_Input>;
  pptxTemplateId?: InputMaybe<Scalars['bigint']['input']>;
  project?: InputMaybe<Project_Obj_Rel_Insert_Input>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  user?: InputMaybe<User_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Report_Max_Fields = {
  __typename?: 'report_max_fields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  creation?: Maybe<Scalars['date']['output']>;
  docxTemplateId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  last_update?: Maybe<Scalars['date']['output']>;
  pptxTemplateId?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "reporting_report" */
export type Report_Max_Order_By = {
  createdById?: InputMaybe<Order_By>;
  creation?: InputMaybe<Order_By>;
  docxTemplateId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  last_update?: InputMaybe<Order_By>;
  pptxTemplateId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Report_Min_Fields = {
  __typename?: 'report_min_fields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  creation?: Maybe<Scalars['date']['output']>;
  docxTemplateId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  last_update?: Maybe<Scalars['date']['output']>;
  pptxTemplateId?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "reporting_report" */
export type Report_Min_Order_By = {
  createdById?: InputMaybe<Order_By>;
  creation?: InputMaybe<Order_By>;
  docxTemplateId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  last_update?: InputMaybe<Order_By>;
  pptxTemplateId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "reporting_report" */
export type Report_Mutation_Response = {
  __typename?: 'report_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Report>;
};

/** input type for inserting object relation for remote table "reporting_report" */
export type Report_Obj_Rel_Insert_Input = {
  data: Report_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Report_On_Conflict>;
};

/** on_conflict condition type for table "reporting_report" */
export type Report_On_Conflict = {
  constraint: Report_Constraint;
  update_columns?: Array<Report_Update_Column>;
  where?: InputMaybe<Report_Bool_Exp>;
};

/** Ordering options when selecting data from "reporting_report". */
export type Report_Order_By = {
  archived?: InputMaybe<Order_By>;
  complete?: InputMaybe<Order_By>;
  createdById?: InputMaybe<Order_By>;
  creation?: InputMaybe<Order_By>;
  delivered?: InputMaybe<Order_By>;
  docxTemplate?: InputMaybe<Template_Order_By>;
  docxTemplateId?: InputMaybe<Order_By>;
  evidence_aggregate?: InputMaybe<Evidence_Aggregate_Order_By>;
  extraFields?: InputMaybe<Order_By>;
  findings_aggregate?: InputMaybe<ReportedFinding_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  last_update?: InputMaybe<Order_By>;
  observations_aggregate?: InputMaybe<Reporting_Reportobservationlink_Aggregate_Order_By>;
  pptxTemplate?: InputMaybe<Template_Order_By>;
  pptxTemplateId?: InputMaybe<Order_By>;
  project?: InputMaybe<Project_Order_By>;
  projectId?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
  user?: InputMaybe<User_Order_By>;
};

/** primary key columns input for table: reporting_report */
export type Report_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Report_Prepend_Input = {
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "reporting_report" */
export enum Report_Select_Column {
  /** column name */
  Archived = 'archived',
  /** column name */
  Complete = 'complete',
  /** column name */
  CreatedById = 'createdById',
  /** column name */
  Creation = 'creation',
  /** column name */
  Delivered = 'delivered',
  /** column name */
  DocxTemplateId = 'docxTemplateId',
  /** column name */
  ExtraFields = 'extraFields',
  /** column name */
  Id = 'id',
  /** column name */
  LastUpdate = 'last_update',
  /** column name */
  PptxTemplateId = 'pptxTemplateId',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  Title = 'title'
}

/** select "report_aggregate_bool_exp_bool_and_arguments_columns" columns of table "reporting_report" */
export enum Report_Select_Column_Report_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Archived = 'archived',
  /** column name */
  Complete = 'complete',
  /** column name */
  Delivered = 'delivered'
}

/** select "report_aggregate_bool_exp_bool_or_arguments_columns" columns of table "reporting_report" */
export enum Report_Select_Column_Report_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Archived = 'archived',
  /** column name */
  Complete = 'complete',
  /** column name */
  Delivered = 'delivered'
}

/** input type for updating data in table "reporting_report" */
export type Report_Set_Input = {
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  complete?: InputMaybe<Scalars['Boolean']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  creation?: InputMaybe<Scalars['date']['input']>;
  delivered?: InputMaybe<Scalars['Boolean']['input']>;
  docxTemplateId?: InputMaybe<Scalars['bigint']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  last_update?: InputMaybe<Scalars['date']['input']>;
  pptxTemplateId?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Report_Stddev_Fields = {
  __typename?: 'report_stddev_fields';
  createdById?: Maybe<Scalars['Float']['output']>;
  docxTemplateId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pptxTemplateId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "reporting_report" */
export type Report_Stddev_Order_By = {
  createdById?: InputMaybe<Order_By>;
  docxTemplateId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pptxTemplateId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Report_Stddev_Pop_Fields = {
  __typename?: 'report_stddev_pop_fields';
  createdById?: Maybe<Scalars['Float']['output']>;
  docxTemplateId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pptxTemplateId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "reporting_report" */
export type Report_Stddev_Pop_Order_By = {
  createdById?: InputMaybe<Order_By>;
  docxTemplateId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pptxTemplateId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Report_Stddev_Samp_Fields = {
  __typename?: 'report_stddev_samp_fields';
  createdById?: Maybe<Scalars['Float']['output']>;
  docxTemplateId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pptxTemplateId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "reporting_report" */
export type Report_Stddev_Samp_Order_By = {
  createdById?: InputMaybe<Order_By>;
  docxTemplateId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pptxTemplateId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "report" */
export type Report_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Report_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Report_Stream_Cursor_Value_Input = {
  archived?: InputMaybe<Scalars['Boolean']['input']>;
  complete?: InputMaybe<Scalars['Boolean']['input']>;
  createdById?: InputMaybe<Scalars['bigint']['input']>;
  creation?: InputMaybe<Scalars['date']['input']>;
  delivered?: InputMaybe<Scalars['Boolean']['input']>;
  docxTemplateId?: InputMaybe<Scalars['bigint']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  last_update?: InputMaybe<Scalars['date']['input']>;
  pptxTemplateId?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Report_Sum_Fields = {
  __typename?: 'report_sum_fields';
  createdById?: Maybe<Scalars['bigint']['output']>;
  docxTemplateId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  pptxTemplateId?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "reporting_report" */
export type Report_Sum_Order_By = {
  createdById?: InputMaybe<Order_By>;
  docxTemplateId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pptxTemplateId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** update columns of table "reporting_report" */
export enum Report_Update_Column {
  /** column name */
  Archived = 'archived',
  /** column name */
  Complete = 'complete',
  /** column name */
  CreatedById = 'createdById',
  /** column name */
  Creation = 'creation',
  /** column name */
  Delivered = 'delivered',
  /** column name */
  DocxTemplateId = 'docxTemplateId',
  /** column name */
  ExtraFields = 'extraFields',
  /** column name */
  Id = 'id',
  /** column name */
  LastUpdate = 'last_update',
  /** column name */
  PptxTemplateId = 'pptxTemplateId',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  Title = 'title'
}

export type Report_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Report_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Report_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Report_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Report_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Report_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Report_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Report_Set_Input>;
  /** filter the rows which have to be updated */
  where: Report_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Report_Var_Pop_Fields = {
  __typename?: 'report_var_pop_fields';
  createdById?: Maybe<Scalars['Float']['output']>;
  docxTemplateId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pptxTemplateId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "reporting_report" */
export type Report_Var_Pop_Order_By = {
  createdById?: InputMaybe<Order_By>;
  docxTemplateId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pptxTemplateId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Report_Var_Samp_Fields = {
  __typename?: 'report_var_samp_fields';
  createdById?: Maybe<Scalars['Float']['output']>;
  docxTemplateId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pptxTemplateId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "reporting_report" */
export type Report_Var_Samp_Order_By = {
  createdById?: InputMaybe<Order_By>;
  docxTemplateId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pptxTemplateId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Report_Variance_Fields = {
  __typename?: 'report_variance_fields';
  createdById?: Maybe<Scalars['Float']['output']>;
  docxTemplateId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  pptxTemplateId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "reporting_report" */
export type Report_Variance_Order_By = {
  createdById?: InputMaybe<Order_By>;
  docxTemplateId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  pptxTemplateId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** columns and relationships of "reporting_reportfindinglink" */
export type ReportedFinding = {
  __typename?: 'reportedFinding';
  addedAsBlank: Scalars['Boolean']['output'];
  affectedEntities: Scalars['String']['output'];
  /** An object relationship */
  assignedTo?: Maybe<User>;
  assignedToId?: Maybe<Scalars['bigint']['output']>;
  /** An array relationship */
  comments: Array<ReportedFindingNote>;
  /** An aggregate relationship */
  comments_aggregate: ReportedFindingNote_Aggregate;
  complete: Scalars['Boolean']['output'];
  cvssScore?: Maybe<Scalars['float8']['output']>;
  cvssVector: Scalars['String']['output'];
  description: Scalars['String']['output'];
  /** An array relationship */
  evidences: Array<Evidence>;
  /** An aggregate relationship */
  evidences_aggregate: Evidence_Aggregate;
  extraFields: Scalars['jsonb']['output'];
  findingGuidance: Scalars['String']['output'];
  /** An object relationship */
  findingType: FindingType;
  findingTypeId: Scalars['bigint']['output'];
  hostDetectionTechniques: Scalars['String']['output'];
  id: Scalars['bigint']['output'];
  impact: Scalars['String']['output'];
  mitigation: Scalars['String']['output'];
  networkDetectionTechniques: Scalars['String']['output'];
  position: Scalars['Int']['output'];
  references: Scalars['String']['output'];
  replication_steps: Scalars['String']['output'];
  /** An object relationship */
  report?: Maybe<Report>;
  reportId?: Maybe<Scalars['bigint']['output']>;
  /** An object relationship */
  severity: FindingSeverity;
  severityId: Scalars['bigint']['output'];
  title: Scalars['String']['output'];
};


/** columns and relationships of "reporting_reportfindinglink" */
export type ReportedFindingCommentsArgs = {
  distinct_on?: InputMaybe<Array<ReportedFindingNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportedFindingNote_Order_By>>;
  where?: InputMaybe<ReportedFindingNote_Bool_Exp>;
};


/** columns and relationships of "reporting_reportfindinglink" */
export type ReportedFindingComments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ReportedFindingNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportedFindingNote_Order_By>>;
  where?: InputMaybe<ReportedFindingNote_Bool_Exp>;
};


/** columns and relationships of "reporting_reportfindinglink" */
export type ReportedFindingEvidencesArgs = {
  distinct_on?: InputMaybe<Array<Evidence_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evidence_Order_By>>;
  where?: InputMaybe<Evidence_Bool_Exp>;
};


/** columns and relationships of "reporting_reportfindinglink" */
export type ReportedFindingEvidences_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Evidence_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evidence_Order_By>>;
  where?: InputMaybe<Evidence_Bool_Exp>;
};


/** columns and relationships of "reporting_reportfindinglink" */
export type ReportedFindingExtraFieldsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** columns and relationships of "reporting_localfindingnote" */
export type ReportedFindingNote = {
  __typename?: 'reportedFindingNote';
  /** An object relationship */
  finding: ReportedFinding;
  findingId: Scalars['bigint']['output'];
  id: Scalars['bigint']['output'];
  note: Scalars['String']['output'];
  operatorId?: Maybe<Scalars['bigint']['output']>;
  timestamp: Scalars['date']['output'];
  /** An object relationship */
  user?: Maybe<User>;
};

/** aggregated selection of "reporting_localfindingnote" */
export type ReportedFindingNote_Aggregate = {
  __typename?: 'reportedFindingNote_aggregate';
  aggregate?: Maybe<ReportedFindingNote_Aggregate_Fields>;
  nodes: Array<ReportedFindingNote>;
};

export type ReportedFindingNote_Aggregate_Bool_Exp = {
  count?: InputMaybe<ReportedFindingNote_Aggregate_Bool_Exp_Count>;
};

export type ReportedFindingNote_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ReportedFindingNote_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ReportedFindingNote_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "reporting_localfindingnote" */
export type ReportedFindingNote_Aggregate_Fields = {
  __typename?: 'reportedFindingNote_aggregate_fields';
  avg?: Maybe<ReportedFindingNote_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ReportedFindingNote_Max_Fields>;
  min?: Maybe<ReportedFindingNote_Min_Fields>;
  stddev?: Maybe<ReportedFindingNote_Stddev_Fields>;
  stddev_pop?: Maybe<ReportedFindingNote_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ReportedFindingNote_Stddev_Samp_Fields>;
  sum?: Maybe<ReportedFindingNote_Sum_Fields>;
  var_pop?: Maybe<ReportedFindingNote_Var_Pop_Fields>;
  var_samp?: Maybe<ReportedFindingNote_Var_Samp_Fields>;
  variance?: Maybe<ReportedFindingNote_Variance_Fields>;
};


/** aggregate fields of "reporting_localfindingnote" */
export type ReportedFindingNote_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ReportedFindingNote_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "reporting_localfindingnote" */
export type ReportedFindingNote_Aggregate_Order_By = {
  avg?: InputMaybe<ReportedFindingNote_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ReportedFindingNote_Max_Order_By>;
  min?: InputMaybe<ReportedFindingNote_Min_Order_By>;
  stddev?: InputMaybe<ReportedFindingNote_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ReportedFindingNote_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ReportedFindingNote_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ReportedFindingNote_Sum_Order_By>;
  var_pop?: InputMaybe<ReportedFindingNote_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ReportedFindingNote_Var_Samp_Order_By>;
  variance?: InputMaybe<ReportedFindingNote_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "reporting_localfindingnote" */
export type ReportedFindingNote_Arr_Rel_Insert_Input = {
  data: Array<ReportedFindingNote_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ReportedFindingNote_On_Conflict>;
};

/** aggregate avg on columns */
export type ReportedFindingNote_Avg_Fields = {
  __typename?: 'reportedFindingNote_avg_fields';
  findingId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "reporting_localfindingnote" */
export type ReportedFindingNote_Avg_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "reporting_localfindingnote". All fields are combined with a logical 'AND'. */
export type ReportedFindingNote_Bool_Exp = {
  _and?: InputMaybe<Array<ReportedFindingNote_Bool_Exp>>;
  _not?: InputMaybe<ReportedFindingNote_Bool_Exp>;
  _or?: InputMaybe<Array<ReportedFindingNote_Bool_Exp>>;
  finding?: InputMaybe<ReportedFinding_Bool_Exp>;
  findingId?: InputMaybe<Bigint_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  operatorId?: InputMaybe<Bigint_Comparison_Exp>;
  timestamp?: InputMaybe<Date_Comparison_Exp>;
  user?: InputMaybe<User_Bool_Exp>;
};

/** unique or primary key constraints on table "reporting_localfindingnote" */
export enum ReportedFindingNote_Constraint {
  /** unique or primary key constraint on columns "id" */
  ReportingLocalfindingnotePkey = 'reporting_localfindingnote_pkey'
}

/** input type for incrementing numeric columns in table "reporting_localfindingnote" */
export type ReportedFindingNote_Inc_Input = {
  findingId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "reporting_localfindingnote" */
export type ReportedFindingNote_Insert_Input = {
  finding?: InputMaybe<ReportedFinding_Obj_Rel_Insert_Input>;
  findingId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  timestamp?: InputMaybe<Scalars['date']['input']>;
  user?: InputMaybe<User_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type ReportedFindingNote_Max_Fields = {
  __typename?: 'reportedFindingNote_max_fields';
  findingId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  timestamp?: Maybe<Scalars['date']['output']>;
};

/** order by max() on columns of table "reporting_localfindingnote" */
export type ReportedFindingNote_Max_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ReportedFindingNote_Min_Fields = {
  __typename?: 'reportedFindingNote_min_fields';
  findingId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  timestamp?: Maybe<Scalars['date']['output']>;
};

/** order by min() on columns of table "reporting_localfindingnote" */
export type ReportedFindingNote_Min_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "reporting_localfindingnote" */
export type ReportedFindingNote_Mutation_Response = {
  __typename?: 'reportedFindingNote_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ReportedFindingNote>;
};

/** on_conflict condition type for table "reporting_localfindingnote" */
export type ReportedFindingNote_On_Conflict = {
  constraint: ReportedFindingNote_Constraint;
  update_columns?: Array<ReportedFindingNote_Update_Column>;
  where?: InputMaybe<ReportedFindingNote_Bool_Exp>;
};

/** Ordering options when selecting data from "reporting_localfindingnote". */
export type ReportedFindingNote_Order_By = {
  finding?: InputMaybe<ReportedFinding_Order_By>;
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
  user?: InputMaybe<User_Order_By>;
};

/** primary key columns input for table: reporting_localfindingnote */
export type ReportedFindingNote_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "reporting_localfindingnote" */
export enum ReportedFindingNote_Select_Column {
  /** column name */
  FindingId = 'findingId',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  OperatorId = 'operatorId',
  /** column name */
  Timestamp = 'timestamp'
}

/** input type for updating data in table "reporting_localfindingnote" */
export type ReportedFindingNote_Set_Input = {
  findingId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  timestamp?: InputMaybe<Scalars['date']['input']>;
};

/** aggregate stddev on columns */
export type ReportedFindingNote_Stddev_Fields = {
  __typename?: 'reportedFindingNote_stddev_fields';
  findingId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "reporting_localfindingnote" */
export type ReportedFindingNote_Stddev_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ReportedFindingNote_Stddev_Pop_Fields = {
  __typename?: 'reportedFindingNote_stddev_pop_fields';
  findingId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "reporting_localfindingnote" */
export type ReportedFindingNote_Stddev_Pop_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ReportedFindingNote_Stddev_Samp_Fields = {
  __typename?: 'reportedFindingNote_stddev_samp_fields';
  findingId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "reporting_localfindingnote" */
export type ReportedFindingNote_Stddev_Samp_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "reportedFindingNote" */
export type ReportedFindingNote_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ReportedFindingNote_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ReportedFindingNote_Stream_Cursor_Value_Input = {
  findingId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  timestamp?: InputMaybe<Scalars['date']['input']>;
};

/** aggregate sum on columns */
export type ReportedFindingNote_Sum_Fields = {
  __typename?: 'reportedFindingNote_sum_fields';
  findingId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "reporting_localfindingnote" */
export type ReportedFindingNote_Sum_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** update columns of table "reporting_localfindingnote" */
export enum ReportedFindingNote_Update_Column {
  /** column name */
  FindingId = 'findingId',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  OperatorId = 'operatorId',
  /** column name */
  Timestamp = 'timestamp'
}

export type ReportedFindingNote_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ReportedFindingNote_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ReportedFindingNote_Set_Input>;
  /** filter the rows which have to be updated */
  where: ReportedFindingNote_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ReportedFindingNote_Var_Pop_Fields = {
  __typename?: 'reportedFindingNote_var_pop_fields';
  findingId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "reporting_localfindingnote" */
export type ReportedFindingNote_Var_Pop_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ReportedFindingNote_Var_Samp_Fields = {
  __typename?: 'reportedFindingNote_var_samp_fields';
  findingId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "reporting_localfindingnote" */
export type ReportedFindingNote_Var_Samp_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ReportedFindingNote_Variance_Fields = {
  __typename?: 'reportedFindingNote_variance_fields';
  findingId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "reporting_localfindingnote" */
export type ReportedFindingNote_Variance_Order_By = {
  findingId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
};

/** aggregated selection of "reporting_reportfindinglink" */
export type ReportedFinding_Aggregate = {
  __typename?: 'reportedFinding_aggregate';
  aggregate?: Maybe<ReportedFinding_Aggregate_Fields>;
  nodes: Array<ReportedFinding>;
};

export type ReportedFinding_Aggregate_Bool_Exp = {
  avg?: InputMaybe<ReportedFinding_Aggregate_Bool_Exp_Avg>;
  bool_and?: InputMaybe<ReportedFinding_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<ReportedFinding_Aggregate_Bool_Exp_Bool_Or>;
  corr?: InputMaybe<ReportedFinding_Aggregate_Bool_Exp_Corr>;
  count?: InputMaybe<ReportedFinding_Aggregate_Bool_Exp_Count>;
  covar_samp?: InputMaybe<ReportedFinding_Aggregate_Bool_Exp_Covar_Samp>;
  max?: InputMaybe<ReportedFinding_Aggregate_Bool_Exp_Max>;
  min?: InputMaybe<ReportedFinding_Aggregate_Bool_Exp_Min>;
  stddev_samp?: InputMaybe<ReportedFinding_Aggregate_Bool_Exp_Stddev_Samp>;
  sum?: InputMaybe<ReportedFinding_Aggregate_Bool_Exp_Sum>;
  var_samp?: InputMaybe<ReportedFinding_Aggregate_Bool_Exp_Var_Samp>;
};

export type ReportedFinding_Aggregate_Bool_Exp_Avg = {
  arguments: ReportedFinding_Select_Column_ReportedFinding_Aggregate_Bool_Exp_Avg_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ReportedFinding_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type ReportedFinding_Aggregate_Bool_Exp_Bool_And = {
  arguments: ReportedFinding_Select_Column_ReportedFinding_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ReportedFinding_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type ReportedFinding_Aggregate_Bool_Exp_Bool_Or = {
  arguments: ReportedFinding_Select_Column_ReportedFinding_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ReportedFinding_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type ReportedFinding_Aggregate_Bool_Exp_Corr = {
  arguments: ReportedFinding_Aggregate_Bool_Exp_Corr_Arguments;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ReportedFinding_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type ReportedFinding_Aggregate_Bool_Exp_Corr_Arguments = {
  X: ReportedFinding_Select_Column_ReportedFinding_Aggregate_Bool_Exp_Corr_Arguments_Columns;
  Y: ReportedFinding_Select_Column_ReportedFinding_Aggregate_Bool_Exp_Corr_Arguments_Columns;
};

export type ReportedFinding_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ReportedFinding_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ReportedFinding_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

export type ReportedFinding_Aggregate_Bool_Exp_Covar_Samp = {
  arguments: ReportedFinding_Aggregate_Bool_Exp_Covar_Samp_Arguments;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ReportedFinding_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type ReportedFinding_Aggregate_Bool_Exp_Covar_Samp_Arguments = {
  X: ReportedFinding_Select_Column_ReportedFinding_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns;
  Y: ReportedFinding_Select_Column_ReportedFinding_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns;
};

export type ReportedFinding_Aggregate_Bool_Exp_Max = {
  arguments: ReportedFinding_Select_Column_ReportedFinding_Aggregate_Bool_Exp_Max_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ReportedFinding_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type ReportedFinding_Aggregate_Bool_Exp_Min = {
  arguments: ReportedFinding_Select_Column_ReportedFinding_Aggregate_Bool_Exp_Min_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ReportedFinding_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type ReportedFinding_Aggregate_Bool_Exp_Stddev_Samp = {
  arguments: ReportedFinding_Select_Column_ReportedFinding_Aggregate_Bool_Exp_Stddev_Samp_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ReportedFinding_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type ReportedFinding_Aggregate_Bool_Exp_Sum = {
  arguments: ReportedFinding_Select_Column_ReportedFinding_Aggregate_Bool_Exp_Sum_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ReportedFinding_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type ReportedFinding_Aggregate_Bool_Exp_Var_Samp = {
  arguments: ReportedFinding_Select_Column_ReportedFinding_Aggregate_Bool_Exp_Var_Samp_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ReportedFinding_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

/** aggregate fields of "reporting_reportfindinglink" */
export type ReportedFinding_Aggregate_Fields = {
  __typename?: 'reportedFinding_aggregate_fields';
  avg?: Maybe<ReportedFinding_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ReportedFinding_Max_Fields>;
  min?: Maybe<ReportedFinding_Min_Fields>;
  stddev?: Maybe<ReportedFinding_Stddev_Fields>;
  stddev_pop?: Maybe<ReportedFinding_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ReportedFinding_Stddev_Samp_Fields>;
  sum?: Maybe<ReportedFinding_Sum_Fields>;
  var_pop?: Maybe<ReportedFinding_Var_Pop_Fields>;
  var_samp?: Maybe<ReportedFinding_Var_Samp_Fields>;
  variance?: Maybe<ReportedFinding_Variance_Fields>;
};


/** aggregate fields of "reporting_reportfindinglink" */
export type ReportedFinding_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ReportedFinding_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "reporting_reportfindinglink" */
export type ReportedFinding_Aggregate_Order_By = {
  avg?: InputMaybe<ReportedFinding_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ReportedFinding_Max_Order_By>;
  min?: InputMaybe<ReportedFinding_Min_Order_By>;
  stddev?: InputMaybe<ReportedFinding_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ReportedFinding_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ReportedFinding_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ReportedFinding_Sum_Order_By>;
  var_pop?: InputMaybe<ReportedFinding_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ReportedFinding_Var_Samp_Order_By>;
  variance?: InputMaybe<ReportedFinding_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ReportedFinding_Append_Input = {
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "reporting_reportfindinglink" */
export type ReportedFinding_Arr_Rel_Insert_Input = {
  data: Array<ReportedFinding_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ReportedFinding_On_Conflict>;
};

/** aggregate avg on columns */
export type ReportedFinding_Avg_Fields = {
  __typename?: 'reportedFinding_avg_fields';
  assignedToId?: Maybe<Scalars['Float']['output']>;
  cvssScore?: Maybe<Scalars['Float']['output']>;
  findingTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  reportId?: Maybe<Scalars['Float']['output']>;
  severityId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "reporting_reportfindinglink" */
export type ReportedFinding_Avg_Order_By = {
  assignedToId?: InputMaybe<Order_By>;
  cvssScore?: InputMaybe<Order_By>;
  findingTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  reportId?: InputMaybe<Order_By>;
  severityId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "reporting_reportfindinglink". All fields are combined with a logical 'AND'. */
export type ReportedFinding_Bool_Exp = {
  _and?: InputMaybe<Array<ReportedFinding_Bool_Exp>>;
  _not?: InputMaybe<ReportedFinding_Bool_Exp>;
  _or?: InputMaybe<Array<ReportedFinding_Bool_Exp>>;
  addedAsBlank?: InputMaybe<Boolean_Comparison_Exp>;
  affectedEntities?: InputMaybe<String_Comparison_Exp>;
  assignedTo?: InputMaybe<User_Bool_Exp>;
  assignedToId?: InputMaybe<Bigint_Comparison_Exp>;
  comments?: InputMaybe<ReportedFindingNote_Bool_Exp>;
  comments_aggregate?: InputMaybe<ReportedFindingNote_Aggregate_Bool_Exp>;
  complete?: InputMaybe<Boolean_Comparison_Exp>;
  cvssScore?: InputMaybe<Float8_Comparison_Exp>;
  cvssVector?: InputMaybe<String_Comparison_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  evidences?: InputMaybe<Evidence_Bool_Exp>;
  evidences_aggregate?: InputMaybe<Evidence_Aggregate_Bool_Exp>;
  extraFields?: InputMaybe<Jsonb_Comparison_Exp>;
  findingGuidance?: InputMaybe<String_Comparison_Exp>;
  findingType?: InputMaybe<FindingType_Bool_Exp>;
  findingTypeId?: InputMaybe<Bigint_Comparison_Exp>;
  hostDetectionTechniques?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  impact?: InputMaybe<String_Comparison_Exp>;
  mitigation?: InputMaybe<String_Comparison_Exp>;
  networkDetectionTechniques?: InputMaybe<String_Comparison_Exp>;
  position?: InputMaybe<Int_Comparison_Exp>;
  references?: InputMaybe<String_Comparison_Exp>;
  replication_steps?: InputMaybe<String_Comparison_Exp>;
  report?: InputMaybe<Report_Bool_Exp>;
  reportId?: InputMaybe<Bigint_Comparison_Exp>;
  severity?: InputMaybe<FindingSeverity_Bool_Exp>;
  severityId?: InputMaybe<Bigint_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "reporting_reportfindinglink" */
export enum ReportedFinding_Constraint {
  /** unique or primary key constraint on columns "id" */
  ReportingReportfindinglinkPkey = 'reporting_reportfindinglink_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ReportedFinding_Delete_At_Path_Input = {
  extraFields?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ReportedFinding_Delete_Elem_Input = {
  extraFields?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ReportedFinding_Delete_Key_Input = {
  extraFields?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "reporting_reportfindinglink" */
export type ReportedFinding_Inc_Input = {
  assignedToId?: InputMaybe<Scalars['bigint']['input']>;
  cvssScore?: InputMaybe<Scalars['float8']['input']>;
  findingTypeId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  position?: InputMaybe<Scalars['Int']['input']>;
  reportId?: InputMaybe<Scalars['bigint']['input']>;
  severityId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "reporting_reportfindinglink" */
export type ReportedFinding_Insert_Input = {
  addedAsBlank?: InputMaybe<Scalars['Boolean']['input']>;
  affectedEntities?: InputMaybe<Scalars['String']['input']>;
  assignedTo?: InputMaybe<User_Obj_Rel_Insert_Input>;
  assignedToId?: InputMaybe<Scalars['bigint']['input']>;
  comments?: InputMaybe<ReportedFindingNote_Arr_Rel_Insert_Input>;
  complete?: InputMaybe<Scalars['Boolean']['input']>;
  cvssScore?: InputMaybe<Scalars['float8']['input']>;
  cvssVector?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  evidences?: InputMaybe<Evidence_Arr_Rel_Insert_Input>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  findingGuidance?: InputMaybe<Scalars['String']['input']>;
  findingType?: InputMaybe<FindingType_Obj_Rel_Insert_Input>;
  findingTypeId?: InputMaybe<Scalars['bigint']['input']>;
  hostDetectionTechniques?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  impact?: InputMaybe<Scalars['String']['input']>;
  mitigation?: InputMaybe<Scalars['String']['input']>;
  networkDetectionTechniques?: InputMaybe<Scalars['String']['input']>;
  position?: InputMaybe<Scalars['Int']['input']>;
  references?: InputMaybe<Scalars['String']['input']>;
  replication_steps?: InputMaybe<Scalars['String']['input']>;
  report?: InputMaybe<Report_Obj_Rel_Insert_Input>;
  reportId?: InputMaybe<Scalars['bigint']['input']>;
  severity?: InputMaybe<FindingSeverity_Obj_Rel_Insert_Input>;
  severityId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type ReportedFinding_Max_Fields = {
  __typename?: 'reportedFinding_max_fields';
  affectedEntities?: Maybe<Scalars['String']['output']>;
  assignedToId?: Maybe<Scalars['bigint']['output']>;
  cvssScore?: Maybe<Scalars['float8']['output']>;
  cvssVector?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  findingGuidance?: Maybe<Scalars['String']['output']>;
  findingTypeId?: Maybe<Scalars['bigint']['output']>;
  hostDetectionTechniques?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  impact?: Maybe<Scalars['String']['output']>;
  mitigation?: Maybe<Scalars['String']['output']>;
  networkDetectionTechniques?: Maybe<Scalars['String']['output']>;
  position?: Maybe<Scalars['Int']['output']>;
  references?: Maybe<Scalars['String']['output']>;
  replication_steps?: Maybe<Scalars['String']['output']>;
  reportId?: Maybe<Scalars['bigint']['output']>;
  severityId?: Maybe<Scalars['bigint']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "reporting_reportfindinglink" */
export type ReportedFinding_Max_Order_By = {
  affectedEntities?: InputMaybe<Order_By>;
  assignedToId?: InputMaybe<Order_By>;
  cvssScore?: InputMaybe<Order_By>;
  cvssVector?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  findingGuidance?: InputMaybe<Order_By>;
  findingTypeId?: InputMaybe<Order_By>;
  hostDetectionTechniques?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  impact?: InputMaybe<Order_By>;
  mitigation?: InputMaybe<Order_By>;
  networkDetectionTechniques?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  references?: InputMaybe<Order_By>;
  replication_steps?: InputMaybe<Order_By>;
  reportId?: InputMaybe<Order_By>;
  severityId?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ReportedFinding_Min_Fields = {
  __typename?: 'reportedFinding_min_fields';
  affectedEntities?: Maybe<Scalars['String']['output']>;
  assignedToId?: Maybe<Scalars['bigint']['output']>;
  cvssScore?: Maybe<Scalars['float8']['output']>;
  cvssVector?: Maybe<Scalars['String']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  findingGuidance?: Maybe<Scalars['String']['output']>;
  findingTypeId?: Maybe<Scalars['bigint']['output']>;
  hostDetectionTechniques?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  impact?: Maybe<Scalars['String']['output']>;
  mitigation?: Maybe<Scalars['String']['output']>;
  networkDetectionTechniques?: Maybe<Scalars['String']['output']>;
  position?: Maybe<Scalars['Int']['output']>;
  references?: Maybe<Scalars['String']['output']>;
  replication_steps?: Maybe<Scalars['String']['output']>;
  reportId?: Maybe<Scalars['bigint']['output']>;
  severityId?: Maybe<Scalars['bigint']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "reporting_reportfindinglink" */
export type ReportedFinding_Min_Order_By = {
  affectedEntities?: InputMaybe<Order_By>;
  assignedToId?: InputMaybe<Order_By>;
  cvssScore?: InputMaybe<Order_By>;
  cvssVector?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  findingGuidance?: InputMaybe<Order_By>;
  findingTypeId?: InputMaybe<Order_By>;
  hostDetectionTechniques?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  impact?: InputMaybe<Order_By>;
  mitigation?: InputMaybe<Order_By>;
  networkDetectionTechniques?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  references?: InputMaybe<Order_By>;
  replication_steps?: InputMaybe<Order_By>;
  reportId?: InputMaybe<Order_By>;
  severityId?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "reporting_reportfindinglink" */
export type ReportedFinding_Mutation_Response = {
  __typename?: 'reportedFinding_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ReportedFinding>;
};

/** input type for inserting object relation for remote table "reporting_reportfindinglink" */
export type ReportedFinding_Obj_Rel_Insert_Input = {
  data: ReportedFinding_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ReportedFinding_On_Conflict>;
};

/** on_conflict condition type for table "reporting_reportfindinglink" */
export type ReportedFinding_On_Conflict = {
  constraint: ReportedFinding_Constraint;
  update_columns?: Array<ReportedFinding_Update_Column>;
  where?: InputMaybe<ReportedFinding_Bool_Exp>;
};

/** Ordering options when selecting data from "reporting_reportfindinglink". */
export type ReportedFinding_Order_By = {
  addedAsBlank?: InputMaybe<Order_By>;
  affectedEntities?: InputMaybe<Order_By>;
  assignedTo?: InputMaybe<User_Order_By>;
  assignedToId?: InputMaybe<Order_By>;
  comments_aggregate?: InputMaybe<ReportedFindingNote_Aggregate_Order_By>;
  complete?: InputMaybe<Order_By>;
  cvssScore?: InputMaybe<Order_By>;
  cvssVector?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  evidences_aggregate?: InputMaybe<Evidence_Aggregate_Order_By>;
  extraFields?: InputMaybe<Order_By>;
  findingGuidance?: InputMaybe<Order_By>;
  findingType?: InputMaybe<FindingType_Order_By>;
  findingTypeId?: InputMaybe<Order_By>;
  hostDetectionTechniques?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  impact?: InputMaybe<Order_By>;
  mitigation?: InputMaybe<Order_By>;
  networkDetectionTechniques?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  references?: InputMaybe<Order_By>;
  replication_steps?: InputMaybe<Order_By>;
  report?: InputMaybe<Report_Order_By>;
  reportId?: InputMaybe<Order_By>;
  severity?: InputMaybe<FindingSeverity_Order_By>;
  severityId?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** primary key columns input for table: reporting_reportfindinglink */
export type ReportedFinding_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ReportedFinding_Prepend_Input = {
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "reporting_reportfindinglink" */
export enum ReportedFinding_Select_Column {
  /** column name */
  AddedAsBlank = 'addedAsBlank',
  /** column name */
  AffectedEntities = 'affectedEntities',
  /** column name */
  AssignedToId = 'assignedToId',
  /** column name */
  Complete = 'complete',
  /** column name */
  CvssScore = 'cvssScore',
  /** column name */
  CvssVector = 'cvssVector',
  /** column name */
  Description = 'description',
  /** column name */
  ExtraFields = 'extraFields',
  /** column name */
  FindingGuidance = 'findingGuidance',
  /** column name */
  FindingTypeId = 'findingTypeId',
  /** column name */
  HostDetectionTechniques = 'hostDetectionTechniques',
  /** column name */
  Id = 'id',
  /** column name */
  Impact = 'impact',
  /** column name */
  Mitigation = 'mitigation',
  /** column name */
  NetworkDetectionTechniques = 'networkDetectionTechniques',
  /** column name */
  Position = 'position',
  /** column name */
  References = 'references',
  /** column name */
  ReplicationSteps = 'replication_steps',
  /** column name */
  ReportId = 'reportId',
  /** column name */
  SeverityId = 'severityId',
  /** column name */
  Title = 'title'
}

/** select "reportedFinding_aggregate_bool_exp_avg_arguments_columns" columns of table "reporting_reportfindinglink" */
export enum ReportedFinding_Select_Column_ReportedFinding_Aggregate_Bool_Exp_Avg_Arguments_Columns {
  /** column name */
  CvssScore = 'cvssScore'
}

/** select "reportedFinding_aggregate_bool_exp_bool_and_arguments_columns" columns of table "reporting_reportfindinglink" */
export enum ReportedFinding_Select_Column_ReportedFinding_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  AddedAsBlank = 'addedAsBlank',
  /** column name */
  Complete = 'complete'
}

/** select "reportedFinding_aggregate_bool_exp_bool_or_arguments_columns" columns of table "reporting_reportfindinglink" */
export enum ReportedFinding_Select_Column_ReportedFinding_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  AddedAsBlank = 'addedAsBlank',
  /** column name */
  Complete = 'complete'
}

/** select "reportedFinding_aggregate_bool_exp_corr_arguments_columns" columns of table "reporting_reportfindinglink" */
export enum ReportedFinding_Select_Column_ReportedFinding_Aggregate_Bool_Exp_Corr_Arguments_Columns {
  /** column name */
  CvssScore = 'cvssScore'
}

/** select "reportedFinding_aggregate_bool_exp_covar_samp_arguments_columns" columns of table "reporting_reportfindinglink" */
export enum ReportedFinding_Select_Column_ReportedFinding_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns {
  /** column name */
  CvssScore = 'cvssScore'
}

/** select "reportedFinding_aggregate_bool_exp_max_arguments_columns" columns of table "reporting_reportfindinglink" */
export enum ReportedFinding_Select_Column_ReportedFinding_Aggregate_Bool_Exp_Max_Arguments_Columns {
  /** column name */
  CvssScore = 'cvssScore'
}

/** select "reportedFinding_aggregate_bool_exp_min_arguments_columns" columns of table "reporting_reportfindinglink" */
export enum ReportedFinding_Select_Column_ReportedFinding_Aggregate_Bool_Exp_Min_Arguments_Columns {
  /** column name */
  CvssScore = 'cvssScore'
}

/** select "reportedFinding_aggregate_bool_exp_stddev_samp_arguments_columns" columns of table "reporting_reportfindinglink" */
export enum ReportedFinding_Select_Column_ReportedFinding_Aggregate_Bool_Exp_Stddev_Samp_Arguments_Columns {
  /** column name */
  CvssScore = 'cvssScore'
}

/** select "reportedFinding_aggregate_bool_exp_sum_arguments_columns" columns of table "reporting_reportfindinglink" */
export enum ReportedFinding_Select_Column_ReportedFinding_Aggregate_Bool_Exp_Sum_Arguments_Columns {
  /** column name */
  CvssScore = 'cvssScore'
}

/** select "reportedFinding_aggregate_bool_exp_var_samp_arguments_columns" columns of table "reporting_reportfindinglink" */
export enum ReportedFinding_Select_Column_ReportedFinding_Aggregate_Bool_Exp_Var_Samp_Arguments_Columns {
  /** column name */
  CvssScore = 'cvssScore'
}

/** input type for updating data in table "reporting_reportfindinglink" */
export type ReportedFinding_Set_Input = {
  addedAsBlank?: InputMaybe<Scalars['Boolean']['input']>;
  affectedEntities?: InputMaybe<Scalars['String']['input']>;
  assignedToId?: InputMaybe<Scalars['bigint']['input']>;
  complete?: InputMaybe<Scalars['Boolean']['input']>;
  cvssScore?: InputMaybe<Scalars['float8']['input']>;
  cvssVector?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  findingGuidance?: InputMaybe<Scalars['String']['input']>;
  findingTypeId?: InputMaybe<Scalars['bigint']['input']>;
  hostDetectionTechniques?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  impact?: InputMaybe<Scalars['String']['input']>;
  mitigation?: InputMaybe<Scalars['String']['input']>;
  networkDetectionTechniques?: InputMaybe<Scalars['String']['input']>;
  position?: InputMaybe<Scalars['Int']['input']>;
  references?: InputMaybe<Scalars['String']['input']>;
  replication_steps?: InputMaybe<Scalars['String']['input']>;
  reportId?: InputMaybe<Scalars['bigint']['input']>;
  severityId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type ReportedFinding_Stddev_Fields = {
  __typename?: 'reportedFinding_stddev_fields';
  assignedToId?: Maybe<Scalars['Float']['output']>;
  cvssScore?: Maybe<Scalars['Float']['output']>;
  findingTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  reportId?: Maybe<Scalars['Float']['output']>;
  severityId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "reporting_reportfindinglink" */
export type ReportedFinding_Stddev_Order_By = {
  assignedToId?: InputMaybe<Order_By>;
  cvssScore?: InputMaybe<Order_By>;
  findingTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  reportId?: InputMaybe<Order_By>;
  severityId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ReportedFinding_Stddev_Pop_Fields = {
  __typename?: 'reportedFinding_stddev_pop_fields';
  assignedToId?: Maybe<Scalars['Float']['output']>;
  cvssScore?: Maybe<Scalars['Float']['output']>;
  findingTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  reportId?: Maybe<Scalars['Float']['output']>;
  severityId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "reporting_reportfindinglink" */
export type ReportedFinding_Stddev_Pop_Order_By = {
  assignedToId?: InputMaybe<Order_By>;
  cvssScore?: InputMaybe<Order_By>;
  findingTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  reportId?: InputMaybe<Order_By>;
  severityId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ReportedFinding_Stddev_Samp_Fields = {
  __typename?: 'reportedFinding_stddev_samp_fields';
  assignedToId?: Maybe<Scalars['Float']['output']>;
  cvssScore?: Maybe<Scalars['Float']['output']>;
  findingTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  reportId?: Maybe<Scalars['Float']['output']>;
  severityId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "reporting_reportfindinglink" */
export type ReportedFinding_Stddev_Samp_Order_By = {
  assignedToId?: InputMaybe<Order_By>;
  cvssScore?: InputMaybe<Order_By>;
  findingTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  reportId?: InputMaybe<Order_By>;
  severityId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "reportedFinding" */
export type ReportedFinding_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ReportedFinding_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ReportedFinding_Stream_Cursor_Value_Input = {
  addedAsBlank?: InputMaybe<Scalars['Boolean']['input']>;
  affectedEntities?: InputMaybe<Scalars['String']['input']>;
  assignedToId?: InputMaybe<Scalars['bigint']['input']>;
  complete?: InputMaybe<Scalars['Boolean']['input']>;
  cvssScore?: InputMaybe<Scalars['float8']['input']>;
  cvssVector?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  findingGuidance?: InputMaybe<Scalars['String']['input']>;
  findingTypeId?: InputMaybe<Scalars['bigint']['input']>;
  hostDetectionTechniques?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  impact?: InputMaybe<Scalars['String']['input']>;
  mitigation?: InputMaybe<Scalars['String']['input']>;
  networkDetectionTechniques?: InputMaybe<Scalars['String']['input']>;
  position?: InputMaybe<Scalars['Int']['input']>;
  references?: InputMaybe<Scalars['String']['input']>;
  replication_steps?: InputMaybe<Scalars['String']['input']>;
  reportId?: InputMaybe<Scalars['bigint']['input']>;
  severityId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type ReportedFinding_Sum_Fields = {
  __typename?: 'reportedFinding_sum_fields';
  assignedToId?: Maybe<Scalars['bigint']['output']>;
  cvssScore?: Maybe<Scalars['float8']['output']>;
  findingTypeId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  position?: Maybe<Scalars['Int']['output']>;
  reportId?: Maybe<Scalars['bigint']['output']>;
  severityId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "reporting_reportfindinglink" */
export type ReportedFinding_Sum_Order_By = {
  assignedToId?: InputMaybe<Order_By>;
  cvssScore?: InputMaybe<Order_By>;
  findingTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  reportId?: InputMaybe<Order_By>;
  severityId?: InputMaybe<Order_By>;
};

/** update columns of table "reporting_reportfindinglink" */
export enum ReportedFinding_Update_Column {
  /** column name */
  AddedAsBlank = 'addedAsBlank',
  /** column name */
  AffectedEntities = 'affectedEntities',
  /** column name */
  AssignedToId = 'assignedToId',
  /** column name */
  Complete = 'complete',
  /** column name */
  CvssScore = 'cvssScore',
  /** column name */
  CvssVector = 'cvssVector',
  /** column name */
  Description = 'description',
  /** column name */
  ExtraFields = 'extraFields',
  /** column name */
  FindingGuidance = 'findingGuidance',
  /** column name */
  FindingTypeId = 'findingTypeId',
  /** column name */
  HostDetectionTechniques = 'hostDetectionTechniques',
  /** column name */
  Id = 'id',
  /** column name */
  Impact = 'impact',
  /** column name */
  Mitigation = 'mitigation',
  /** column name */
  NetworkDetectionTechniques = 'networkDetectionTechniques',
  /** column name */
  Position = 'position',
  /** column name */
  References = 'references',
  /** column name */
  ReplicationSteps = 'replication_steps',
  /** column name */
  ReportId = 'reportId',
  /** column name */
  SeverityId = 'severityId',
  /** column name */
  Title = 'title'
}

export type ReportedFinding_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<ReportedFinding_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<ReportedFinding_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<ReportedFinding_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<ReportedFinding_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ReportedFinding_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<ReportedFinding_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ReportedFinding_Set_Input>;
  /** filter the rows which have to be updated */
  where: ReportedFinding_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ReportedFinding_Var_Pop_Fields = {
  __typename?: 'reportedFinding_var_pop_fields';
  assignedToId?: Maybe<Scalars['Float']['output']>;
  cvssScore?: Maybe<Scalars['Float']['output']>;
  findingTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  reportId?: Maybe<Scalars['Float']['output']>;
  severityId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "reporting_reportfindinglink" */
export type ReportedFinding_Var_Pop_Order_By = {
  assignedToId?: InputMaybe<Order_By>;
  cvssScore?: InputMaybe<Order_By>;
  findingTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  reportId?: InputMaybe<Order_By>;
  severityId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ReportedFinding_Var_Samp_Fields = {
  __typename?: 'reportedFinding_var_samp_fields';
  assignedToId?: Maybe<Scalars['Float']['output']>;
  cvssScore?: Maybe<Scalars['Float']['output']>;
  findingTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  reportId?: Maybe<Scalars['Float']['output']>;
  severityId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "reporting_reportfindinglink" */
export type ReportedFinding_Var_Samp_Order_By = {
  assignedToId?: InputMaybe<Order_By>;
  cvssScore?: InputMaybe<Order_By>;
  findingTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  reportId?: InputMaybe<Order_By>;
  severityId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ReportedFinding_Variance_Fields = {
  __typename?: 'reportedFinding_variance_fields';
  assignedToId?: Maybe<Scalars['Float']['output']>;
  cvssScore?: Maybe<Scalars['Float']['output']>;
  findingTypeId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  reportId?: Maybe<Scalars['Float']['output']>;
  severityId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "reporting_reportfindinglink" */
export type ReportedFinding_Variance_Order_By = {
  assignedToId?: InputMaybe<Order_By>;
  cvssScore?: InputMaybe<Order_By>;
  findingTypeId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  reportId?: InputMaybe<Order_By>;
  severityId?: InputMaybe<Order_By>;
};

/** columns and relationships of "reporting_observation" */
export type Reporting_Observation = {
  __typename?: 'reporting_observation';
  description: Scalars['String']['output'];
  extraFields: Scalars['jsonb']['output'];
  id: Scalars['bigint']['output'];
  title: Scalars['String']['output'];
};


/** columns and relationships of "reporting_observation" */
export type Reporting_ObservationExtraFieldsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "reporting_observation" */
export type Reporting_Observation_Aggregate = {
  __typename?: 'reporting_observation_aggregate';
  aggregate?: Maybe<Reporting_Observation_Aggregate_Fields>;
  nodes: Array<Reporting_Observation>;
};

/** aggregate fields of "reporting_observation" */
export type Reporting_Observation_Aggregate_Fields = {
  __typename?: 'reporting_observation_aggregate_fields';
  avg?: Maybe<Reporting_Observation_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Reporting_Observation_Max_Fields>;
  min?: Maybe<Reporting_Observation_Min_Fields>;
  stddev?: Maybe<Reporting_Observation_Stddev_Fields>;
  stddev_pop?: Maybe<Reporting_Observation_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Reporting_Observation_Stddev_Samp_Fields>;
  sum?: Maybe<Reporting_Observation_Sum_Fields>;
  var_pop?: Maybe<Reporting_Observation_Var_Pop_Fields>;
  var_samp?: Maybe<Reporting_Observation_Var_Samp_Fields>;
  variance?: Maybe<Reporting_Observation_Variance_Fields>;
};


/** aggregate fields of "reporting_observation" */
export type Reporting_Observation_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Reporting_Observation_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Reporting_Observation_Append_Input = {
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
};

/** aggregate avg on columns */
export type Reporting_Observation_Avg_Fields = {
  __typename?: 'reporting_observation_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "reporting_observation". All fields are combined with a logical 'AND'. */
export type Reporting_Observation_Bool_Exp = {
  _and?: InputMaybe<Array<Reporting_Observation_Bool_Exp>>;
  _not?: InputMaybe<Reporting_Observation_Bool_Exp>;
  _or?: InputMaybe<Array<Reporting_Observation_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  extraFields?: InputMaybe<Jsonb_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "reporting_observation" */
export enum Reporting_Observation_Constraint {
  /** unique or primary key constraint on columns "id" */
  ReportingObservationPkey = 'reporting_observation_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Reporting_Observation_Delete_At_Path_Input = {
  extraFields?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Reporting_Observation_Delete_Elem_Input = {
  extraFields?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Reporting_Observation_Delete_Key_Input = {
  extraFields?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "reporting_observation" */
export type Reporting_Observation_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "reporting_observation" */
export type Reporting_Observation_Insert_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Reporting_Observation_Max_Fields = {
  __typename?: 'reporting_observation_max_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Reporting_Observation_Min_Fields = {
  __typename?: 'reporting_observation_min_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "reporting_observation" */
export type Reporting_Observation_Mutation_Response = {
  __typename?: 'reporting_observation_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Reporting_Observation>;
};

/** on_conflict condition type for table "reporting_observation" */
export type Reporting_Observation_On_Conflict = {
  constraint: Reporting_Observation_Constraint;
  update_columns?: Array<Reporting_Observation_Update_Column>;
  where?: InputMaybe<Reporting_Observation_Bool_Exp>;
};

/** Ordering options when selecting data from "reporting_observation". */
export type Reporting_Observation_Order_By = {
  description?: InputMaybe<Order_By>;
  extraFields?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** primary key columns input for table: reporting_observation */
export type Reporting_Observation_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Reporting_Observation_Prepend_Input = {
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "reporting_observation" */
export enum Reporting_Observation_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  ExtraFields = 'extraFields',
  /** column name */
  Id = 'id',
  /** column name */
  Title = 'title'
}

/** input type for updating data in table "reporting_observation" */
export type Reporting_Observation_Set_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Reporting_Observation_Stddev_Fields = {
  __typename?: 'reporting_observation_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Reporting_Observation_Stddev_Pop_Fields = {
  __typename?: 'reporting_observation_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Reporting_Observation_Stddev_Samp_Fields = {
  __typename?: 'reporting_observation_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "reporting_observation" */
export type Reporting_Observation_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Reporting_Observation_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Reporting_Observation_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Reporting_Observation_Sum_Fields = {
  __typename?: 'reporting_observation_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
};

/** update columns of table "reporting_observation" */
export enum Reporting_Observation_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  ExtraFields = 'extraFields',
  /** column name */
  Id = 'id',
  /** column name */
  Title = 'title'
}

export type Reporting_Observation_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Reporting_Observation_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Reporting_Observation_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Reporting_Observation_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Reporting_Observation_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Reporting_Observation_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Reporting_Observation_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Reporting_Observation_Set_Input>;
  /** filter the rows which have to be updated */
  where: Reporting_Observation_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Reporting_Observation_Var_Pop_Fields = {
  __typename?: 'reporting_observation_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Reporting_Observation_Var_Samp_Fields = {
  __typename?: 'reporting_observation_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Reporting_Observation_Variance_Fields = {
  __typename?: 'reporting_observation_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "reporting_reportobservationlink" */
export type Reporting_Reportobservationlink = {
  __typename?: 'reporting_reportobservationlink';
  added_as_blank: Scalars['Boolean']['output'];
  assigned_to_id?: Maybe<Scalars['bigint']['output']>;
  /** An object relationship */
  asssignedTo?: Maybe<User>;
  description: Scalars['String']['output'];
  extraFields: Scalars['jsonb']['output'];
  id: Scalars['bigint']['output'];
  position: Scalars['Int']['output'];
  /** An object relationship */
  report?: Maybe<Report>;
  report_id?: Maybe<Scalars['bigint']['output']>;
  title: Scalars['String']['output'];
};


/** columns and relationships of "reporting_reportobservationlink" */
export type Reporting_ReportobservationlinkExtraFieldsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "reporting_reportobservationlink" */
export type Reporting_Reportobservationlink_Aggregate = {
  __typename?: 'reporting_reportobservationlink_aggregate';
  aggregate?: Maybe<Reporting_Reportobservationlink_Aggregate_Fields>;
  nodes: Array<Reporting_Reportobservationlink>;
};

export type Reporting_Reportobservationlink_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Reporting_Reportobservationlink_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Reporting_Reportobservationlink_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Reporting_Reportobservationlink_Aggregate_Bool_Exp_Count>;
};

export type Reporting_Reportobservationlink_Aggregate_Bool_Exp_Bool_And = {
  arguments: Reporting_Reportobservationlink_Select_Column_Reporting_Reportobservationlink_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Reporting_Reportobservationlink_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Reporting_Reportobservationlink_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Reporting_Reportobservationlink_Select_Column_Reporting_Reportobservationlink_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Reporting_Reportobservationlink_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Reporting_Reportobservationlink_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Reporting_Reportobservationlink_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Reporting_Reportobservationlink_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "reporting_reportobservationlink" */
export type Reporting_Reportobservationlink_Aggregate_Fields = {
  __typename?: 'reporting_reportobservationlink_aggregate_fields';
  avg?: Maybe<Reporting_Reportobservationlink_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Reporting_Reportobservationlink_Max_Fields>;
  min?: Maybe<Reporting_Reportobservationlink_Min_Fields>;
  stddev?: Maybe<Reporting_Reportobservationlink_Stddev_Fields>;
  stddev_pop?: Maybe<Reporting_Reportobservationlink_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Reporting_Reportobservationlink_Stddev_Samp_Fields>;
  sum?: Maybe<Reporting_Reportobservationlink_Sum_Fields>;
  var_pop?: Maybe<Reporting_Reportobservationlink_Var_Pop_Fields>;
  var_samp?: Maybe<Reporting_Reportobservationlink_Var_Samp_Fields>;
  variance?: Maybe<Reporting_Reportobservationlink_Variance_Fields>;
};


/** aggregate fields of "reporting_reportobservationlink" */
export type Reporting_Reportobservationlink_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Reporting_Reportobservationlink_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "reporting_reportobservationlink" */
export type Reporting_Reportobservationlink_Aggregate_Order_By = {
  avg?: InputMaybe<Reporting_Reportobservationlink_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Reporting_Reportobservationlink_Max_Order_By>;
  min?: InputMaybe<Reporting_Reportobservationlink_Min_Order_By>;
  stddev?: InputMaybe<Reporting_Reportobservationlink_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Reporting_Reportobservationlink_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Reporting_Reportobservationlink_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Reporting_Reportobservationlink_Sum_Order_By>;
  var_pop?: InputMaybe<Reporting_Reportobservationlink_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Reporting_Reportobservationlink_Var_Samp_Order_By>;
  variance?: InputMaybe<Reporting_Reportobservationlink_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Reporting_Reportobservationlink_Append_Input = {
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "reporting_reportobservationlink" */
export type Reporting_Reportobservationlink_Arr_Rel_Insert_Input = {
  data: Array<Reporting_Reportobservationlink_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Reporting_Reportobservationlink_On_Conflict>;
};

/** aggregate avg on columns */
export type Reporting_Reportobservationlink_Avg_Fields = {
  __typename?: 'reporting_reportobservationlink_avg_fields';
  assigned_to_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  report_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "reporting_reportobservationlink" */
export type Reporting_Reportobservationlink_Avg_Order_By = {
  assigned_to_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  report_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "reporting_reportobservationlink". All fields are combined with a logical 'AND'. */
export type Reporting_Reportobservationlink_Bool_Exp = {
  _and?: InputMaybe<Array<Reporting_Reportobservationlink_Bool_Exp>>;
  _not?: InputMaybe<Reporting_Reportobservationlink_Bool_Exp>;
  _or?: InputMaybe<Array<Reporting_Reportobservationlink_Bool_Exp>>;
  added_as_blank?: InputMaybe<Boolean_Comparison_Exp>;
  assigned_to_id?: InputMaybe<Bigint_Comparison_Exp>;
  asssignedTo?: InputMaybe<User_Bool_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  extraFields?: InputMaybe<Jsonb_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  position?: InputMaybe<Int_Comparison_Exp>;
  report?: InputMaybe<Report_Bool_Exp>;
  report_id?: InputMaybe<Bigint_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "reporting_reportobservationlink" */
export enum Reporting_Reportobservationlink_Constraint {
  /** unique or primary key constraint on columns "id" */
  ReportingReportobservationlinkPkey = 'reporting_reportobservationlink_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Reporting_Reportobservationlink_Delete_At_Path_Input = {
  extraFields?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Reporting_Reportobservationlink_Delete_Elem_Input = {
  extraFields?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Reporting_Reportobservationlink_Delete_Key_Input = {
  extraFields?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "reporting_reportobservationlink" */
export type Reporting_Reportobservationlink_Inc_Input = {
  assigned_to_id?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  position?: InputMaybe<Scalars['Int']['input']>;
  report_id?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "reporting_reportobservationlink" */
export type Reporting_Reportobservationlink_Insert_Input = {
  added_as_blank?: InputMaybe<Scalars['Boolean']['input']>;
  assigned_to_id?: InputMaybe<Scalars['bigint']['input']>;
  asssignedTo?: InputMaybe<User_Obj_Rel_Insert_Input>;
  description?: InputMaybe<Scalars['String']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  position?: InputMaybe<Scalars['Int']['input']>;
  report?: InputMaybe<Report_Obj_Rel_Insert_Input>;
  report_id?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Reporting_Reportobservationlink_Max_Fields = {
  __typename?: 'reporting_reportobservationlink_max_fields';
  assigned_to_id?: Maybe<Scalars['bigint']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  position?: Maybe<Scalars['Int']['output']>;
  report_id?: Maybe<Scalars['bigint']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "reporting_reportobservationlink" */
export type Reporting_Reportobservationlink_Max_Order_By = {
  assigned_to_id?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  report_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Reporting_Reportobservationlink_Min_Fields = {
  __typename?: 'reporting_reportobservationlink_min_fields';
  assigned_to_id?: Maybe<Scalars['bigint']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  position?: Maybe<Scalars['Int']['output']>;
  report_id?: Maybe<Scalars['bigint']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "reporting_reportobservationlink" */
export type Reporting_Reportobservationlink_Min_Order_By = {
  assigned_to_id?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  report_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "reporting_reportobservationlink" */
export type Reporting_Reportobservationlink_Mutation_Response = {
  __typename?: 'reporting_reportobservationlink_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Reporting_Reportobservationlink>;
};

/** on_conflict condition type for table "reporting_reportobservationlink" */
export type Reporting_Reportobservationlink_On_Conflict = {
  constraint: Reporting_Reportobservationlink_Constraint;
  update_columns?: Array<Reporting_Reportobservationlink_Update_Column>;
  where?: InputMaybe<Reporting_Reportobservationlink_Bool_Exp>;
};

/** Ordering options when selecting data from "reporting_reportobservationlink". */
export type Reporting_Reportobservationlink_Order_By = {
  added_as_blank?: InputMaybe<Order_By>;
  assigned_to_id?: InputMaybe<Order_By>;
  asssignedTo?: InputMaybe<User_Order_By>;
  description?: InputMaybe<Order_By>;
  extraFields?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  report?: InputMaybe<Report_Order_By>;
  report_id?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** primary key columns input for table: reporting_reportobservationlink */
export type Reporting_Reportobservationlink_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Reporting_Reportobservationlink_Prepend_Input = {
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "reporting_reportobservationlink" */
export enum Reporting_Reportobservationlink_Select_Column {
  /** column name */
  AddedAsBlank = 'added_as_blank',
  /** column name */
  AssignedToId = 'assigned_to_id',
  /** column name */
  Description = 'description',
  /** column name */
  ExtraFields = 'extraFields',
  /** column name */
  Id = 'id',
  /** column name */
  Position = 'position',
  /** column name */
  ReportId = 'report_id',
  /** column name */
  Title = 'title'
}

/** select "reporting_reportobservationlink_aggregate_bool_exp_bool_and_arguments_columns" columns of table "reporting_reportobservationlink" */
export enum Reporting_Reportobservationlink_Select_Column_Reporting_Reportobservationlink_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  AddedAsBlank = 'added_as_blank'
}

/** select "reporting_reportobservationlink_aggregate_bool_exp_bool_or_arguments_columns" columns of table "reporting_reportobservationlink" */
export enum Reporting_Reportobservationlink_Select_Column_Reporting_Reportobservationlink_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  AddedAsBlank = 'added_as_blank'
}

/** input type for updating data in table "reporting_reportobservationlink" */
export type Reporting_Reportobservationlink_Set_Input = {
  added_as_blank?: InputMaybe<Scalars['Boolean']['input']>;
  assigned_to_id?: InputMaybe<Scalars['bigint']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  position?: InputMaybe<Scalars['Int']['input']>;
  report_id?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Reporting_Reportobservationlink_Stddev_Fields = {
  __typename?: 'reporting_reportobservationlink_stddev_fields';
  assigned_to_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  report_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "reporting_reportobservationlink" */
export type Reporting_Reportobservationlink_Stddev_Order_By = {
  assigned_to_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  report_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Reporting_Reportobservationlink_Stddev_Pop_Fields = {
  __typename?: 'reporting_reportobservationlink_stddev_pop_fields';
  assigned_to_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  report_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "reporting_reportobservationlink" */
export type Reporting_Reportobservationlink_Stddev_Pop_Order_By = {
  assigned_to_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  report_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Reporting_Reportobservationlink_Stddev_Samp_Fields = {
  __typename?: 'reporting_reportobservationlink_stddev_samp_fields';
  assigned_to_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  report_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "reporting_reportobservationlink" */
export type Reporting_Reportobservationlink_Stddev_Samp_Order_By = {
  assigned_to_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  report_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "reporting_reportobservationlink" */
export type Reporting_Reportobservationlink_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Reporting_Reportobservationlink_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Reporting_Reportobservationlink_Stream_Cursor_Value_Input = {
  added_as_blank?: InputMaybe<Scalars['Boolean']['input']>;
  assigned_to_id?: InputMaybe<Scalars['bigint']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  position?: InputMaybe<Scalars['Int']['input']>;
  report_id?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Reporting_Reportobservationlink_Sum_Fields = {
  __typename?: 'reporting_reportobservationlink_sum_fields';
  assigned_to_id?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  position?: Maybe<Scalars['Int']['output']>;
  report_id?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "reporting_reportobservationlink" */
export type Reporting_Reportobservationlink_Sum_Order_By = {
  assigned_to_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  report_id?: InputMaybe<Order_By>;
};

/** update columns of table "reporting_reportobservationlink" */
export enum Reporting_Reportobservationlink_Update_Column {
  /** column name */
  AddedAsBlank = 'added_as_blank',
  /** column name */
  AssignedToId = 'assigned_to_id',
  /** column name */
  Description = 'description',
  /** column name */
  ExtraFields = 'extraFields',
  /** column name */
  Id = 'id',
  /** column name */
  Position = 'position',
  /** column name */
  ReportId = 'report_id',
  /** column name */
  Title = 'title'
}

export type Reporting_Reportobservationlink_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Reporting_Reportobservationlink_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Reporting_Reportobservationlink_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Reporting_Reportobservationlink_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Reporting_Reportobservationlink_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Reporting_Reportobservationlink_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Reporting_Reportobservationlink_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Reporting_Reportobservationlink_Set_Input>;
  /** filter the rows which have to be updated */
  where: Reporting_Reportobservationlink_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Reporting_Reportobservationlink_Var_Pop_Fields = {
  __typename?: 'reporting_reportobservationlink_var_pop_fields';
  assigned_to_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  report_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "reporting_reportobservationlink" */
export type Reporting_Reportobservationlink_Var_Pop_Order_By = {
  assigned_to_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  report_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Reporting_Reportobservationlink_Var_Samp_Fields = {
  __typename?: 'reporting_reportobservationlink_var_samp_fields';
  assigned_to_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  report_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "reporting_reportobservationlink" */
export type Reporting_Reportobservationlink_Var_Samp_Order_By = {
  assigned_to_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  report_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Reporting_Reportobservationlink_Variance_Fields = {
  __typename?: 'reporting_reportobservationlink_variance_fields';
  assigned_to_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  position?: Maybe<Scalars['Float']['output']>;
  report_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "reporting_reportobservationlink" */
export type Reporting_Reportobservationlink_Variance_Order_By = {
  assigned_to_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  position?: InputMaybe<Order_By>;
  report_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "rolodex_projectscope" */
export type Scope = {
  __typename?: 'scope';
  description: Scalars['String']['output'];
  disallowed: Scalars['Boolean']['output'];
  id: Scalars['bigint']['output'];
  name: Scalars['String']['output'];
  /** An object relationship */
  project: Project;
  projectId: Scalars['bigint']['output'];
  requiresCaution: Scalars['Boolean']['output'];
  scope: Scalars['String']['output'];
};

/** aggregated selection of "rolodex_projectscope" */
export type Scope_Aggregate = {
  __typename?: 'scope_aggregate';
  aggregate?: Maybe<Scope_Aggregate_Fields>;
  nodes: Array<Scope>;
};

export type Scope_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Scope_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Scope_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Scope_Aggregate_Bool_Exp_Count>;
};

export type Scope_Aggregate_Bool_Exp_Bool_And = {
  arguments: Scope_Select_Column_Scope_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scope_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Scope_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Scope_Select_Column_Scope_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scope_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Scope_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Scope_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scope_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "rolodex_projectscope" */
export type Scope_Aggregate_Fields = {
  __typename?: 'scope_aggregate_fields';
  avg?: Maybe<Scope_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Scope_Max_Fields>;
  min?: Maybe<Scope_Min_Fields>;
  stddev?: Maybe<Scope_Stddev_Fields>;
  stddev_pop?: Maybe<Scope_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Scope_Stddev_Samp_Fields>;
  sum?: Maybe<Scope_Sum_Fields>;
  var_pop?: Maybe<Scope_Var_Pop_Fields>;
  var_samp?: Maybe<Scope_Var_Samp_Fields>;
  variance?: Maybe<Scope_Variance_Fields>;
};


/** aggregate fields of "rolodex_projectscope" */
export type Scope_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Scope_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "rolodex_projectscope" */
export type Scope_Aggregate_Order_By = {
  avg?: InputMaybe<Scope_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Scope_Max_Order_By>;
  min?: InputMaybe<Scope_Min_Order_By>;
  stddev?: InputMaybe<Scope_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Scope_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Scope_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Scope_Sum_Order_By>;
  var_pop?: InputMaybe<Scope_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Scope_Var_Samp_Order_By>;
  variance?: InputMaybe<Scope_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "rolodex_projectscope" */
export type Scope_Arr_Rel_Insert_Input = {
  data: Array<Scope_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Scope_On_Conflict>;
};

/** aggregate avg on columns */
export type Scope_Avg_Fields = {
  __typename?: 'scope_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "rolodex_projectscope" */
export type Scope_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "rolodex_projectscope". All fields are combined with a logical 'AND'. */
export type Scope_Bool_Exp = {
  _and?: InputMaybe<Array<Scope_Bool_Exp>>;
  _not?: InputMaybe<Scope_Bool_Exp>;
  _or?: InputMaybe<Array<Scope_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  disallowed?: InputMaybe<Boolean_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  project?: InputMaybe<Project_Bool_Exp>;
  projectId?: InputMaybe<Bigint_Comparison_Exp>;
  requiresCaution?: InputMaybe<Boolean_Comparison_Exp>;
  scope?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "rolodex_projectscope" */
export enum Scope_Constraint {
  /** unique or primary key constraint on columns "id" */
  RolodexProjectscopePkey = 'rolodex_projectscope_pkey'
}

/** input type for incrementing numeric columns in table "rolodex_projectscope" */
export type Scope_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "rolodex_projectscope" */
export type Scope_Insert_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  disallowed?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  project?: InputMaybe<Project_Obj_Rel_Insert_Input>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  requiresCaution?: InputMaybe<Scalars['Boolean']['input']>;
  scope?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Scope_Max_Fields = {
  __typename?: 'scope_max_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  scope?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "rolodex_projectscope" */
export type Scope_Max_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  scope?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Scope_Min_Fields = {
  __typename?: 'scope_min_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  scope?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "rolodex_projectscope" */
export type Scope_Min_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  scope?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "rolodex_projectscope" */
export type Scope_Mutation_Response = {
  __typename?: 'scope_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Scope>;
};

/** on_conflict condition type for table "rolodex_projectscope" */
export type Scope_On_Conflict = {
  constraint: Scope_Constraint;
  update_columns?: Array<Scope_Update_Column>;
  where?: InputMaybe<Scope_Bool_Exp>;
};

/** Ordering options when selecting data from "rolodex_projectscope". */
export type Scope_Order_By = {
  description?: InputMaybe<Order_By>;
  disallowed?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  project?: InputMaybe<Project_Order_By>;
  projectId?: InputMaybe<Order_By>;
  requiresCaution?: InputMaybe<Order_By>;
  scope?: InputMaybe<Order_By>;
};

/** primary key columns input for table: rolodex_projectscope */
export type Scope_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "rolodex_projectscope" */
export enum Scope_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Disallowed = 'disallowed',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  RequiresCaution = 'requiresCaution',
  /** column name */
  Scope = 'scope'
}

/** select "scope_aggregate_bool_exp_bool_and_arguments_columns" columns of table "rolodex_projectscope" */
export enum Scope_Select_Column_Scope_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Disallowed = 'disallowed',
  /** column name */
  RequiresCaution = 'requiresCaution'
}

/** select "scope_aggregate_bool_exp_bool_or_arguments_columns" columns of table "rolodex_projectscope" */
export enum Scope_Select_Column_Scope_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Disallowed = 'disallowed',
  /** column name */
  RequiresCaution = 'requiresCaution'
}

/** input type for updating data in table "rolodex_projectscope" */
export type Scope_Set_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  disallowed?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  requiresCaution?: InputMaybe<Scalars['Boolean']['input']>;
  scope?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Scope_Stddev_Fields = {
  __typename?: 'scope_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "rolodex_projectscope" */
export type Scope_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Scope_Stddev_Pop_Fields = {
  __typename?: 'scope_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "rolodex_projectscope" */
export type Scope_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Scope_Stddev_Samp_Fields = {
  __typename?: 'scope_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "rolodex_projectscope" */
export type Scope_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "scope" */
export type Scope_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Scope_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Scope_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  disallowed?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  requiresCaution?: InputMaybe<Scalars['Boolean']['input']>;
  scope?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Scope_Sum_Fields = {
  __typename?: 'scope_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "rolodex_projectscope" */
export type Scope_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** update columns of table "rolodex_projectscope" */
export enum Scope_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Disallowed = 'disallowed',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  RequiresCaution = 'requiresCaution',
  /** column name */
  Scope = 'scope'
}

export type Scope_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Scope_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Scope_Set_Input>;
  /** filter the rows which have to be updated */
  where: Scope_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Scope_Var_Pop_Fields = {
  __typename?: 'scope_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "rolodex_projectscope" */
export type Scope_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Scope_Var_Samp_Fields = {
  __typename?: 'scope_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "rolodex_projectscope" */
export type Scope_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Scope_Variance_Fields = {
  __typename?: 'scope_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "rolodex_projectscope" */
export type Scope_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** columns and relationships of "shepherd_serverhistory" */
export type ServerCheckout = {
  __typename?: 'serverCheckout';
  /** An object relationship */
  activityType: ActivityType;
  activityTypeId: Scalars['bigint']['output'];
  /** An object relationship */
  client: Client;
  clientId: Scalars['bigint']['output'];
  /** An array relationship */
  domainServerConnections: Array<DomainServerConnection>;
  /** An aggregate relationship */
  domainServerConnections_aggregate: DomainServerConnection_Aggregate;
  endDate: Scalars['date']['output'];
  id: Scalars['bigint']['output'];
  note: Scalars['String']['output'];
  operatorId?: Maybe<Scalars['bigint']['output']>;
  /** An object relationship */
  project?: Maybe<Project>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  /** An object relationship */
  server: StaticServer;
  serverId: Scalars['bigint']['output'];
  /** An object relationship */
  serverRole: ServerRole;
  serverRoleId: Scalars['bigint']['output'];
  startDate: Scalars['date']['output'];
  /** An object relationship */
  user?: Maybe<User>;
};


/** columns and relationships of "shepherd_serverhistory" */
export type ServerCheckoutDomainServerConnectionsArgs = {
  distinct_on?: InputMaybe<Array<DomainServerConnection_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainServerConnection_Order_By>>;
  where?: InputMaybe<DomainServerConnection_Bool_Exp>;
};


/** columns and relationships of "shepherd_serverhistory" */
export type ServerCheckoutDomainServerConnections_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DomainServerConnection_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainServerConnection_Order_By>>;
  where?: InputMaybe<DomainServerConnection_Bool_Exp>;
};

/** aggregated selection of "shepherd_serverhistory" */
export type ServerCheckout_Aggregate = {
  __typename?: 'serverCheckout_aggregate';
  aggregate?: Maybe<ServerCheckout_Aggregate_Fields>;
  nodes: Array<ServerCheckout>;
};

export type ServerCheckout_Aggregate_Bool_Exp = {
  count?: InputMaybe<ServerCheckout_Aggregate_Bool_Exp_Count>;
};

export type ServerCheckout_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ServerCheckout_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ServerCheckout_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "shepherd_serverhistory" */
export type ServerCheckout_Aggregate_Fields = {
  __typename?: 'serverCheckout_aggregate_fields';
  avg?: Maybe<ServerCheckout_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ServerCheckout_Max_Fields>;
  min?: Maybe<ServerCheckout_Min_Fields>;
  stddev?: Maybe<ServerCheckout_Stddev_Fields>;
  stddev_pop?: Maybe<ServerCheckout_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ServerCheckout_Stddev_Samp_Fields>;
  sum?: Maybe<ServerCheckout_Sum_Fields>;
  var_pop?: Maybe<ServerCheckout_Var_Pop_Fields>;
  var_samp?: Maybe<ServerCheckout_Var_Samp_Fields>;
  variance?: Maybe<ServerCheckout_Variance_Fields>;
};


/** aggregate fields of "shepherd_serverhistory" */
export type ServerCheckout_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ServerCheckout_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "shepherd_serverhistory" */
export type ServerCheckout_Aggregate_Order_By = {
  avg?: InputMaybe<ServerCheckout_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ServerCheckout_Max_Order_By>;
  min?: InputMaybe<ServerCheckout_Min_Order_By>;
  stddev?: InputMaybe<ServerCheckout_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ServerCheckout_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ServerCheckout_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ServerCheckout_Sum_Order_By>;
  var_pop?: InputMaybe<ServerCheckout_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ServerCheckout_Var_Samp_Order_By>;
  variance?: InputMaybe<ServerCheckout_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "shepherd_serverhistory" */
export type ServerCheckout_Arr_Rel_Insert_Input = {
  data: Array<ServerCheckout_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ServerCheckout_On_Conflict>;
};

/** aggregate avg on columns */
export type ServerCheckout_Avg_Fields = {
  __typename?: 'serverCheckout_avg_fields';
  activityTypeId?: Maybe<Scalars['Float']['output']>;
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  serverId?: Maybe<Scalars['Float']['output']>;
  serverRoleId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "shepherd_serverhistory" */
export type ServerCheckout_Avg_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  serverId?: InputMaybe<Order_By>;
  serverRoleId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "shepherd_serverhistory". All fields are combined with a logical 'AND'. */
export type ServerCheckout_Bool_Exp = {
  _and?: InputMaybe<Array<ServerCheckout_Bool_Exp>>;
  _not?: InputMaybe<ServerCheckout_Bool_Exp>;
  _or?: InputMaybe<Array<ServerCheckout_Bool_Exp>>;
  activityType?: InputMaybe<ActivityType_Bool_Exp>;
  activityTypeId?: InputMaybe<Bigint_Comparison_Exp>;
  client?: InputMaybe<Client_Bool_Exp>;
  clientId?: InputMaybe<Bigint_Comparison_Exp>;
  domainServerConnections?: InputMaybe<DomainServerConnection_Bool_Exp>;
  domainServerConnections_aggregate?: InputMaybe<DomainServerConnection_Aggregate_Bool_Exp>;
  endDate?: InputMaybe<Date_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  operatorId?: InputMaybe<Bigint_Comparison_Exp>;
  project?: InputMaybe<Project_Bool_Exp>;
  projectId?: InputMaybe<Bigint_Comparison_Exp>;
  server?: InputMaybe<StaticServer_Bool_Exp>;
  serverId?: InputMaybe<Bigint_Comparison_Exp>;
  serverRole?: InputMaybe<ServerRole_Bool_Exp>;
  serverRoleId?: InputMaybe<Bigint_Comparison_Exp>;
  startDate?: InputMaybe<Date_Comparison_Exp>;
  user?: InputMaybe<User_Bool_Exp>;
};

/** unique or primary key constraints on table "shepherd_serverhistory" */
export enum ServerCheckout_Constraint {
  /** unique or primary key constraint on columns "id" */
  ShepherdServerhistoryPkey = 'shepherd_serverhistory_pkey'
}

/** input type for incrementing numeric columns in table "shepherd_serverhistory" */
export type ServerCheckout_Inc_Input = {
  activityTypeId?: InputMaybe<Scalars['bigint']['input']>;
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  serverId?: InputMaybe<Scalars['bigint']['input']>;
  serverRoleId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "shepherd_serverhistory" */
export type ServerCheckout_Insert_Input = {
  activityType?: InputMaybe<ActivityType_Obj_Rel_Insert_Input>;
  activityTypeId?: InputMaybe<Scalars['bigint']['input']>;
  client?: InputMaybe<Client_Obj_Rel_Insert_Input>;
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  domainServerConnections?: InputMaybe<DomainServerConnection_Arr_Rel_Insert_Input>;
  endDate?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  project?: InputMaybe<Project_Obj_Rel_Insert_Input>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  server?: InputMaybe<StaticServer_Obj_Rel_Insert_Input>;
  serverId?: InputMaybe<Scalars['bigint']['input']>;
  serverRole?: InputMaybe<ServerRole_Obj_Rel_Insert_Input>;
  serverRoleId?: InputMaybe<Scalars['bigint']['input']>;
  startDate?: InputMaybe<Scalars['date']['input']>;
  user?: InputMaybe<User_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type ServerCheckout_Max_Fields = {
  __typename?: 'serverCheckout_max_fields';
  activityTypeId?: Maybe<Scalars['bigint']['output']>;
  clientId?: Maybe<Scalars['bigint']['output']>;
  endDate?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  serverId?: Maybe<Scalars['bigint']['output']>;
  serverRoleId?: Maybe<Scalars['bigint']['output']>;
  startDate?: Maybe<Scalars['date']['output']>;
};

/** order by max() on columns of table "shepherd_serverhistory" */
export type ServerCheckout_Max_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  endDate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  serverId?: InputMaybe<Order_By>;
  serverRoleId?: InputMaybe<Order_By>;
  startDate?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ServerCheckout_Min_Fields = {
  __typename?: 'serverCheckout_min_fields';
  activityTypeId?: Maybe<Scalars['bigint']['output']>;
  clientId?: Maybe<Scalars['bigint']['output']>;
  endDate?: Maybe<Scalars['date']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  serverId?: Maybe<Scalars['bigint']['output']>;
  serverRoleId?: Maybe<Scalars['bigint']['output']>;
  startDate?: Maybe<Scalars['date']['output']>;
};

/** order by min() on columns of table "shepherd_serverhistory" */
export type ServerCheckout_Min_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  endDate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  serverId?: InputMaybe<Order_By>;
  serverRoleId?: InputMaybe<Order_By>;
  startDate?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "shepherd_serverhistory" */
export type ServerCheckout_Mutation_Response = {
  __typename?: 'serverCheckout_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ServerCheckout>;
};

/** input type for inserting object relation for remote table "shepherd_serverhistory" */
export type ServerCheckout_Obj_Rel_Insert_Input = {
  data: ServerCheckout_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ServerCheckout_On_Conflict>;
};

/** on_conflict condition type for table "shepherd_serverhistory" */
export type ServerCheckout_On_Conflict = {
  constraint: ServerCheckout_Constraint;
  update_columns?: Array<ServerCheckout_Update_Column>;
  where?: InputMaybe<ServerCheckout_Bool_Exp>;
};

/** Ordering options when selecting data from "shepherd_serverhistory". */
export type ServerCheckout_Order_By = {
  activityType?: InputMaybe<ActivityType_Order_By>;
  activityTypeId?: InputMaybe<Order_By>;
  client?: InputMaybe<Client_Order_By>;
  clientId?: InputMaybe<Order_By>;
  domainServerConnections_aggregate?: InputMaybe<DomainServerConnection_Aggregate_Order_By>;
  endDate?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  project?: InputMaybe<Project_Order_By>;
  projectId?: InputMaybe<Order_By>;
  server?: InputMaybe<StaticServer_Order_By>;
  serverId?: InputMaybe<Order_By>;
  serverRole?: InputMaybe<ServerRole_Order_By>;
  serverRoleId?: InputMaybe<Order_By>;
  startDate?: InputMaybe<Order_By>;
  user?: InputMaybe<User_Order_By>;
};

/** primary key columns input for table: shepherd_serverhistory */
export type ServerCheckout_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "shepherd_serverhistory" */
export enum ServerCheckout_Select_Column {
  /** column name */
  ActivityTypeId = 'activityTypeId',
  /** column name */
  ClientId = 'clientId',
  /** column name */
  EndDate = 'endDate',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  OperatorId = 'operatorId',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  ServerId = 'serverId',
  /** column name */
  ServerRoleId = 'serverRoleId',
  /** column name */
  StartDate = 'startDate'
}

/** input type for updating data in table "shepherd_serverhistory" */
export type ServerCheckout_Set_Input = {
  activityTypeId?: InputMaybe<Scalars['bigint']['input']>;
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  endDate?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  serverId?: InputMaybe<Scalars['bigint']['input']>;
  serverRoleId?: InputMaybe<Scalars['bigint']['input']>;
  startDate?: InputMaybe<Scalars['date']['input']>;
};

/** aggregate stddev on columns */
export type ServerCheckout_Stddev_Fields = {
  __typename?: 'serverCheckout_stddev_fields';
  activityTypeId?: Maybe<Scalars['Float']['output']>;
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  serverId?: Maybe<Scalars['Float']['output']>;
  serverRoleId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "shepherd_serverhistory" */
export type ServerCheckout_Stddev_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  serverId?: InputMaybe<Order_By>;
  serverRoleId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ServerCheckout_Stddev_Pop_Fields = {
  __typename?: 'serverCheckout_stddev_pop_fields';
  activityTypeId?: Maybe<Scalars['Float']['output']>;
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  serverId?: Maybe<Scalars['Float']['output']>;
  serverRoleId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "shepherd_serverhistory" */
export type ServerCheckout_Stddev_Pop_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  serverId?: InputMaybe<Order_By>;
  serverRoleId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ServerCheckout_Stddev_Samp_Fields = {
  __typename?: 'serverCheckout_stddev_samp_fields';
  activityTypeId?: Maybe<Scalars['Float']['output']>;
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  serverId?: Maybe<Scalars['Float']['output']>;
  serverRoleId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "shepherd_serverhistory" */
export type ServerCheckout_Stddev_Samp_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  serverId?: InputMaybe<Order_By>;
  serverRoleId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "serverCheckout" */
export type ServerCheckout_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ServerCheckout_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ServerCheckout_Stream_Cursor_Value_Input = {
  activityTypeId?: InputMaybe<Scalars['bigint']['input']>;
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  endDate?: InputMaybe<Scalars['date']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  serverId?: InputMaybe<Scalars['bigint']['input']>;
  serverRoleId?: InputMaybe<Scalars['bigint']['input']>;
  startDate?: InputMaybe<Scalars['date']['input']>;
};

/** aggregate sum on columns */
export type ServerCheckout_Sum_Fields = {
  __typename?: 'serverCheckout_sum_fields';
  activityTypeId?: Maybe<Scalars['bigint']['output']>;
  clientId?: Maybe<Scalars['bigint']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  serverId?: Maybe<Scalars['bigint']['output']>;
  serverRoleId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "shepherd_serverhistory" */
export type ServerCheckout_Sum_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  serverId?: InputMaybe<Order_By>;
  serverRoleId?: InputMaybe<Order_By>;
};

/** update columns of table "shepherd_serverhistory" */
export enum ServerCheckout_Update_Column {
  /** column name */
  ActivityTypeId = 'activityTypeId',
  /** column name */
  ClientId = 'clientId',
  /** column name */
  EndDate = 'endDate',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  OperatorId = 'operatorId',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  ServerId = 'serverId',
  /** column name */
  ServerRoleId = 'serverRoleId',
  /** column name */
  StartDate = 'startDate'
}

export type ServerCheckout_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ServerCheckout_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ServerCheckout_Set_Input>;
  /** filter the rows which have to be updated */
  where: ServerCheckout_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ServerCheckout_Var_Pop_Fields = {
  __typename?: 'serverCheckout_var_pop_fields';
  activityTypeId?: Maybe<Scalars['Float']['output']>;
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  serverId?: Maybe<Scalars['Float']['output']>;
  serverRoleId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "shepherd_serverhistory" */
export type ServerCheckout_Var_Pop_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  serverId?: InputMaybe<Order_By>;
  serverRoleId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ServerCheckout_Var_Samp_Fields = {
  __typename?: 'serverCheckout_var_samp_fields';
  activityTypeId?: Maybe<Scalars['Float']['output']>;
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  serverId?: Maybe<Scalars['Float']['output']>;
  serverRoleId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "shepherd_serverhistory" */
export type ServerCheckout_Var_Samp_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  serverId?: InputMaybe<Order_By>;
  serverRoleId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ServerCheckout_Variance_Fields = {
  __typename?: 'serverCheckout_variance_fields';
  activityTypeId?: Maybe<Scalars['Float']['output']>;
  clientId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
  serverId?: Maybe<Scalars['Float']['output']>;
  serverRoleId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "shepherd_serverhistory" */
export type ServerCheckout_Variance_Order_By = {
  activityTypeId?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  serverId?: InputMaybe<Order_By>;
  serverRoleId?: InputMaybe<Order_By>;
};

/** columns and relationships of "shepherd_servernote" */
export type ServerNote = {
  __typename?: 'serverNote';
  id: Scalars['bigint']['output'];
  note: Scalars['String']['output'];
  operatorId?: Maybe<Scalars['bigint']['output']>;
  serverId: Scalars['bigint']['output'];
  /** An object relationship */
  staticServer: StaticServer;
  timestamp: Scalars['date']['output'];
  /** An object relationship */
  user?: Maybe<User>;
};

/** aggregated selection of "shepherd_servernote" */
export type ServerNote_Aggregate = {
  __typename?: 'serverNote_aggregate';
  aggregate?: Maybe<ServerNote_Aggregate_Fields>;
  nodes: Array<ServerNote>;
};

export type ServerNote_Aggregate_Bool_Exp = {
  count?: InputMaybe<ServerNote_Aggregate_Bool_Exp_Count>;
};

export type ServerNote_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<ServerNote_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<ServerNote_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "shepherd_servernote" */
export type ServerNote_Aggregate_Fields = {
  __typename?: 'serverNote_aggregate_fields';
  avg?: Maybe<ServerNote_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ServerNote_Max_Fields>;
  min?: Maybe<ServerNote_Min_Fields>;
  stddev?: Maybe<ServerNote_Stddev_Fields>;
  stddev_pop?: Maybe<ServerNote_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ServerNote_Stddev_Samp_Fields>;
  sum?: Maybe<ServerNote_Sum_Fields>;
  var_pop?: Maybe<ServerNote_Var_Pop_Fields>;
  var_samp?: Maybe<ServerNote_Var_Samp_Fields>;
  variance?: Maybe<ServerNote_Variance_Fields>;
};


/** aggregate fields of "shepherd_servernote" */
export type ServerNote_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ServerNote_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "shepherd_servernote" */
export type ServerNote_Aggregate_Order_By = {
  avg?: InputMaybe<ServerNote_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<ServerNote_Max_Order_By>;
  min?: InputMaybe<ServerNote_Min_Order_By>;
  stddev?: InputMaybe<ServerNote_Stddev_Order_By>;
  stddev_pop?: InputMaybe<ServerNote_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<ServerNote_Stddev_Samp_Order_By>;
  sum?: InputMaybe<ServerNote_Sum_Order_By>;
  var_pop?: InputMaybe<ServerNote_Var_Pop_Order_By>;
  var_samp?: InputMaybe<ServerNote_Var_Samp_Order_By>;
  variance?: InputMaybe<ServerNote_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "shepherd_servernote" */
export type ServerNote_Arr_Rel_Insert_Input = {
  data: Array<ServerNote_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<ServerNote_On_Conflict>;
};

/** aggregate avg on columns */
export type ServerNote_Avg_Fields = {
  __typename?: 'serverNote_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  serverId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "shepherd_servernote" */
export type ServerNote_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  serverId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "shepherd_servernote". All fields are combined with a logical 'AND'. */
export type ServerNote_Bool_Exp = {
  _and?: InputMaybe<Array<ServerNote_Bool_Exp>>;
  _not?: InputMaybe<ServerNote_Bool_Exp>;
  _or?: InputMaybe<Array<ServerNote_Bool_Exp>>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  operatorId?: InputMaybe<Bigint_Comparison_Exp>;
  serverId?: InputMaybe<Bigint_Comparison_Exp>;
  staticServer?: InputMaybe<StaticServer_Bool_Exp>;
  timestamp?: InputMaybe<Date_Comparison_Exp>;
  user?: InputMaybe<User_Bool_Exp>;
};

/** unique or primary key constraints on table "shepherd_servernote" */
export enum ServerNote_Constraint {
  /** unique or primary key constraint on columns "id" */
  ShepherdServernotePkey = 'shepherd_servernote_pkey'
}

/** input type for incrementing numeric columns in table "shepherd_servernote" */
export type ServerNote_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  serverId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "shepherd_servernote" */
export type ServerNote_Insert_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  serverId?: InputMaybe<Scalars['bigint']['input']>;
  staticServer?: InputMaybe<StaticServer_Obj_Rel_Insert_Input>;
  timestamp?: InputMaybe<Scalars['date']['input']>;
  user?: InputMaybe<User_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type ServerNote_Max_Fields = {
  __typename?: 'serverNote_max_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  serverId?: Maybe<Scalars['bigint']['output']>;
  timestamp?: Maybe<Scalars['date']['output']>;
};

/** order by max() on columns of table "shepherd_servernote" */
export type ServerNote_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  serverId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type ServerNote_Min_Fields = {
  __typename?: 'serverNote_min_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  serverId?: Maybe<Scalars['bigint']['output']>;
  timestamp?: Maybe<Scalars['date']['output']>;
};

/** order by min() on columns of table "shepherd_servernote" */
export type ServerNote_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  serverId?: InputMaybe<Order_By>;
  timestamp?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "shepherd_servernote" */
export type ServerNote_Mutation_Response = {
  __typename?: 'serverNote_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ServerNote>;
};

/** on_conflict condition type for table "shepherd_servernote" */
export type ServerNote_On_Conflict = {
  constraint: ServerNote_Constraint;
  update_columns?: Array<ServerNote_Update_Column>;
  where?: InputMaybe<ServerNote_Bool_Exp>;
};

/** Ordering options when selecting data from "shepherd_servernote". */
export type ServerNote_Order_By = {
  id?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  serverId?: InputMaybe<Order_By>;
  staticServer?: InputMaybe<StaticServer_Order_By>;
  timestamp?: InputMaybe<Order_By>;
  user?: InputMaybe<User_Order_By>;
};

/** primary key columns input for table: shepherd_servernote */
export type ServerNote_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "shepherd_servernote" */
export enum ServerNote_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  OperatorId = 'operatorId',
  /** column name */
  ServerId = 'serverId',
  /** column name */
  Timestamp = 'timestamp'
}

/** input type for updating data in table "shepherd_servernote" */
export type ServerNote_Set_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  serverId?: InputMaybe<Scalars['bigint']['input']>;
  timestamp?: InputMaybe<Scalars['date']['input']>;
};

/** aggregate stddev on columns */
export type ServerNote_Stddev_Fields = {
  __typename?: 'serverNote_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  serverId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "shepherd_servernote" */
export type ServerNote_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  serverId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ServerNote_Stddev_Pop_Fields = {
  __typename?: 'serverNote_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  serverId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "shepherd_servernote" */
export type ServerNote_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  serverId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ServerNote_Stddev_Samp_Fields = {
  __typename?: 'serverNote_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  serverId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "shepherd_servernote" */
export type ServerNote_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  serverId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "serverNote" */
export type ServerNote_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ServerNote_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ServerNote_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  operatorId?: InputMaybe<Scalars['bigint']['input']>;
  serverId?: InputMaybe<Scalars['bigint']['input']>;
  timestamp?: InputMaybe<Scalars['date']['input']>;
};

/** aggregate sum on columns */
export type ServerNote_Sum_Fields = {
  __typename?: 'serverNote_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  operatorId?: Maybe<Scalars['bigint']['output']>;
  serverId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "shepherd_servernote" */
export type ServerNote_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  serverId?: InputMaybe<Order_By>;
};

/** update columns of table "shepherd_servernote" */
export enum ServerNote_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  OperatorId = 'operatorId',
  /** column name */
  ServerId = 'serverId',
  /** column name */
  Timestamp = 'timestamp'
}

export type ServerNote_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ServerNote_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ServerNote_Set_Input>;
  /** filter the rows which have to be updated */
  where: ServerNote_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ServerNote_Var_Pop_Fields = {
  __typename?: 'serverNote_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  serverId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "shepherd_servernote" */
export type ServerNote_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  serverId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ServerNote_Var_Samp_Fields = {
  __typename?: 'serverNote_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  serverId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "shepherd_servernote" */
export type ServerNote_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  serverId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type ServerNote_Variance_Fields = {
  __typename?: 'serverNote_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  operatorId?: Maybe<Scalars['Float']['output']>;
  serverId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "shepherd_servernote" */
export type ServerNote_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  operatorId?: InputMaybe<Order_By>;
  serverId?: InputMaybe<Order_By>;
};

/** columns and relationships of "shepherd_serverprovider" */
export type ServerProvider = {
  __typename?: 'serverProvider';
  /** An array relationship */
  cloudServers: Array<CloudServer>;
  /** An aggregate relationship */
  cloudServers_aggregate: CloudServer_Aggregate;
  id: Scalars['bigint']['output'];
  serverProvider: Scalars['String']['output'];
  /** An array relationship */
  staticServers: Array<StaticServer>;
  /** An aggregate relationship */
  staticServers_aggregate: StaticServer_Aggregate;
};


/** columns and relationships of "shepherd_serverprovider" */
export type ServerProviderCloudServersArgs = {
  distinct_on?: InputMaybe<Array<CloudServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CloudServer_Order_By>>;
  where?: InputMaybe<CloudServer_Bool_Exp>;
};


/** columns and relationships of "shepherd_serverprovider" */
export type ServerProviderCloudServers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<CloudServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CloudServer_Order_By>>;
  where?: InputMaybe<CloudServer_Bool_Exp>;
};


/** columns and relationships of "shepherd_serverprovider" */
export type ServerProviderStaticServersArgs = {
  distinct_on?: InputMaybe<Array<StaticServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StaticServer_Order_By>>;
  where?: InputMaybe<StaticServer_Bool_Exp>;
};


/** columns and relationships of "shepherd_serverprovider" */
export type ServerProviderStaticServers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<StaticServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StaticServer_Order_By>>;
  where?: InputMaybe<StaticServer_Bool_Exp>;
};

/** aggregated selection of "shepherd_serverprovider" */
export type ServerProvider_Aggregate = {
  __typename?: 'serverProvider_aggregate';
  aggregate?: Maybe<ServerProvider_Aggregate_Fields>;
  nodes: Array<ServerProvider>;
};

/** aggregate fields of "shepherd_serverprovider" */
export type ServerProvider_Aggregate_Fields = {
  __typename?: 'serverProvider_aggregate_fields';
  avg?: Maybe<ServerProvider_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ServerProvider_Max_Fields>;
  min?: Maybe<ServerProvider_Min_Fields>;
  stddev?: Maybe<ServerProvider_Stddev_Fields>;
  stddev_pop?: Maybe<ServerProvider_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ServerProvider_Stddev_Samp_Fields>;
  sum?: Maybe<ServerProvider_Sum_Fields>;
  var_pop?: Maybe<ServerProvider_Var_Pop_Fields>;
  var_samp?: Maybe<ServerProvider_Var_Samp_Fields>;
  variance?: Maybe<ServerProvider_Variance_Fields>;
};


/** aggregate fields of "shepherd_serverprovider" */
export type ServerProvider_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ServerProvider_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type ServerProvider_Avg_Fields = {
  __typename?: 'serverProvider_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "shepherd_serverprovider". All fields are combined with a logical 'AND'. */
export type ServerProvider_Bool_Exp = {
  _and?: InputMaybe<Array<ServerProvider_Bool_Exp>>;
  _not?: InputMaybe<ServerProvider_Bool_Exp>;
  _or?: InputMaybe<Array<ServerProvider_Bool_Exp>>;
  cloudServers?: InputMaybe<CloudServer_Bool_Exp>;
  cloudServers_aggregate?: InputMaybe<CloudServer_Aggregate_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  serverProvider?: InputMaybe<String_Comparison_Exp>;
  staticServers?: InputMaybe<StaticServer_Bool_Exp>;
  staticServers_aggregate?: InputMaybe<StaticServer_Aggregate_Bool_Exp>;
};

/** unique or primary key constraints on table "shepherd_serverprovider" */
export enum ServerProvider_Constraint {
  /** unique or primary key constraint on columns "id" */
  ShepherdServerproviderPkey = 'shepherd_serverprovider_pkey',
  /** unique or primary key constraint on columns "server_provider" */
  ShepherdServerproviderServerProviderKey = 'shepherd_serverprovider_server_provider_key'
}

/** input type for incrementing numeric columns in table "shepherd_serverprovider" */
export type ServerProvider_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "shepherd_serverprovider" */
export type ServerProvider_Insert_Input = {
  cloudServers?: InputMaybe<CloudServer_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  serverProvider?: InputMaybe<Scalars['String']['input']>;
  staticServers?: InputMaybe<StaticServer_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type ServerProvider_Max_Fields = {
  __typename?: 'serverProvider_max_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  serverProvider?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type ServerProvider_Min_Fields = {
  __typename?: 'serverProvider_min_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  serverProvider?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "shepherd_serverprovider" */
export type ServerProvider_Mutation_Response = {
  __typename?: 'serverProvider_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ServerProvider>;
};

/** input type for inserting object relation for remote table "shepherd_serverprovider" */
export type ServerProvider_Obj_Rel_Insert_Input = {
  data: ServerProvider_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ServerProvider_On_Conflict>;
};

/** on_conflict condition type for table "shepherd_serverprovider" */
export type ServerProvider_On_Conflict = {
  constraint: ServerProvider_Constraint;
  update_columns?: Array<ServerProvider_Update_Column>;
  where?: InputMaybe<ServerProvider_Bool_Exp>;
};

/** Ordering options when selecting data from "shepherd_serverprovider". */
export type ServerProvider_Order_By = {
  cloudServers_aggregate?: InputMaybe<CloudServer_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  serverProvider?: InputMaybe<Order_By>;
  staticServers_aggregate?: InputMaybe<StaticServer_Aggregate_Order_By>;
};

/** primary key columns input for table: shepherd_serverprovider */
export type ServerProvider_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "shepherd_serverprovider" */
export enum ServerProvider_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ServerProvider = 'serverProvider'
}

/** input type for updating data in table "shepherd_serverprovider" */
export type ServerProvider_Set_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  serverProvider?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type ServerProvider_Stddev_Fields = {
  __typename?: 'serverProvider_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type ServerProvider_Stddev_Pop_Fields = {
  __typename?: 'serverProvider_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type ServerProvider_Stddev_Samp_Fields = {
  __typename?: 'serverProvider_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "serverProvider" */
export type ServerProvider_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ServerProvider_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ServerProvider_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  serverProvider?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type ServerProvider_Sum_Fields = {
  __typename?: 'serverProvider_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
};

/** update columns of table "shepherd_serverprovider" */
export enum ServerProvider_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ServerProvider = 'serverProvider'
}

export type ServerProvider_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ServerProvider_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ServerProvider_Set_Input>;
  /** filter the rows which have to be updated */
  where: ServerProvider_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ServerProvider_Var_Pop_Fields = {
  __typename?: 'serverProvider_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type ServerProvider_Var_Samp_Fields = {
  __typename?: 'serverProvider_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type ServerProvider_Variance_Fields = {
  __typename?: 'serverProvider_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "shepherd_serverrole" */
export type ServerRole = {
  __typename?: 'serverRole';
  /** An array relationship */
  cloudServers: Array<CloudServer>;
  /** An aggregate relationship */
  cloudServers_aggregate: CloudServer_Aggregate;
  id: Scalars['bigint']['output'];
  serverRole: Scalars['String']['output'];
  /** An array relationship */
  staticServers: Array<ServerCheckout>;
  /** An aggregate relationship */
  staticServers_aggregate: ServerCheckout_Aggregate;
};


/** columns and relationships of "shepherd_serverrole" */
export type ServerRoleCloudServersArgs = {
  distinct_on?: InputMaybe<Array<CloudServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CloudServer_Order_By>>;
  where?: InputMaybe<CloudServer_Bool_Exp>;
};


/** columns and relationships of "shepherd_serverrole" */
export type ServerRoleCloudServers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<CloudServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CloudServer_Order_By>>;
  where?: InputMaybe<CloudServer_Bool_Exp>;
};


/** columns and relationships of "shepherd_serverrole" */
export type ServerRoleStaticServersArgs = {
  distinct_on?: InputMaybe<Array<ServerCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerCheckout_Order_By>>;
  where?: InputMaybe<ServerCheckout_Bool_Exp>;
};


/** columns and relationships of "shepherd_serverrole" */
export type ServerRoleStaticServers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerCheckout_Order_By>>;
  where?: InputMaybe<ServerCheckout_Bool_Exp>;
};

/** aggregated selection of "shepherd_serverrole" */
export type ServerRole_Aggregate = {
  __typename?: 'serverRole_aggregate';
  aggregate?: Maybe<ServerRole_Aggregate_Fields>;
  nodes: Array<ServerRole>;
};

/** aggregate fields of "shepherd_serverrole" */
export type ServerRole_Aggregate_Fields = {
  __typename?: 'serverRole_aggregate_fields';
  avg?: Maybe<ServerRole_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ServerRole_Max_Fields>;
  min?: Maybe<ServerRole_Min_Fields>;
  stddev?: Maybe<ServerRole_Stddev_Fields>;
  stddev_pop?: Maybe<ServerRole_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ServerRole_Stddev_Samp_Fields>;
  sum?: Maybe<ServerRole_Sum_Fields>;
  var_pop?: Maybe<ServerRole_Var_Pop_Fields>;
  var_samp?: Maybe<ServerRole_Var_Samp_Fields>;
  variance?: Maybe<ServerRole_Variance_Fields>;
};


/** aggregate fields of "shepherd_serverrole" */
export type ServerRole_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ServerRole_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type ServerRole_Avg_Fields = {
  __typename?: 'serverRole_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "shepherd_serverrole". All fields are combined with a logical 'AND'. */
export type ServerRole_Bool_Exp = {
  _and?: InputMaybe<Array<ServerRole_Bool_Exp>>;
  _not?: InputMaybe<ServerRole_Bool_Exp>;
  _or?: InputMaybe<Array<ServerRole_Bool_Exp>>;
  cloudServers?: InputMaybe<CloudServer_Bool_Exp>;
  cloudServers_aggregate?: InputMaybe<CloudServer_Aggregate_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  serverRole?: InputMaybe<String_Comparison_Exp>;
  staticServers?: InputMaybe<ServerCheckout_Bool_Exp>;
  staticServers_aggregate?: InputMaybe<ServerCheckout_Aggregate_Bool_Exp>;
};

/** unique or primary key constraints on table "shepherd_serverrole" */
export enum ServerRole_Constraint {
  /** unique or primary key constraint on columns "id" */
  ShepherdServerrolePkey = 'shepherd_serverrole_pkey',
  /** unique or primary key constraint on columns "server_role" */
  ShepherdServerroleServerRoleKey = 'shepherd_serverrole_server_role_key'
}

/** input type for incrementing numeric columns in table "shepherd_serverrole" */
export type ServerRole_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "shepherd_serverrole" */
export type ServerRole_Insert_Input = {
  cloudServers?: InputMaybe<CloudServer_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  serverRole?: InputMaybe<Scalars['String']['input']>;
  staticServers?: InputMaybe<ServerCheckout_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type ServerRole_Max_Fields = {
  __typename?: 'serverRole_max_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  serverRole?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type ServerRole_Min_Fields = {
  __typename?: 'serverRole_min_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  serverRole?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "shepherd_serverrole" */
export type ServerRole_Mutation_Response = {
  __typename?: 'serverRole_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ServerRole>;
};

/** input type for inserting object relation for remote table "shepherd_serverrole" */
export type ServerRole_Obj_Rel_Insert_Input = {
  data: ServerRole_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ServerRole_On_Conflict>;
};

/** on_conflict condition type for table "shepherd_serverrole" */
export type ServerRole_On_Conflict = {
  constraint: ServerRole_Constraint;
  update_columns?: Array<ServerRole_Update_Column>;
  where?: InputMaybe<ServerRole_Bool_Exp>;
};

/** Ordering options when selecting data from "shepherd_serverrole". */
export type ServerRole_Order_By = {
  cloudServers_aggregate?: InputMaybe<CloudServer_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  serverRole?: InputMaybe<Order_By>;
  staticServers_aggregate?: InputMaybe<ServerCheckout_Aggregate_Order_By>;
};

/** primary key columns input for table: shepherd_serverrole */
export type ServerRole_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "shepherd_serverrole" */
export enum ServerRole_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ServerRole = 'serverRole'
}

/** input type for updating data in table "shepherd_serverrole" */
export type ServerRole_Set_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  serverRole?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type ServerRole_Stddev_Fields = {
  __typename?: 'serverRole_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type ServerRole_Stddev_Pop_Fields = {
  __typename?: 'serverRole_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type ServerRole_Stddev_Samp_Fields = {
  __typename?: 'serverRole_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "serverRole" */
export type ServerRole_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ServerRole_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ServerRole_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  serverRole?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type ServerRole_Sum_Fields = {
  __typename?: 'serverRole_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
};

/** update columns of table "shepherd_serverrole" */
export enum ServerRole_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ServerRole = 'serverRole'
}

export type ServerRole_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ServerRole_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ServerRole_Set_Input>;
  /** filter the rows which have to be updated */
  where: ServerRole_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ServerRole_Var_Pop_Fields = {
  __typename?: 'serverRole_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type ServerRole_Var_Samp_Fields = {
  __typename?: 'serverRole_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type ServerRole_Variance_Fields = {
  __typename?: 'serverRole_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "shepherd_serverstatus" */
export type ServerStatus = {
  __typename?: 'serverStatus';
  id: Scalars['bigint']['output'];
  serverStatus: Scalars['String']['output'];
  /** An array relationship */
  servers: Array<StaticServer>;
  /** An aggregate relationship */
  servers_aggregate: StaticServer_Aggregate;
};


/** columns and relationships of "shepherd_serverstatus" */
export type ServerStatusServersArgs = {
  distinct_on?: InputMaybe<Array<StaticServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StaticServer_Order_By>>;
  where?: InputMaybe<StaticServer_Bool_Exp>;
};


/** columns and relationships of "shepherd_serverstatus" */
export type ServerStatusServers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<StaticServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StaticServer_Order_By>>;
  where?: InputMaybe<StaticServer_Bool_Exp>;
};

/** aggregated selection of "shepherd_serverstatus" */
export type ServerStatus_Aggregate = {
  __typename?: 'serverStatus_aggregate';
  aggregate?: Maybe<ServerStatus_Aggregate_Fields>;
  nodes: Array<ServerStatus>;
};

/** aggregate fields of "shepherd_serverstatus" */
export type ServerStatus_Aggregate_Fields = {
  __typename?: 'serverStatus_aggregate_fields';
  avg?: Maybe<ServerStatus_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<ServerStatus_Max_Fields>;
  min?: Maybe<ServerStatus_Min_Fields>;
  stddev?: Maybe<ServerStatus_Stddev_Fields>;
  stddev_pop?: Maybe<ServerStatus_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ServerStatus_Stddev_Samp_Fields>;
  sum?: Maybe<ServerStatus_Sum_Fields>;
  var_pop?: Maybe<ServerStatus_Var_Pop_Fields>;
  var_samp?: Maybe<ServerStatus_Var_Samp_Fields>;
  variance?: Maybe<ServerStatus_Variance_Fields>;
};


/** aggregate fields of "shepherd_serverstatus" */
export type ServerStatus_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<ServerStatus_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type ServerStatus_Avg_Fields = {
  __typename?: 'serverStatus_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "shepherd_serverstatus". All fields are combined with a logical 'AND'. */
export type ServerStatus_Bool_Exp = {
  _and?: InputMaybe<Array<ServerStatus_Bool_Exp>>;
  _not?: InputMaybe<ServerStatus_Bool_Exp>;
  _or?: InputMaybe<Array<ServerStatus_Bool_Exp>>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  serverStatus?: InputMaybe<String_Comparison_Exp>;
  servers?: InputMaybe<StaticServer_Bool_Exp>;
  servers_aggregate?: InputMaybe<StaticServer_Aggregate_Bool_Exp>;
};

/** unique or primary key constraints on table "shepherd_serverstatus" */
export enum ServerStatus_Constraint {
  /** unique or primary key constraint on columns "id" */
  ShepherdServerstatusPkey = 'shepherd_serverstatus_pkey',
  /** unique or primary key constraint on columns "server_status" */
  ShepherdServerstatusServerStatusKey = 'shepherd_serverstatus_server_status_key'
}

/** input type for incrementing numeric columns in table "shepherd_serverstatus" */
export type ServerStatus_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "shepherd_serverstatus" */
export type ServerStatus_Insert_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  serverStatus?: InputMaybe<Scalars['String']['input']>;
  servers?: InputMaybe<StaticServer_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type ServerStatus_Max_Fields = {
  __typename?: 'serverStatus_max_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  serverStatus?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type ServerStatus_Min_Fields = {
  __typename?: 'serverStatus_min_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  serverStatus?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "shepherd_serverstatus" */
export type ServerStatus_Mutation_Response = {
  __typename?: 'serverStatus_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<ServerStatus>;
};

/** input type for inserting object relation for remote table "shepherd_serverstatus" */
export type ServerStatus_Obj_Rel_Insert_Input = {
  data: ServerStatus_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<ServerStatus_On_Conflict>;
};

/** on_conflict condition type for table "shepherd_serverstatus" */
export type ServerStatus_On_Conflict = {
  constraint: ServerStatus_Constraint;
  update_columns?: Array<ServerStatus_Update_Column>;
  where?: InputMaybe<ServerStatus_Bool_Exp>;
};

/** Ordering options when selecting data from "shepherd_serverstatus". */
export type ServerStatus_Order_By = {
  id?: InputMaybe<Order_By>;
  serverStatus?: InputMaybe<Order_By>;
  servers_aggregate?: InputMaybe<StaticServer_Aggregate_Order_By>;
};

/** primary key columns input for table: shepherd_serverstatus */
export type ServerStatus_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "shepherd_serverstatus" */
export enum ServerStatus_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ServerStatus = 'serverStatus'
}

/** input type for updating data in table "shepherd_serverstatus" */
export type ServerStatus_Set_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  serverStatus?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type ServerStatus_Stddev_Fields = {
  __typename?: 'serverStatus_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type ServerStatus_Stddev_Pop_Fields = {
  __typename?: 'serverStatus_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type ServerStatus_Stddev_Samp_Fields = {
  __typename?: 'serverStatus_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "serverStatus" */
export type ServerStatus_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: ServerStatus_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type ServerStatus_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  serverStatus?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type ServerStatus_Sum_Fields = {
  __typename?: 'serverStatus_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
};

/** update columns of table "shepherd_serverstatus" */
export enum ServerStatus_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  ServerStatus = 'serverStatus'
}

export type ServerStatus_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<ServerStatus_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<ServerStatus_Set_Input>;
  /** filter the rows which have to be updated */
  where: ServerStatus_Bool_Exp;
};

/** aggregate var_pop on columns */
export type ServerStatus_Var_Pop_Fields = {
  __typename?: 'serverStatus_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type ServerStatus_Var_Samp_Fields = {
  __typename?: 'serverStatus_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type ServerStatus_Variance_Fields = {
  __typename?: 'serverStatus_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "shepherd_staticserver" */
export type StaticServer = {
  __typename?: 'staticServer';
  /** An array relationship */
  auxServerAddresses: Array<AuxServerAddresses>;
  /** An aggregate relationship */
  auxServerAddresses_aggregate: AuxServerAddresses_Aggregate;
  /** An array relationship */
  checkouts: Array<ServerCheckout>;
  /** An aggregate relationship */
  checkouts_aggregate: ServerCheckout_Aggregate;
  /** An array relationship */
  comments: Array<ServerNote>;
  /** An aggregate relationship */
  comments_aggregate: ServerNote_Aggregate;
  extraFields: Scalars['jsonb']['output'];
  id: Scalars['bigint']['output'];
  ipAddress: Scalars['inet']['output'];
  lastUsedById?: Maybe<Scalars['bigint']['output']>;
  name: Scalars['String']['output'];
  note: Scalars['String']['output'];
  /** An object relationship */
  serverProvider?: Maybe<ServerProvider>;
  serverProviderId?: Maybe<Scalars['bigint']['output']>;
  /** An object relationship */
  serverStatus?: Maybe<ServerStatus>;
  serverStatusId?: Maybe<Scalars['bigint']['output']>;
  /** An object relationship */
  user?: Maybe<User>;
};


/** columns and relationships of "shepherd_staticserver" */
export type StaticServerAuxServerAddressesArgs = {
  distinct_on?: InputMaybe<Array<AuxServerAddresses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AuxServerAddresses_Order_By>>;
  where?: InputMaybe<AuxServerAddresses_Bool_Exp>;
};


/** columns and relationships of "shepherd_staticserver" */
export type StaticServerAuxServerAddresses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AuxServerAddresses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AuxServerAddresses_Order_By>>;
  where?: InputMaybe<AuxServerAddresses_Bool_Exp>;
};


/** columns and relationships of "shepherd_staticserver" */
export type StaticServerCheckoutsArgs = {
  distinct_on?: InputMaybe<Array<ServerCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerCheckout_Order_By>>;
  where?: InputMaybe<ServerCheckout_Bool_Exp>;
};


/** columns and relationships of "shepherd_staticserver" */
export type StaticServerCheckouts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerCheckout_Order_By>>;
  where?: InputMaybe<ServerCheckout_Bool_Exp>;
};


/** columns and relationships of "shepherd_staticserver" */
export type StaticServerCommentsArgs = {
  distinct_on?: InputMaybe<Array<ServerNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerNote_Order_By>>;
  where?: InputMaybe<ServerNote_Bool_Exp>;
};


/** columns and relationships of "shepherd_staticserver" */
export type StaticServerComments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerNote_Order_By>>;
  where?: InputMaybe<ServerNote_Bool_Exp>;
};


/** columns and relationships of "shepherd_staticserver" */
export type StaticServerExtraFieldsArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};

/** aggregated selection of "shepherd_staticserver" */
export type StaticServer_Aggregate = {
  __typename?: 'staticServer_aggregate';
  aggregate?: Maybe<StaticServer_Aggregate_Fields>;
  nodes: Array<StaticServer>;
};

export type StaticServer_Aggregate_Bool_Exp = {
  count?: InputMaybe<StaticServer_Aggregate_Bool_Exp_Count>;
};

export type StaticServer_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<StaticServer_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<StaticServer_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "shepherd_staticserver" */
export type StaticServer_Aggregate_Fields = {
  __typename?: 'staticServer_aggregate_fields';
  avg?: Maybe<StaticServer_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<StaticServer_Max_Fields>;
  min?: Maybe<StaticServer_Min_Fields>;
  stddev?: Maybe<StaticServer_Stddev_Fields>;
  stddev_pop?: Maybe<StaticServer_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<StaticServer_Stddev_Samp_Fields>;
  sum?: Maybe<StaticServer_Sum_Fields>;
  var_pop?: Maybe<StaticServer_Var_Pop_Fields>;
  var_samp?: Maybe<StaticServer_Var_Samp_Fields>;
  variance?: Maybe<StaticServer_Variance_Fields>;
};


/** aggregate fields of "shepherd_staticserver" */
export type StaticServer_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<StaticServer_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "shepherd_staticserver" */
export type StaticServer_Aggregate_Order_By = {
  avg?: InputMaybe<StaticServer_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<StaticServer_Max_Order_By>;
  min?: InputMaybe<StaticServer_Min_Order_By>;
  stddev?: InputMaybe<StaticServer_Stddev_Order_By>;
  stddev_pop?: InputMaybe<StaticServer_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<StaticServer_Stddev_Samp_Order_By>;
  sum?: InputMaybe<StaticServer_Sum_Order_By>;
  var_pop?: InputMaybe<StaticServer_Var_Pop_Order_By>;
  var_samp?: InputMaybe<StaticServer_Var_Samp_Order_By>;
  variance?: InputMaybe<StaticServer_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type StaticServer_Append_Input = {
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "shepherd_staticserver" */
export type StaticServer_Arr_Rel_Insert_Input = {
  data: Array<StaticServer_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<StaticServer_On_Conflict>;
};

/** aggregate avg on columns */
export type StaticServer_Avg_Fields = {
  __typename?: 'staticServer_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  lastUsedById?: Maybe<Scalars['Float']['output']>;
  serverProviderId?: Maybe<Scalars['Float']['output']>;
  serverStatusId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "shepherd_staticserver" */
export type StaticServer_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  lastUsedById?: InputMaybe<Order_By>;
  serverProviderId?: InputMaybe<Order_By>;
  serverStatusId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "shepherd_staticserver". All fields are combined with a logical 'AND'. */
export type StaticServer_Bool_Exp = {
  _and?: InputMaybe<Array<StaticServer_Bool_Exp>>;
  _not?: InputMaybe<StaticServer_Bool_Exp>;
  _or?: InputMaybe<Array<StaticServer_Bool_Exp>>;
  auxServerAddresses?: InputMaybe<AuxServerAddresses_Bool_Exp>;
  auxServerAddresses_aggregate?: InputMaybe<AuxServerAddresses_Aggregate_Bool_Exp>;
  checkouts?: InputMaybe<ServerCheckout_Bool_Exp>;
  checkouts_aggregate?: InputMaybe<ServerCheckout_Aggregate_Bool_Exp>;
  comments?: InputMaybe<ServerNote_Bool_Exp>;
  comments_aggregate?: InputMaybe<ServerNote_Aggregate_Bool_Exp>;
  extraFields?: InputMaybe<Jsonb_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  ipAddress?: InputMaybe<Inet_Comparison_Exp>;
  lastUsedById?: InputMaybe<Bigint_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  serverProvider?: InputMaybe<ServerProvider_Bool_Exp>;
  serverProviderId?: InputMaybe<Bigint_Comparison_Exp>;
  serverStatus?: InputMaybe<ServerStatus_Bool_Exp>;
  serverStatusId?: InputMaybe<Bigint_Comparison_Exp>;
  user?: InputMaybe<User_Bool_Exp>;
};

/** unique or primary key constraints on table "shepherd_staticserver" */
export enum StaticServer_Constraint {
  /** unique or primary key constraint on columns "ip_address" */
  ShepherdStaticserverIpAddressKey = 'shepherd_staticserver_ip_address_key',
  /** unique or primary key constraint on columns "id" */
  ShepherdStaticserverPkey = 'shepherd_staticserver_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type StaticServer_Delete_At_Path_Input = {
  extraFields?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type StaticServer_Delete_Elem_Input = {
  extraFields?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type StaticServer_Delete_Key_Input = {
  extraFields?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "shepherd_staticserver" */
export type StaticServer_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  lastUsedById?: InputMaybe<Scalars['bigint']['input']>;
  serverProviderId?: InputMaybe<Scalars['bigint']['input']>;
  serverStatusId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "shepherd_staticserver" */
export type StaticServer_Insert_Input = {
  auxServerAddresses?: InputMaybe<AuxServerAddresses_Arr_Rel_Insert_Input>;
  checkouts?: InputMaybe<ServerCheckout_Arr_Rel_Insert_Input>;
  comments?: InputMaybe<ServerNote_Arr_Rel_Insert_Input>;
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  lastUsedById?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  serverProvider?: InputMaybe<ServerProvider_Obj_Rel_Insert_Input>;
  serverProviderId?: InputMaybe<Scalars['bigint']['input']>;
  serverStatus?: InputMaybe<ServerStatus_Obj_Rel_Insert_Input>;
  serverStatusId?: InputMaybe<Scalars['bigint']['input']>;
  user?: InputMaybe<User_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type StaticServer_Max_Fields = {
  __typename?: 'staticServer_max_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  lastUsedById?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  serverProviderId?: Maybe<Scalars['bigint']['output']>;
  serverStatusId?: Maybe<Scalars['bigint']['output']>;
};

/** order by max() on columns of table "shepherd_staticserver" */
export type StaticServer_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  lastUsedById?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  serverProviderId?: InputMaybe<Order_By>;
  serverStatusId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type StaticServer_Min_Fields = {
  __typename?: 'staticServer_min_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  lastUsedById?: Maybe<Scalars['bigint']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  serverProviderId?: Maybe<Scalars['bigint']['output']>;
  serverStatusId?: Maybe<Scalars['bigint']['output']>;
};

/** order by min() on columns of table "shepherd_staticserver" */
export type StaticServer_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  lastUsedById?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  serverProviderId?: InputMaybe<Order_By>;
  serverStatusId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "shepherd_staticserver" */
export type StaticServer_Mutation_Response = {
  __typename?: 'staticServer_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<StaticServer>;
};

/** input type for inserting object relation for remote table "shepherd_staticserver" */
export type StaticServer_Obj_Rel_Insert_Input = {
  data: StaticServer_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<StaticServer_On_Conflict>;
};

/** on_conflict condition type for table "shepherd_staticserver" */
export type StaticServer_On_Conflict = {
  constraint: StaticServer_Constraint;
  update_columns?: Array<StaticServer_Update_Column>;
  where?: InputMaybe<StaticServer_Bool_Exp>;
};

/** Ordering options when selecting data from "shepherd_staticserver". */
export type StaticServer_Order_By = {
  auxServerAddresses_aggregate?: InputMaybe<AuxServerAddresses_Aggregate_Order_By>;
  checkouts_aggregate?: InputMaybe<ServerCheckout_Aggregate_Order_By>;
  comments_aggregate?: InputMaybe<ServerNote_Aggregate_Order_By>;
  extraFields?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ipAddress?: InputMaybe<Order_By>;
  lastUsedById?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  serverProvider?: InputMaybe<ServerProvider_Order_By>;
  serverProviderId?: InputMaybe<Order_By>;
  serverStatus?: InputMaybe<ServerStatus_Order_By>;
  serverStatusId?: InputMaybe<Order_By>;
  user?: InputMaybe<User_Order_By>;
};

/** primary key columns input for table: shepherd_staticserver */
export type StaticServer_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type StaticServer_Prepend_Input = {
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "shepherd_staticserver" */
export enum StaticServer_Select_Column {
  /** column name */
  ExtraFields = 'extraFields',
  /** column name */
  Id = 'id',
  /** column name */
  IpAddress = 'ipAddress',
  /** column name */
  LastUsedById = 'lastUsedById',
  /** column name */
  Name = 'name',
  /** column name */
  Note = 'note',
  /** column name */
  ServerProviderId = 'serverProviderId',
  /** column name */
  ServerStatusId = 'serverStatusId'
}

/** input type for updating data in table "shepherd_staticserver" */
export type StaticServer_Set_Input = {
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  lastUsedById?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  serverProviderId?: InputMaybe<Scalars['bigint']['input']>;
  serverStatusId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate stddev on columns */
export type StaticServer_Stddev_Fields = {
  __typename?: 'staticServer_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  lastUsedById?: Maybe<Scalars['Float']['output']>;
  serverProviderId?: Maybe<Scalars['Float']['output']>;
  serverStatusId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "shepherd_staticserver" */
export type StaticServer_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  lastUsedById?: InputMaybe<Order_By>;
  serverProviderId?: InputMaybe<Order_By>;
  serverStatusId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type StaticServer_Stddev_Pop_Fields = {
  __typename?: 'staticServer_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  lastUsedById?: Maybe<Scalars['Float']['output']>;
  serverProviderId?: Maybe<Scalars['Float']['output']>;
  serverStatusId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "shepherd_staticserver" */
export type StaticServer_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  lastUsedById?: InputMaybe<Order_By>;
  serverProviderId?: InputMaybe<Order_By>;
  serverStatusId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type StaticServer_Stddev_Samp_Fields = {
  __typename?: 'staticServer_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  lastUsedById?: Maybe<Scalars['Float']['output']>;
  serverProviderId?: Maybe<Scalars['Float']['output']>;
  serverStatusId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "shepherd_staticserver" */
export type StaticServer_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  lastUsedById?: InputMaybe<Order_By>;
  serverProviderId?: InputMaybe<Order_By>;
  serverStatusId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "staticServer" */
export type StaticServer_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: StaticServer_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type StaticServer_Stream_Cursor_Value_Input = {
  extraFields?: InputMaybe<Scalars['jsonb']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  ipAddress?: InputMaybe<Scalars['inet']['input']>;
  lastUsedById?: InputMaybe<Scalars['bigint']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  serverProviderId?: InputMaybe<Scalars['bigint']['input']>;
  serverStatusId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type StaticServer_Sum_Fields = {
  __typename?: 'staticServer_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  lastUsedById?: Maybe<Scalars['bigint']['output']>;
  serverProviderId?: Maybe<Scalars['bigint']['output']>;
  serverStatusId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "shepherd_staticserver" */
export type StaticServer_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  lastUsedById?: InputMaybe<Order_By>;
  serverProviderId?: InputMaybe<Order_By>;
  serverStatusId?: InputMaybe<Order_By>;
};

/** update columns of table "shepherd_staticserver" */
export enum StaticServer_Update_Column {
  /** column name */
  ExtraFields = 'extraFields',
  /** column name */
  Id = 'id',
  /** column name */
  IpAddress = 'ipAddress',
  /** column name */
  LastUsedById = 'lastUsedById',
  /** column name */
  Name = 'name',
  /** column name */
  Note = 'note',
  /** column name */
  ServerProviderId = 'serverProviderId',
  /** column name */
  ServerStatusId = 'serverStatusId'
}

export type StaticServer_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<StaticServer_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<StaticServer_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<StaticServer_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<StaticServer_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<StaticServer_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<StaticServer_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<StaticServer_Set_Input>;
  /** filter the rows which have to be updated */
  where: StaticServer_Bool_Exp;
};

/** aggregate var_pop on columns */
export type StaticServer_Var_Pop_Fields = {
  __typename?: 'staticServer_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  lastUsedById?: Maybe<Scalars['Float']['output']>;
  serverProviderId?: Maybe<Scalars['Float']['output']>;
  serverStatusId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "shepherd_staticserver" */
export type StaticServer_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  lastUsedById?: InputMaybe<Order_By>;
  serverProviderId?: InputMaybe<Order_By>;
  serverStatusId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type StaticServer_Var_Samp_Fields = {
  __typename?: 'staticServer_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  lastUsedById?: Maybe<Scalars['Float']['output']>;
  serverProviderId?: Maybe<Scalars['Float']['output']>;
  serverStatusId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "shepherd_staticserver" */
export type StaticServer_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  lastUsedById?: InputMaybe<Order_By>;
  serverProviderId?: InputMaybe<Order_By>;
  serverStatusId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type StaticServer_Variance_Fields = {
  __typename?: 'staticServer_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  lastUsedById?: Maybe<Scalars['Float']['output']>;
  serverProviderId?: Maybe<Scalars['Float']['output']>;
  serverStatusId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "shepherd_staticserver" */
export type StaticServer_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  lastUsedById?: InputMaybe<Order_By>;
  serverProviderId?: InputMaybe<Order_By>;
  serverStatusId?: InputMaybe<Order_By>;
};

export type Subscription_Root = {
  __typename?: 'subscription_root';
  /** fetch data from the table: "shepherd_activitytype" */
  activityType: Array<ActivityType>;
  /** fetch aggregated fields from the table: "shepherd_activitytype" */
  activityType_aggregate: ActivityType_Aggregate;
  /** fetch data from the table: "shepherd_activitytype" using primary key columns */
  activityType_by_pk?: Maybe<ActivityType>;
  /** fetch data from the table in a streaming manner: "shepherd_activitytype" */
  activityType_stream: Array<ActivityType>;
  /** fetch data from the table: "reporting_archive" */
  archive: Array<Archive>;
  /** fetch aggregated fields from the table: "reporting_archive" */
  archive_aggregate: Archive_Aggregate;
  /** fetch data from the table: "reporting_archive" using primary key columns */
  archive_by_pk?: Maybe<Archive>;
  /** fetch data from the table in a streaming manner: "reporting_archive" */
  archive_stream: Array<Archive>;
  /** fetch data from the table: "auth_permission" */
  authPermission: Array<AuthPermission>;
  /** fetch aggregated fields from the table: "auth_permission" */
  authPermission_aggregate: AuthPermission_Aggregate;
  /** fetch data from the table: "auth_permission" using primary key columns */
  authPermission_by_pk?: Maybe<AuthPermission>;
  /** fetch data from the table in a streaming manner: "auth_permission" */
  authPermission_stream: Array<AuthPermission>;
  /** An array relationship */
  auxServerAddresses: Array<AuxServerAddresses>;
  /** An aggregate relationship */
  auxServerAddresses_aggregate: AuxServerAddresses_Aggregate;
  /** fetch data from the table: "shepherd_auxserveraddress" using primary key columns */
  auxServerAddresses_by_pk?: Maybe<AuxServerAddresses>;
  /** fetch data from the table in a streaming manner: "shepherd_auxserveraddress" */
  auxServerAddresses_stream: Array<AuxServerAddresses>;
  /** fetch data from the table: "rolodex_client" */
  client: Array<Client>;
  /** fetch data from the table: "rolodex_clientcontact" */
  clientContact: Array<ClientContact>;
  /** fetch aggregated fields from the table: "rolodex_clientcontact" */
  clientContact_aggregate: ClientContact_Aggregate;
  /** fetch data from the table: "rolodex_clientcontact" using primary key columns */
  clientContact_by_pk?: Maybe<ClientContact>;
  /** fetch data from the table in a streaming manner: "rolodex_clientcontact" */
  clientContact_stream: Array<ClientContact>;
  /** fetch data from the table: "rolodex_clientinvite" */
  clientInvite: Array<ClientInvite>;
  /** fetch aggregated fields from the table: "rolodex_clientinvite" */
  clientInvite_aggregate: ClientInvite_Aggregate;
  /** fetch data from the table: "rolodex_clientinvite" using primary key columns */
  clientInvite_by_pk?: Maybe<ClientInvite>;
  /** fetch data from the table in a streaming manner: "rolodex_clientinvite" */
  clientInvite_stream: Array<ClientInvite>;
  /** fetch data from the table: "rolodex_clientnote" */
  clientNote: Array<ClientNote>;
  /** fetch aggregated fields from the table: "rolodex_clientnote" */
  clientNote_aggregate: ClientNote_Aggregate;
  /** fetch data from the table: "rolodex_clientnote" using primary key columns */
  clientNote_by_pk?: Maybe<ClientNote>;
  /** fetch data from the table in a streaming manner: "rolodex_clientnote" */
  clientNote_stream: Array<ClientNote>;
  /** fetch aggregated fields from the table: "rolodex_client" */
  client_aggregate: Client_Aggregate;
  /** fetch data from the table: "rolodex_client" using primary key columns */
  client_by_pk?: Maybe<Client>;
  /** fetch data from the table in a streaming manner: "rolodex_client" */
  client_stream: Array<Client>;
  /** fetch data from the table: "shepherd_transientserver" */
  cloudServer: Array<CloudServer>;
  /** fetch aggregated fields from the table: "shepherd_transientserver" */
  cloudServer_aggregate: CloudServer_Aggregate;
  /** fetch data from the table: "shepherd_transientserver" using primary key columns */
  cloudServer_by_pk?: Maybe<CloudServer>;
  /** fetch data from the table in a streaming manner: "shepherd_transientserver" */
  cloudServer_stream: Array<CloudServer>;
  /** fetch data from the table: "commandcenter_companyinformation" */
  companyInfo: Array<CompanyInfo>;
  /** fetch aggregated fields from the table: "commandcenter_companyinformation" */
  companyInfo_aggregate: CompanyInfo_Aggregate;
  /** fetch data from the table: "commandcenter_companyinformation" using primary key columns */
  companyInfo_by_pk?: Maybe<CompanyInfo>;
  /** fetch data from the table in a streaming manner: "commandcenter_companyinformation" */
  companyInfo_stream: Array<CompanyInfo>;
  /** fetch data from the table: "rolodex_deconfliction" */
  deconfliction: Array<Deconfliction>;
  /** fetch data from the table: "rolodex_deconflictionstatus" */
  deconflictionStatus: Array<DeconflictionStatus>;
  /** fetch aggregated fields from the table: "rolodex_deconflictionstatus" */
  deconflictionStatus_aggregate: DeconflictionStatus_Aggregate;
  /** fetch data from the table: "rolodex_deconflictionstatus" using primary key columns */
  deconflictionStatus_by_pk?: Maybe<DeconflictionStatus>;
  /** fetch data from the table in a streaming manner: "rolodex_deconflictionstatus" */
  deconflictionStatus_stream: Array<DeconflictionStatus>;
  /** fetch aggregated fields from the table: "rolodex_deconfliction" */
  deconfliction_aggregate: Deconfliction_Aggregate;
  /** fetch data from the table: "rolodex_deconfliction" using primary key columns */
  deconfliction_by_pk?: Maybe<Deconfliction>;
  /** fetch data from the table in a streaming manner: "rolodex_deconfliction" */
  deconfliction_stream: Array<Deconfliction>;
  /** fetch data from the table: "django_content_type" */
  djangoContentType: Array<DjangoContentType>;
  /** fetch aggregated fields from the table: "django_content_type" */
  djangoContentType_aggregate: DjangoContentType_Aggregate;
  /** fetch data from the table: "django_content_type" using primary key columns */
  djangoContentType_by_pk?: Maybe<DjangoContentType>;
  /** fetch data from the table in a streaming manner: "django_content_type" */
  djangoContentType_stream: Array<DjangoContentType>;
  /** fetch data from the table: "reporting_doctype" */
  docType: Array<DocType>;
  /** fetch aggregated fields from the table: "reporting_doctype" */
  docType_aggregate: DocType_Aggregate;
  /** fetch data from the table: "reporting_doctype" using primary key columns */
  docType_by_pk?: Maybe<DocType>;
  /** fetch data from the table in a streaming manner: "reporting_doctype" */
  docType_stream: Array<DocType>;
  /** fetch data from the table: "shepherd_domain" */
  domain: Array<Domain>;
  /** fetch data from the table: "shepherd_history" */
  domainCheckout: Array<DomainCheckout>;
  /** fetch aggregated fields from the table: "shepherd_history" */
  domainCheckout_aggregate: DomainCheckout_Aggregate;
  /** fetch data from the table: "shepherd_history" using primary key columns */
  domainCheckout_by_pk?: Maybe<DomainCheckout>;
  /** fetch data from the table in a streaming manner: "shepherd_history" */
  domainCheckout_stream: Array<DomainCheckout>;
  /** fetch data from the table: "shepherd_domainnote" */
  domainNote: Array<DomainNote>;
  /** fetch aggregated fields from the table: "shepherd_domainnote" */
  domainNote_aggregate: DomainNote_Aggregate;
  /** fetch data from the table: "shepherd_domainnote" using primary key columns */
  domainNote_by_pk?: Maybe<DomainNote>;
  /** fetch data from the table in a streaming manner: "shepherd_domainnote" */
  domainNote_stream: Array<DomainNote>;
  /** fetch data from the table: "shepherd_domainserverconnection" */
  domainServerConnection: Array<DomainServerConnection>;
  /** fetch aggregated fields from the table: "shepherd_domainserverconnection" */
  domainServerConnection_aggregate: DomainServerConnection_Aggregate;
  /** fetch data from the table: "shepherd_domainserverconnection" using primary key columns */
  domainServerConnection_by_pk?: Maybe<DomainServerConnection>;
  /** fetch data from the table in a streaming manner: "shepherd_domainserverconnection" */
  domainServerConnection_stream: Array<DomainServerConnection>;
  /** fetch data from the table: "shepherd_domainstatus" */
  domainStatus: Array<DomainStatus>;
  /** fetch aggregated fields from the table: "shepherd_domainstatus" */
  domainStatus_aggregate: DomainStatus_Aggregate;
  /** fetch data from the table: "shepherd_domainstatus" using primary key columns */
  domainStatus_by_pk?: Maybe<DomainStatus>;
  /** fetch data from the table in a streaming manner: "shepherd_domainstatus" */
  domainStatus_stream: Array<DomainStatus>;
  /** fetch aggregated fields from the table: "shepherd_domain" */
  domain_aggregate: Domain_Aggregate;
  /** fetch data from the table: "shepherd_domain" using primary key columns */
  domain_by_pk?: Maybe<Domain>;
  /** fetch data from the table in a streaming manner: "shepherd_domain" */
  domain_stream: Array<Domain>;
  /** An array relationship */
  evidence: Array<Evidence>;
  /** An aggregate relationship */
  evidence_aggregate: Evidence_Aggregate;
  /** fetch data from the table: "reporting_evidence" using primary key columns */
  evidence_by_pk?: Maybe<Evidence>;
  /** fetch data from the table in a streaming manner: "reporting_evidence" */
  evidence_stream: Array<Evidence>;
  /** fetch data from the table: "commandcenter_extrafieldmodel" */
  extraFieldModel: Array<ExtraFieldModel>;
  /** fetch aggregated fields from the table: "commandcenter_extrafieldmodel" */
  extraFieldModel_aggregate: ExtraFieldModel_Aggregate;
  /** fetch data from the table: "commandcenter_extrafieldmodel" using primary key columns */
  extraFieldModel_by_pk?: Maybe<ExtraFieldModel>;
  /** fetch data from the table in a streaming manner: "commandcenter_extrafieldmodel" */
  extraFieldModel_stream: Array<ExtraFieldModel>;
  /** fetch data from the table: "commandcenter_extrafieldspec" */
  extraFieldSpec: Array<ExtraFieldSpec>;
  /** fetch aggregated fields from the table: "commandcenter_extrafieldspec" */
  extraFieldSpec_aggregate: ExtraFieldSpec_Aggregate;
  /** fetch data from the table: "commandcenter_extrafieldspec" using primary key columns */
  extraFieldSpec_by_pk?: Maybe<ExtraFieldSpec>;
  /** fetch data from the table in a streaming manner: "commandcenter_extrafieldspec" */
  extraFieldSpec_stream: Array<ExtraFieldSpec>;
  /** fetch data from the table: "reporting_finding" */
  finding: Array<Finding>;
  /** fetch data from the table: "reporting_findingnote" */
  findingNote: Array<FindingNote>;
  /** fetch aggregated fields from the table: "reporting_findingnote" */
  findingNote_aggregate: FindingNote_Aggregate;
  /** fetch data from the table: "reporting_findingnote" using primary key columns */
  findingNote_by_pk?: Maybe<FindingNote>;
  /** fetch data from the table in a streaming manner: "reporting_findingnote" */
  findingNote_stream: Array<FindingNote>;
  /** fetch data from the table: "reporting_severity" */
  findingSeverity: Array<FindingSeverity>;
  /** fetch aggregated fields from the table: "reporting_severity" */
  findingSeverity_aggregate: FindingSeverity_Aggregate;
  /** fetch data from the table: "reporting_severity" using primary key columns */
  findingSeverity_by_pk?: Maybe<FindingSeverity>;
  /** fetch data from the table in a streaming manner: "reporting_severity" */
  findingSeverity_stream: Array<FindingSeverity>;
  /** fetch data from the table: "reporting_findingtype" */
  findingType: Array<FindingType>;
  /** fetch aggregated fields from the table: "reporting_findingtype" */
  findingType_aggregate: FindingType_Aggregate;
  /** fetch data from the table: "reporting_findingtype" using primary key columns */
  findingType_by_pk?: Maybe<FindingType>;
  /** fetch data from the table in a streaming manner: "reporting_findingtype" */
  findingType_stream: Array<FindingType>;
  /** fetch aggregated fields from the table: "reporting_finding" */
  finding_aggregate: Finding_Aggregate;
  /** fetch data from the table: "reporting_finding" using primary key columns */
  finding_by_pk?: Maybe<Finding>;
  /** fetch data from the table in a streaming manner: "reporting_finding" */
  finding_stream: Array<Finding>;
  /** fetch data from the table: "auth_group" */
  group: Array<Group>;
  /** fetch data from the table: "auth_group_permissions" */
  groupPermission: Array<GroupPermission>;
  /** fetch aggregated fields from the table: "auth_group_permissions" */
  groupPermission_aggregate: GroupPermission_Aggregate;
  /** fetch data from the table: "auth_group_permissions" using primary key columns */
  groupPermission_by_pk?: Maybe<GroupPermission>;
  /** fetch data from the table in a streaming manner: "auth_group_permissions" */
  groupPermission_stream: Array<GroupPermission>;
  /** fetch aggregated fields from the table: "auth_group" */
  group_aggregate: Group_Aggregate;
  /** fetch data from the table: "auth_group" using primary key columns */
  group_by_pk?: Maybe<Group>;
  /** fetch data from the table in a streaming manner: "auth_group" */
  group_stream: Array<Group>;
  /** fetch data from the table: "shepherd_healthstatus" */
  healthStatus: Array<HealthStatus>;
  /** fetch aggregated fields from the table: "shepherd_healthstatus" */
  healthStatus_aggregate: HealthStatus_Aggregate;
  /** fetch data from the table: "shepherd_healthstatus" using primary key columns */
  healthStatus_by_pk?: Maybe<HealthStatus>;
  /** fetch data from the table in a streaming manner: "shepherd_healthstatus" */
  healthStatus_stream: Array<HealthStatus>;
  /** fetch data from the table: "rolodex_projectobjective" */
  objective: Array<Objective>;
  /** fetch data from the table: "rolodex_objectivepriority" */
  objectivePriority: Array<ObjectivePriority>;
  /** fetch aggregated fields from the table: "rolodex_objectivepriority" */
  objectivePriority_aggregate: ObjectivePriority_Aggregate;
  /** fetch data from the table: "rolodex_objectivepriority" using primary key columns */
  objectivePriority_by_pk?: Maybe<ObjectivePriority>;
  /** fetch data from the table in a streaming manner: "rolodex_objectivepriority" */
  objectivePriority_stream: Array<ObjectivePriority>;
  /** fetch data from the table: "rolodex_objectivestatus" */
  objectiveStatus: Array<ObjectiveStatus>;
  /** fetch aggregated fields from the table: "rolodex_objectivestatus" */
  objectiveStatus_aggregate: ObjectiveStatus_Aggregate;
  /** fetch data from the table: "rolodex_objectivestatus" using primary key columns */
  objectiveStatus_by_pk?: Maybe<ObjectiveStatus>;
  /** fetch data from the table in a streaming manner: "rolodex_objectivestatus" */
  objectiveStatus_stream: Array<ObjectiveStatus>;
  /** fetch data from the table: "rolodex_projectsubtask" */
  objectiveSubTask: Array<ObjectiveSubTask>;
  /** fetch aggregated fields from the table: "rolodex_projectsubtask" */
  objectiveSubTask_aggregate: ObjectiveSubTask_Aggregate;
  /** fetch data from the table: "rolodex_projectsubtask" using primary key columns */
  objectiveSubTask_by_pk?: Maybe<ObjectiveSubTask>;
  /** fetch data from the table in a streaming manner: "rolodex_projectsubtask" */
  objectiveSubTask_stream: Array<ObjectiveSubTask>;
  /** fetch aggregated fields from the table: "rolodex_projectobjective" */
  objective_aggregate: Objective_Aggregate;
  /** fetch data from the table: "rolodex_projectobjective" using primary key columns */
  objective_by_pk?: Maybe<Objective>;
  /** fetch data from the table in a streaming manner: "rolodex_projectobjective" */
  objective_stream: Array<Objective>;
  /** fetch data from the table: "oplog_oplog" */
  oplog: Array<Oplog>;
  /** fetch data from the table: "oplog_oplogentry" */
  oplogEntry: Array<OplogEntry>;
  /** fetch aggregated fields from the table: "oplog_oplogentry" */
  oplogEntry_aggregate: OplogEntry_Aggregate;
  /** fetch data from the table: "oplog_oplogentry" using primary key columns */
  oplogEntry_by_pk?: Maybe<OplogEntry>;
  /** fetch data from the table in a streaming manner: "oplog_oplogentry" */
  oplogEntry_stream: Array<OplogEntry>;
  /** fetch aggregated fields from the table: "oplog_oplog" */
  oplog_aggregate: Oplog_Aggregate;
  /** fetch data from the table: "oplog_oplog" using primary key columns */
  oplog_by_pk?: Maybe<Oplog>;
  /** fetch data from the table in a streaming manner: "oplog_oplog" */
  oplog_stream: Array<Oplog>;
  /** fetch data from the table: "rolodex_project" */
  project: Array<Project>;
  /** fetch data from the table: "rolodex_projectassignment" */
  projectAssignment: Array<ProjectAssignment>;
  /** fetch aggregated fields from the table: "rolodex_projectassignment" */
  projectAssignment_aggregate: ProjectAssignment_Aggregate;
  /** fetch data from the table: "rolodex_projectassignment" using primary key columns */
  projectAssignment_by_pk?: Maybe<ProjectAssignment>;
  /** fetch data from the table in a streaming manner: "rolodex_projectassignment" */
  projectAssignment_stream: Array<ProjectAssignment>;
  /** fetch data from the table: "rolodex_projectcontact" */
  projectContact: Array<ProjectContact>;
  /** fetch aggregated fields from the table: "rolodex_projectcontact" */
  projectContact_aggregate: ProjectContact_Aggregate;
  /** fetch data from the table: "rolodex_projectcontact" using primary key columns */
  projectContact_by_pk?: Maybe<ProjectContact>;
  /** fetch data from the table in a streaming manner: "rolodex_projectcontact" */
  projectContact_stream: Array<ProjectContact>;
  /** fetch data from the table: "rolodex_projectinvite" */
  projectInvite: Array<ProjectInvite>;
  /** fetch aggregated fields from the table: "rolodex_projectinvite" */
  projectInvite_aggregate: ProjectInvite_Aggregate;
  /** fetch data from the table: "rolodex_projectinvite" using primary key columns */
  projectInvite_by_pk?: Maybe<ProjectInvite>;
  /** fetch data from the table in a streaming manner: "rolodex_projectinvite" */
  projectInvite_stream: Array<ProjectInvite>;
  /** fetch data from the table: "rolodex_projectnote" */
  projectNote: Array<ProjectNote>;
  /** fetch aggregated fields from the table: "rolodex_projectnote" */
  projectNote_aggregate: ProjectNote_Aggregate;
  /** fetch data from the table: "rolodex_projectnote" using primary key columns */
  projectNote_by_pk?: Maybe<ProjectNote>;
  /** fetch data from the table in a streaming manner: "rolodex_projectnote" */
  projectNote_stream: Array<ProjectNote>;
  /** fetch data from the table: "rolodex_projectrole" */
  projectRole: Array<ProjectRole>;
  /** fetch aggregated fields from the table: "rolodex_projectrole" */
  projectRole_aggregate: ProjectRole_Aggregate;
  /** fetch data from the table: "rolodex_projectrole" using primary key columns */
  projectRole_by_pk?: Maybe<ProjectRole>;
  /** fetch data from the table in a streaming manner: "rolodex_projectrole" */
  projectRole_stream: Array<ProjectRole>;
  /** fetch data from the table: "rolodex_projecttype" */
  projectType: Array<ProjectType>;
  /** fetch aggregated fields from the table: "rolodex_projecttype" */
  projectType_aggregate: ProjectType_Aggregate;
  /** fetch data from the table: "rolodex_projecttype" using primary key columns */
  projectType_by_pk?: Maybe<ProjectType>;
  /** fetch data from the table in a streaming manner: "rolodex_projecttype" */
  projectType_stream: Array<ProjectType>;
  /** fetch aggregated fields from the table: "rolodex_project" */
  project_aggregate: Project_Aggregate;
  /** fetch data from the table: "rolodex_project" using primary key columns */
  project_by_pk?: Maybe<Project>;
  /** fetch data from the table in a streaming manner: "rolodex_project" */
  project_stream: Array<Project>;
  /** fetch data from the table: "reporting_report" */
  report: Array<Report>;
  /** fetch data from the table: "commandcenter_reportconfiguration" */
  reportConfiguration: Array<ReportConfiguration>;
  /** fetch aggregated fields from the table: "commandcenter_reportconfiguration" */
  reportConfiguration_aggregate: ReportConfiguration_Aggregate;
  /** fetch data from the table: "commandcenter_reportconfiguration" using primary key columns */
  reportConfiguration_by_pk?: Maybe<ReportConfiguration>;
  /** fetch data from the table in a streaming manner: "commandcenter_reportconfiguration" */
  reportConfiguration_stream: Array<ReportConfiguration>;
  /** fetch aggregated fields from the table: "reporting_report" */
  report_aggregate: Report_Aggregate;
  /** fetch data from the table: "reporting_report" using primary key columns */
  report_by_pk?: Maybe<Report>;
  /** fetch data from the table in a streaming manner: "reporting_report" */
  report_stream: Array<Report>;
  /** fetch data from the table: "reporting_reportfindinglink" */
  reportedFinding: Array<ReportedFinding>;
  /** fetch data from the table: "reporting_localfindingnote" */
  reportedFindingNote: Array<ReportedFindingNote>;
  /** fetch aggregated fields from the table: "reporting_localfindingnote" */
  reportedFindingNote_aggregate: ReportedFindingNote_Aggregate;
  /** fetch data from the table: "reporting_localfindingnote" using primary key columns */
  reportedFindingNote_by_pk?: Maybe<ReportedFindingNote>;
  /** fetch data from the table in a streaming manner: "reporting_localfindingnote" */
  reportedFindingNote_stream: Array<ReportedFindingNote>;
  /** fetch aggregated fields from the table: "reporting_reportfindinglink" */
  reportedFinding_aggregate: ReportedFinding_Aggregate;
  /** fetch data from the table: "reporting_reportfindinglink" using primary key columns */
  reportedFinding_by_pk?: Maybe<ReportedFinding>;
  /** fetch data from the table in a streaming manner: "reporting_reportfindinglink" */
  reportedFinding_stream: Array<ReportedFinding>;
  /** fetch data from the table: "reporting_observation" */
  reporting_observation: Array<Reporting_Observation>;
  /** fetch aggregated fields from the table: "reporting_observation" */
  reporting_observation_aggregate: Reporting_Observation_Aggregate;
  /** fetch data from the table: "reporting_observation" using primary key columns */
  reporting_observation_by_pk?: Maybe<Reporting_Observation>;
  /** fetch data from the table in a streaming manner: "reporting_observation" */
  reporting_observation_stream: Array<Reporting_Observation>;
  /** fetch data from the table: "reporting_reportobservationlink" */
  reporting_reportobservationlink: Array<Reporting_Reportobservationlink>;
  /** fetch aggregated fields from the table: "reporting_reportobservationlink" */
  reporting_reportobservationlink_aggregate: Reporting_Reportobservationlink_Aggregate;
  /** fetch data from the table: "reporting_reportobservationlink" using primary key columns */
  reporting_reportobservationlink_by_pk?: Maybe<Reporting_Reportobservationlink>;
  /** fetch data from the table in a streaming manner: "reporting_reportobservationlink" */
  reporting_reportobservationlink_stream: Array<Reporting_Reportobservationlink>;
  /** fetch data from the table: "rolodex_projectscope" */
  scope: Array<Scope>;
  /** fetch aggregated fields from the table: "rolodex_projectscope" */
  scope_aggregate: Scope_Aggregate;
  /** fetch data from the table: "rolodex_projectscope" using primary key columns */
  scope_by_pk?: Maybe<Scope>;
  /** fetch data from the table in a streaming manner: "rolodex_projectscope" */
  scope_stream: Array<Scope>;
  /** fetch data from the table: "shepherd_serverhistory" */
  serverCheckout: Array<ServerCheckout>;
  /** fetch aggregated fields from the table: "shepherd_serverhistory" */
  serverCheckout_aggregate: ServerCheckout_Aggregate;
  /** fetch data from the table: "shepherd_serverhistory" using primary key columns */
  serverCheckout_by_pk?: Maybe<ServerCheckout>;
  /** fetch data from the table in a streaming manner: "shepherd_serverhistory" */
  serverCheckout_stream: Array<ServerCheckout>;
  /** fetch data from the table: "shepherd_servernote" */
  serverNote: Array<ServerNote>;
  /** fetch aggregated fields from the table: "shepherd_servernote" */
  serverNote_aggregate: ServerNote_Aggregate;
  /** fetch data from the table: "shepherd_servernote" using primary key columns */
  serverNote_by_pk?: Maybe<ServerNote>;
  /** fetch data from the table in a streaming manner: "shepherd_servernote" */
  serverNote_stream: Array<ServerNote>;
  /** fetch data from the table: "shepherd_serverprovider" */
  serverProvider: Array<ServerProvider>;
  /** fetch aggregated fields from the table: "shepherd_serverprovider" */
  serverProvider_aggregate: ServerProvider_Aggregate;
  /** fetch data from the table: "shepherd_serverprovider" using primary key columns */
  serverProvider_by_pk?: Maybe<ServerProvider>;
  /** fetch data from the table in a streaming manner: "shepherd_serverprovider" */
  serverProvider_stream: Array<ServerProvider>;
  /** fetch data from the table: "shepherd_serverrole" */
  serverRole: Array<ServerRole>;
  /** fetch aggregated fields from the table: "shepherd_serverrole" */
  serverRole_aggregate: ServerRole_Aggregate;
  /** fetch data from the table: "shepherd_serverrole" using primary key columns */
  serverRole_by_pk?: Maybe<ServerRole>;
  /** fetch data from the table in a streaming manner: "shepherd_serverrole" */
  serverRole_stream: Array<ServerRole>;
  /** fetch data from the table: "shepherd_serverstatus" */
  serverStatus: Array<ServerStatus>;
  /** fetch aggregated fields from the table: "shepherd_serverstatus" */
  serverStatus_aggregate: ServerStatus_Aggregate;
  /** fetch data from the table: "shepherd_serverstatus" using primary key columns */
  serverStatus_by_pk?: Maybe<ServerStatus>;
  /** fetch data from the table in a streaming manner: "shepherd_serverstatus" */
  serverStatus_stream: Array<ServerStatus>;
  /** fetch data from the table: "shepherd_staticserver" */
  staticServer: Array<StaticServer>;
  /** fetch aggregated fields from the table: "shepherd_staticserver" */
  staticServer_aggregate: StaticServer_Aggregate;
  /** fetch data from the table: "shepherd_staticserver" using primary key columns */
  staticServer_by_pk?: Maybe<StaticServer>;
  /** fetch data from the table in a streaming manner: "shepherd_staticserver" */
  staticServer_stream: Array<StaticServer>;
  /** fetch data from the table: "taggit_tag" */
  tag: Array<Tag>;
  /** fetch aggregated fields from the table: "taggit_tag" */
  tag_aggregate: Tag_Aggregate;
  /** fetch data from the table: "taggit_tag" using primary key columns */
  tag_by_pk?: Maybe<Tag>;
  /** fetch data from the table in a streaming manner: "taggit_tag" */
  tag_stream: Array<Tag>;
  /** An array relationship */
  taggedItem: Array<TaggedItem>;
  /** An aggregate relationship */
  taggedItem_aggregate: TaggedItem_Aggregate;
  /** fetch data from the table: "taggit_taggeditem" using primary key columns */
  taggedItem_by_pk?: Maybe<TaggedItem>;
  /** fetch data from the table in a streaming manner: "taggit_taggeditem" */
  taggedItem_stream: Array<TaggedItem>;
  /** fetch data from the table: "rolodex_projecttarget" */
  target: Array<Target>;
  /** fetch aggregated fields from the table: "rolodex_projecttarget" */
  target_aggregate: Target_Aggregate;
  /** fetch data from the table: "rolodex_projecttarget" using primary key columns */
  target_by_pk?: Maybe<Target>;
  /** fetch data from the table in a streaming manner: "rolodex_projecttarget" */
  target_stream: Array<Target>;
  /** fetch data from the table: "django_q_task" */
  task: Array<Task>;
  /** fetch aggregated fields from the table: "django_q_task" */
  task_aggregate: Task_Aggregate;
  /** fetch data from the table: "django_q_task" using primary key columns */
  task_by_pk?: Maybe<Task>;
  /** fetch data from the table in a streaming manner: "django_q_task" */
  task_stream: Array<Task>;
  /** fetch data from the table: "reporting_reporttemplate" */
  template: Array<Template>;
  /** fetch aggregated fields from the table: "reporting_reporttemplate" */
  template_aggregate: Template_Aggregate;
  /** fetch data from the table: "reporting_reporttemplate" using primary key columns */
  template_by_pk?: Maybe<Template>;
  /** fetch data from the table in a streaming manner: "reporting_reporttemplate" */
  template_stream: Array<Template>;
  /** fetch data from the table: "users_user" */
  user: Array<User>;
  /** fetch data from the table: "users_user_groups" */
  userGroup: Array<UserGroup>;
  /** fetch aggregated fields from the table: "users_user_groups" */
  userGroup_aggregate: UserGroup_Aggregate;
  /** fetch data from the table: "users_user_groups" using primary key columns */
  userGroup_by_pk?: Maybe<UserGroup>;
  /** fetch data from the table in a streaming manner: "users_user_groups" */
  userGroup_stream: Array<UserGroup>;
  /** fetch data from the table: "users_user_user_permissions" */
  userPermission: Array<UserPermission>;
  /** fetch aggregated fields from the table: "users_user_user_permissions" */
  userPermission_aggregate: UserPermission_Aggregate;
  /** fetch data from the table: "users_user_user_permissions" using primary key columns */
  userPermission_by_pk?: Maybe<UserPermission>;
  /** fetch data from the table in a streaming manner: "users_user_user_permissions" */
  userPermission_stream: Array<UserPermission>;
  /** fetch data from the table: "home_userprofile" */
  userProfile: Array<UserProfile>;
  /** fetch aggregated fields from the table: "home_userprofile" */
  userProfile_aggregate: UserProfile_Aggregate;
  /** fetch data from the table: "home_userprofile" using primary key columns */
  userProfile_by_pk?: Maybe<UserProfile>;
  /** fetch data from the table in a streaming manner: "home_userprofile" */
  userProfile_stream: Array<UserProfile>;
  /** fetch aggregated fields from the table: "users_user" */
  user_aggregate: User_Aggregate;
  /** fetch data from the table: "users_user" using primary key columns */
  user_by_pk?: Maybe<User>;
  /** fetch data from the table in a streaming manner: "users_user" */
  user_stream: Array<User>;
  /** fetch data from the table: "rolodex_whitecard" */
  whitecard: Array<Whitecard>;
  /** fetch aggregated fields from the table: "rolodex_whitecard" */
  whitecard_aggregate: Whitecard_Aggregate;
  /** fetch data from the table: "rolodex_whitecard" using primary key columns */
  whitecard_by_pk?: Maybe<Whitecard>;
  /** fetch data from the table in a streaming manner: "rolodex_whitecard" */
  whitecard_stream: Array<Whitecard>;
  /** fetch data from the table: "shepherd_whoisstatus" */
  whoisStatus: Array<WhoisStatus>;
  /** fetch aggregated fields from the table: "shepherd_whoisstatus" */
  whoisStatus_aggregate: WhoisStatus_Aggregate;
  /** fetch data from the table: "shepherd_whoisstatus" using primary key columns */
  whoisStatus_by_pk?: Maybe<WhoisStatus>;
  /** fetch data from the table in a streaming manner: "shepherd_whoisstatus" */
  whoisStatus_stream: Array<WhoisStatus>;
};


export type Subscription_RootActivityTypeArgs = {
  distinct_on?: InputMaybe<Array<ActivityType_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ActivityType_Order_By>>;
  where?: InputMaybe<ActivityType_Bool_Exp>;
};


export type Subscription_RootActivityType_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ActivityType_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ActivityType_Order_By>>;
  where?: InputMaybe<ActivityType_Bool_Exp>;
};


export type Subscription_RootActivityType_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootActivityType_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ActivityType_Stream_Cursor_Input>>;
  where?: InputMaybe<ActivityType_Bool_Exp>;
};


export type Subscription_RootArchiveArgs = {
  distinct_on?: InputMaybe<Array<Archive_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Archive_Order_By>>;
  where?: InputMaybe<Archive_Bool_Exp>;
};


export type Subscription_RootArchive_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Archive_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Archive_Order_By>>;
  where?: InputMaybe<Archive_Bool_Exp>;
};


export type Subscription_RootArchive_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootArchive_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Archive_Stream_Cursor_Input>>;
  where?: InputMaybe<Archive_Bool_Exp>;
};


export type Subscription_RootAuthPermissionArgs = {
  distinct_on?: InputMaybe<Array<AuthPermission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AuthPermission_Order_By>>;
  where?: InputMaybe<AuthPermission_Bool_Exp>;
};


export type Subscription_RootAuthPermission_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AuthPermission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AuthPermission_Order_By>>;
  where?: InputMaybe<AuthPermission_Bool_Exp>;
};


export type Subscription_RootAuthPermission_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootAuthPermission_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<AuthPermission_Stream_Cursor_Input>>;
  where?: InputMaybe<AuthPermission_Bool_Exp>;
};


export type Subscription_RootAuxServerAddressesArgs = {
  distinct_on?: InputMaybe<Array<AuxServerAddresses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AuxServerAddresses_Order_By>>;
  where?: InputMaybe<AuxServerAddresses_Bool_Exp>;
};


export type Subscription_RootAuxServerAddresses_AggregateArgs = {
  distinct_on?: InputMaybe<Array<AuxServerAddresses_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<AuxServerAddresses_Order_By>>;
  where?: InputMaybe<AuxServerAddresses_Bool_Exp>;
};


export type Subscription_RootAuxServerAddresses_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootAuxServerAddresses_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<AuxServerAddresses_Stream_Cursor_Input>>;
  where?: InputMaybe<AuxServerAddresses_Bool_Exp>;
};


export type Subscription_RootClientArgs = {
  distinct_on?: InputMaybe<Array<Client_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Client_Order_By>>;
  where?: InputMaybe<Client_Bool_Exp>;
};


export type Subscription_RootClientContactArgs = {
  distinct_on?: InputMaybe<Array<ClientContact_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientContact_Order_By>>;
  where?: InputMaybe<ClientContact_Bool_Exp>;
};


export type Subscription_RootClientContact_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ClientContact_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientContact_Order_By>>;
  where?: InputMaybe<ClientContact_Bool_Exp>;
};


export type Subscription_RootClientContact_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootClientContact_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ClientContact_Stream_Cursor_Input>>;
  where?: InputMaybe<ClientContact_Bool_Exp>;
};


export type Subscription_RootClientInviteArgs = {
  distinct_on?: InputMaybe<Array<ClientInvite_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientInvite_Order_By>>;
  where?: InputMaybe<ClientInvite_Bool_Exp>;
};


export type Subscription_RootClientInvite_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ClientInvite_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientInvite_Order_By>>;
  where?: InputMaybe<ClientInvite_Bool_Exp>;
};


export type Subscription_RootClientInvite_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootClientInvite_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ClientInvite_Stream_Cursor_Input>>;
  where?: InputMaybe<ClientInvite_Bool_Exp>;
};


export type Subscription_RootClientNoteArgs = {
  distinct_on?: InputMaybe<Array<ClientNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientNote_Order_By>>;
  where?: InputMaybe<ClientNote_Bool_Exp>;
};


export type Subscription_RootClientNote_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ClientNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientNote_Order_By>>;
  where?: InputMaybe<ClientNote_Bool_Exp>;
};


export type Subscription_RootClientNote_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootClientNote_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ClientNote_Stream_Cursor_Input>>;
  where?: InputMaybe<ClientNote_Bool_Exp>;
};


export type Subscription_RootClient_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Client_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Client_Order_By>>;
  where?: InputMaybe<Client_Bool_Exp>;
};


export type Subscription_RootClient_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootClient_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Client_Stream_Cursor_Input>>;
  where?: InputMaybe<Client_Bool_Exp>;
};


export type Subscription_RootCloudServerArgs = {
  distinct_on?: InputMaybe<Array<CloudServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CloudServer_Order_By>>;
  where?: InputMaybe<CloudServer_Bool_Exp>;
};


export type Subscription_RootCloudServer_AggregateArgs = {
  distinct_on?: InputMaybe<Array<CloudServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CloudServer_Order_By>>;
  where?: InputMaybe<CloudServer_Bool_Exp>;
};


export type Subscription_RootCloudServer_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootCloudServer_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<CloudServer_Stream_Cursor_Input>>;
  where?: InputMaybe<CloudServer_Bool_Exp>;
};


export type Subscription_RootCompanyInfoArgs = {
  distinct_on?: InputMaybe<Array<CompanyInfo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CompanyInfo_Order_By>>;
  where?: InputMaybe<CompanyInfo_Bool_Exp>;
};


export type Subscription_RootCompanyInfo_AggregateArgs = {
  distinct_on?: InputMaybe<Array<CompanyInfo_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CompanyInfo_Order_By>>;
  where?: InputMaybe<CompanyInfo_Bool_Exp>;
};


export type Subscription_RootCompanyInfo_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootCompanyInfo_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<CompanyInfo_Stream_Cursor_Input>>;
  where?: InputMaybe<CompanyInfo_Bool_Exp>;
};


export type Subscription_RootDeconflictionArgs = {
  distinct_on?: InputMaybe<Array<Deconfliction_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Deconfliction_Order_By>>;
  where?: InputMaybe<Deconfliction_Bool_Exp>;
};


export type Subscription_RootDeconflictionStatusArgs = {
  distinct_on?: InputMaybe<Array<DeconflictionStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DeconflictionStatus_Order_By>>;
  where?: InputMaybe<DeconflictionStatus_Bool_Exp>;
};


export type Subscription_RootDeconflictionStatus_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DeconflictionStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DeconflictionStatus_Order_By>>;
  where?: InputMaybe<DeconflictionStatus_Bool_Exp>;
};


export type Subscription_RootDeconflictionStatus_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootDeconflictionStatus_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<DeconflictionStatus_Stream_Cursor_Input>>;
  where?: InputMaybe<DeconflictionStatus_Bool_Exp>;
};


export type Subscription_RootDeconfliction_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Deconfliction_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Deconfliction_Order_By>>;
  where?: InputMaybe<Deconfliction_Bool_Exp>;
};


export type Subscription_RootDeconfliction_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootDeconfliction_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Deconfliction_Stream_Cursor_Input>>;
  where?: InputMaybe<Deconfliction_Bool_Exp>;
};


export type Subscription_RootDjangoContentTypeArgs = {
  distinct_on?: InputMaybe<Array<DjangoContentType_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DjangoContentType_Order_By>>;
  where?: InputMaybe<DjangoContentType_Bool_Exp>;
};


export type Subscription_RootDjangoContentType_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DjangoContentType_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DjangoContentType_Order_By>>;
  where?: InputMaybe<DjangoContentType_Bool_Exp>;
};


export type Subscription_RootDjangoContentType_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootDjangoContentType_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<DjangoContentType_Stream_Cursor_Input>>;
  where?: InputMaybe<DjangoContentType_Bool_Exp>;
};


export type Subscription_RootDocTypeArgs = {
  distinct_on?: InputMaybe<Array<DocType_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DocType_Order_By>>;
  where?: InputMaybe<DocType_Bool_Exp>;
};


export type Subscription_RootDocType_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DocType_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DocType_Order_By>>;
  where?: InputMaybe<DocType_Bool_Exp>;
};


export type Subscription_RootDocType_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootDocType_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<DocType_Stream_Cursor_Input>>;
  where?: InputMaybe<DocType_Bool_Exp>;
};


export type Subscription_RootDomainArgs = {
  distinct_on?: InputMaybe<Array<Domain_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Domain_Order_By>>;
  where?: InputMaybe<Domain_Bool_Exp>;
};


export type Subscription_RootDomainCheckoutArgs = {
  distinct_on?: InputMaybe<Array<DomainCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainCheckout_Order_By>>;
  where?: InputMaybe<DomainCheckout_Bool_Exp>;
};


export type Subscription_RootDomainCheckout_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DomainCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainCheckout_Order_By>>;
  where?: InputMaybe<DomainCheckout_Bool_Exp>;
};


export type Subscription_RootDomainCheckout_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootDomainCheckout_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<DomainCheckout_Stream_Cursor_Input>>;
  where?: InputMaybe<DomainCheckout_Bool_Exp>;
};


export type Subscription_RootDomainNoteArgs = {
  distinct_on?: InputMaybe<Array<DomainNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainNote_Order_By>>;
  where?: InputMaybe<DomainNote_Bool_Exp>;
};


export type Subscription_RootDomainNote_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DomainNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainNote_Order_By>>;
  where?: InputMaybe<DomainNote_Bool_Exp>;
};


export type Subscription_RootDomainNote_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootDomainNote_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<DomainNote_Stream_Cursor_Input>>;
  where?: InputMaybe<DomainNote_Bool_Exp>;
};


export type Subscription_RootDomainServerConnectionArgs = {
  distinct_on?: InputMaybe<Array<DomainServerConnection_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainServerConnection_Order_By>>;
  where?: InputMaybe<DomainServerConnection_Bool_Exp>;
};


export type Subscription_RootDomainServerConnection_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DomainServerConnection_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainServerConnection_Order_By>>;
  where?: InputMaybe<DomainServerConnection_Bool_Exp>;
};


export type Subscription_RootDomainServerConnection_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootDomainServerConnection_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<DomainServerConnection_Stream_Cursor_Input>>;
  where?: InputMaybe<DomainServerConnection_Bool_Exp>;
};


export type Subscription_RootDomainStatusArgs = {
  distinct_on?: InputMaybe<Array<DomainStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainStatus_Order_By>>;
  where?: InputMaybe<DomainStatus_Bool_Exp>;
};


export type Subscription_RootDomainStatus_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DomainStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainStatus_Order_By>>;
  where?: InputMaybe<DomainStatus_Bool_Exp>;
};


export type Subscription_RootDomainStatus_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootDomainStatus_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<DomainStatus_Stream_Cursor_Input>>;
  where?: InputMaybe<DomainStatus_Bool_Exp>;
};


export type Subscription_RootDomain_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Domain_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Domain_Order_By>>;
  where?: InputMaybe<Domain_Bool_Exp>;
};


export type Subscription_RootDomain_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootDomain_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Domain_Stream_Cursor_Input>>;
  where?: InputMaybe<Domain_Bool_Exp>;
};


export type Subscription_RootEvidenceArgs = {
  distinct_on?: InputMaybe<Array<Evidence_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evidence_Order_By>>;
  where?: InputMaybe<Evidence_Bool_Exp>;
};


export type Subscription_RootEvidence_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Evidence_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evidence_Order_By>>;
  where?: InputMaybe<Evidence_Bool_Exp>;
};


export type Subscription_RootEvidence_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootEvidence_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Evidence_Stream_Cursor_Input>>;
  where?: InputMaybe<Evidence_Bool_Exp>;
};


export type Subscription_RootExtraFieldModelArgs = {
  distinct_on?: InputMaybe<Array<ExtraFieldModel_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ExtraFieldModel_Order_By>>;
  where?: InputMaybe<ExtraFieldModel_Bool_Exp>;
};


export type Subscription_RootExtraFieldModel_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ExtraFieldModel_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ExtraFieldModel_Order_By>>;
  where?: InputMaybe<ExtraFieldModel_Bool_Exp>;
};


export type Subscription_RootExtraFieldModel_By_PkArgs = {
  modelInternalName: Scalars['String']['input'];
};


export type Subscription_RootExtraFieldModel_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ExtraFieldModel_Stream_Cursor_Input>>;
  where?: InputMaybe<ExtraFieldModel_Bool_Exp>;
};


export type Subscription_RootExtraFieldSpecArgs = {
  distinct_on?: InputMaybe<Array<ExtraFieldSpec_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ExtraFieldSpec_Order_By>>;
  where?: InputMaybe<ExtraFieldSpec_Bool_Exp>;
};


export type Subscription_RootExtraFieldSpec_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ExtraFieldSpec_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ExtraFieldSpec_Order_By>>;
  where?: InputMaybe<ExtraFieldSpec_Bool_Exp>;
};


export type Subscription_RootExtraFieldSpec_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootExtraFieldSpec_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ExtraFieldSpec_Stream_Cursor_Input>>;
  where?: InputMaybe<ExtraFieldSpec_Bool_Exp>;
};


export type Subscription_RootFindingArgs = {
  distinct_on?: InputMaybe<Array<Finding_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Finding_Order_By>>;
  where?: InputMaybe<Finding_Bool_Exp>;
};


export type Subscription_RootFindingNoteArgs = {
  distinct_on?: InputMaybe<Array<FindingNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<FindingNote_Order_By>>;
  where?: InputMaybe<FindingNote_Bool_Exp>;
};


export type Subscription_RootFindingNote_AggregateArgs = {
  distinct_on?: InputMaybe<Array<FindingNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<FindingNote_Order_By>>;
  where?: InputMaybe<FindingNote_Bool_Exp>;
};


export type Subscription_RootFindingNote_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootFindingNote_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<FindingNote_Stream_Cursor_Input>>;
  where?: InputMaybe<FindingNote_Bool_Exp>;
};


export type Subscription_RootFindingSeverityArgs = {
  distinct_on?: InputMaybe<Array<FindingSeverity_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<FindingSeverity_Order_By>>;
  where?: InputMaybe<FindingSeverity_Bool_Exp>;
};


export type Subscription_RootFindingSeverity_AggregateArgs = {
  distinct_on?: InputMaybe<Array<FindingSeverity_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<FindingSeverity_Order_By>>;
  where?: InputMaybe<FindingSeverity_Bool_Exp>;
};


export type Subscription_RootFindingSeverity_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootFindingSeverity_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<FindingSeverity_Stream_Cursor_Input>>;
  where?: InputMaybe<FindingSeverity_Bool_Exp>;
};


export type Subscription_RootFindingTypeArgs = {
  distinct_on?: InputMaybe<Array<FindingType_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<FindingType_Order_By>>;
  where?: InputMaybe<FindingType_Bool_Exp>;
};


export type Subscription_RootFindingType_AggregateArgs = {
  distinct_on?: InputMaybe<Array<FindingType_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<FindingType_Order_By>>;
  where?: InputMaybe<FindingType_Bool_Exp>;
};


export type Subscription_RootFindingType_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootFindingType_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<FindingType_Stream_Cursor_Input>>;
  where?: InputMaybe<FindingType_Bool_Exp>;
};


export type Subscription_RootFinding_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Finding_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Finding_Order_By>>;
  where?: InputMaybe<Finding_Bool_Exp>;
};


export type Subscription_RootFinding_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootFinding_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Finding_Stream_Cursor_Input>>;
  where?: InputMaybe<Finding_Bool_Exp>;
};


export type Subscription_RootGroupArgs = {
  distinct_on?: InputMaybe<Array<Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Group_Order_By>>;
  where?: InputMaybe<Group_Bool_Exp>;
};


export type Subscription_RootGroupPermissionArgs = {
  distinct_on?: InputMaybe<Array<GroupPermission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<GroupPermission_Order_By>>;
  where?: InputMaybe<GroupPermission_Bool_Exp>;
};


export type Subscription_RootGroupPermission_AggregateArgs = {
  distinct_on?: InputMaybe<Array<GroupPermission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<GroupPermission_Order_By>>;
  where?: InputMaybe<GroupPermission_Bool_Exp>;
};


export type Subscription_RootGroupPermission_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootGroupPermission_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<GroupPermission_Stream_Cursor_Input>>;
  where?: InputMaybe<GroupPermission_Bool_Exp>;
};


export type Subscription_RootGroup_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Group_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Group_Order_By>>;
  where?: InputMaybe<Group_Bool_Exp>;
};


export type Subscription_RootGroup_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootGroup_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Group_Stream_Cursor_Input>>;
  where?: InputMaybe<Group_Bool_Exp>;
};


export type Subscription_RootHealthStatusArgs = {
  distinct_on?: InputMaybe<Array<HealthStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<HealthStatus_Order_By>>;
  where?: InputMaybe<HealthStatus_Bool_Exp>;
};


export type Subscription_RootHealthStatus_AggregateArgs = {
  distinct_on?: InputMaybe<Array<HealthStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<HealthStatus_Order_By>>;
  where?: InputMaybe<HealthStatus_Bool_Exp>;
};


export type Subscription_RootHealthStatus_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootHealthStatus_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<HealthStatus_Stream_Cursor_Input>>;
  where?: InputMaybe<HealthStatus_Bool_Exp>;
};


export type Subscription_RootObjectiveArgs = {
  distinct_on?: InputMaybe<Array<Objective_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Objective_Order_By>>;
  where?: InputMaybe<Objective_Bool_Exp>;
};


export type Subscription_RootObjectivePriorityArgs = {
  distinct_on?: InputMaybe<Array<ObjectivePriority_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ObjectivePriority_Order_By>>;
  where?: InputMaybe<ObjectivePriority_Bool_Exp>;
};


export type Subscription_RootObjectivePriority_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ObjectivePriority_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ObjectivePriority_Order_By>>;
  where?: InputMaybe<ObjectivePriority_Bool_Exp>;
};


export type Subscription_RootObjectivePriority_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootObjectivePriority_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ObjectivePriority_Stream_Cursor_Input>>;
  where?: InputMaybe<ObjectivePriority_Bool_Exp>;
};


export type Subscription_RootObjectiveStatusArgs = {
  distinct_on?: InputMaybe<Array<ObjectiveStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ObjectiveStatus_Order_By>>;
  where?: InputMaybe<ObjectiveStatus_Bool_Exp>;
};


export type Subscription_RootObjectiveStatus_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ObjectiveStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ObjectiveStatus_Order_By>>;
  where?: InputMaybe<ObjectiveStatus_Bool_Exp>;
};


export type Subscription_RootObjectiveStatus_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootObjectiveStatus_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ObjectiveStatus_Stream_Cursor_Input>>;
  where?: InputMaybe<ObjectiveStatus_Bool_Exp>;
};


export type Subscription_RootObjectiveSubTaskArgs = {
  distinct_on?: InputMaybe<Array<ObjectiveSubTask_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ObjectiveSubTask_Order_By>>;
  where?: InputMaybe<ObjectiveSubTask_Bool_Exp>;
};


export type Subscription_RootObjectiveSubTask_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ObjectiveSubTask_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ObjectiveSubTask_Order_By>>;
  where?: InputMaybe<ObjectiveSubTask_Bool_Exp>;
};


export type Subscription_RootObjectiveSubTask_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootObjectiveSubTask_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ObjectiveSubTask_Stream_Cursor_Input>>;
  where?: InputMaybe<ObjectiveSubTask_Bool_Exp>;
};


export type Subscription_RootObjective_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Objective_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Objective_Order_By>>;
  where?: InputMaybe<Objective_Bool_Exp>;
};


export type Subscription_RootObjective_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootObjective_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Objective_Stream_Cursor_Input>>;
  where?: InputMaybe<Objective_Bool_Exp>;
};


export type Subscription_RootOplogArgs = {
  distinct_on?: InputMaybe<Array<Oplog_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Oplog_Order_By>>;
  where?: InputMaybe<Oplog_Bool_Exp>;
};


export type Subscription_RootOplogEntryArgs = {
  distinct_on?: InputMaybe<Array<OplogEntry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OplogEntry_Order_By>>;
  where?: InputMaybe<OplogEntry_Bool_Exp>;
};


export type Subscription_RootOplogEntry_AggregateArgs = {
  distinct_on?: InputMaybe<Array<OplogEntry_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<OplogEntry_Order_By>>;
  where?: InputMaybe<OplogEntry_Bool_Exp>;
};


export type Subscription_RootOplogEntry_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootOplogEntry_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<OplogEntry_Stream_Cursor_Input>>;
  where?: InputMaybe<OplogEntry_Bool_Exp>;
};


export type Subscription_RootOplog_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Oplog_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Oplog_Order_By>>;
  where?: InputMaybe<Oplog_Bool_Exp>;
};


export type Subscription_RootOplog_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootOplog_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Oplog_Stream_Cursor_Input>>;
  where?: InputMaybe<Oplog_Bool_Exp>;
};


export type Subscription_RootProjectArgs = {
  distinct_on?: InputMaybe<Array<Project_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Order_By>>;
  where?: InputMaybe<Project_Bool_Exp>;
};


export type Subscription_RootProjectAssignmentArgs = {
  distinct_on?: InputMaybe<Array<ProjectAssignment_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectAssignment_Order_By>>;
  where?: InputMaybe<ProjectAssignment_Bool_Exp>;
};


export type Subscription_RootProjectAssignment_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ProjectAssignment_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectAssignment_Order_By>>;
  where?: InputMaybe<ProjectAssignment_Bool_Exp>;
};


export type Subscription_RootProjectAssignment_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootProjectAssignment_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ProjectAssignment_Stream_Cursor_Input>>;
  where?: InputMaybe<ProjectAssignment_Bool_Exp>;
};


export type Subscription_RootProjectContactArgs = {
  distinct_on?: InputMaybe<Array<ProjectContact_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectContact_Order_By>>;
  where?: InputMaybe<ProjectContact_Bool_Exp>;
};


export type Subscription_RootProjectContact_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ProjectContact_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectContact_Order_By>>;
  where?: InputMaybe<ProjectContact_Bool_Exp>;
};


export type Subscription_RootProjectContact_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootProjectContact_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ProjectContact_Stream_Cursor_Input>>;
  where?: InputMaybe<ProjectContact_Bool_Exp>;
};


export type Subscription_RootProjectInviteArgs = {
  distinct_on?: InputMaybe<Array<ProjectInvite_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectInvite_Order_By>>;
  where?: InputMaybe<ProjectInvite_Bool_Exp>;
};


export type Subscription_RootProjectInvite_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ProjectInvite_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectInvite_Order_By>>;
  where?: InputMaybe<ProjectInvite_Bool_Exp>;
};


export type Subscription_RootProjectInvite_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootProjectInvite_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ProjectInvite_Stream_Cursor_Input>>;
  where?: InputMaybe<ProjectInvite_Bool_Exp>;
};


export type Subscription_RootProjectNoteArgs = {
  distinct_on?: InputMaybe<Array<ProjectNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectNote_Order_By>>;
  where?: InputMaybe<ProjectNote_Bool_Exp>;
};


export type Subscription_RootProjectNote_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ProjectNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectNote_Order_By>>;
  where?: InputMaybe<ProjectNote_Bool_Exp>;
};


export type Subscription_RootProjectNote_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootProjectNote_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ProjectNote_Stream_Cursor_Input>>;
  where?: InputMaybe<ProjectNote_Bool_Exp>;
};


export type Subscription_RootProjectRoleArgs = {
  distinct_on?: InputMaybe<Array<ProjectRole_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectRole_Order_By>>;
  where?: InputMaybe<ProjectRole_Bool_Exp>;
};


export type Subscription_RootProjectRole_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ProjectRole_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectRole_Order_By>>;
  where?: InputMaybe<ProjectRole_Bool_Exp>;
};


export type Subscription_RootProjectRole_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootProjectRole_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ProjectRole_Stream_Cursor_Input>>;
  where?: InputMaybe<ProjectRole_Bool_Exp>;
};


export type Subscription_RootProjectTypeArgs = {
  distinct_on?: InputMaybe<Array<ProjectType_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectType_Order_By>>;
  where?: InputMaybe<ProjectType_Bool_Exp>;
};


export type Subscription_RootProjectType_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ProjectType_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectType_Order_By>>;
  where?: InputMaybe<ProjectType_Bool_Exp>;
};


export type Subscription_RootProjectType_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootProjectType_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ProjectType_Stream_Cursor_Input>>;
  where?: InputMaybe<ProjectType_Bool_Exp>;
};


export type Subscription_RootProject_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Order_By>>;
  where?: InputMaybe<Project_Bool_Exp>;
};


export type Subscription_RootProject_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootProject_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Project_Stream_Cursor_Input>>;
  where?: InputMaybe<Project_Bool_Exp>;
};


export type Subscription_RootReportArgs = {
  distinct_on?: InputMaybe<Array<Report_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Report_Order_By>>;
  where?: InputMaybe<Report_Bool_Exp>;
};


export type Subscription_RootReportConfigurationArgs = {
  distinct_on?: InputMaybe<Array<ReportConfiguration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportConfiguration_Order_By>>;
  where?: InputMaybe<ReportConfiguration_Bool_Exp>;
};


export type Subscription_RootReportConfiguration_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ReportConfiguration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportConfiguration_Order_By>>;
  where?: InputMaybe<ReportConfiguration_Bool_Exp>;
};


export type Subscription_RootReportConfiguration_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootReportConfiguration_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ReportConfiguration_Stream_Cursor_Input>>;
  where?: InputMaybe<ReportConfiguration_Bool_Exp>;
};


export type Subscription_RootReport_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Report_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Report_Order_By>>;
  where?: InputMaybe<Report_Bool_Exp>;
};


export type Subscription_RootReport_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootReport_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Report_Stream_Cursor_Input>>;
  where?: InputMaybe<Report_Bool_Exp>;
};


export type Subscription_RootReportedFindingArgs = {
  distinct_on?: InputMaybe<Array<ReportedFinding_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportedFinding_Order_By>>;
  where?: InputMaybe<ReportedFinding_Bool_Exp>;
};


export type Subscription_RootReportedFindingNoteArgs = {
  distinct_on?: InputMaybe<Array<ReportedFindingNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportedFindingNote_Order_By>>;
  where?: InputMaybe<ReportedFindingNote_Bool_Exp>;
};


export type Subscription_RootReportedFindingNote_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ReportedFindingNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportedFindingNote_Order_By>>;
  where?: InputMaybe<ReportedFindingNote_Bool_Exp>;
};


export type Subscription_RootReportedFindingNote_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootReportedFindingNote_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ReportedFindingNote_Stream_Cursor_Input>>;
  where?: InputMaybe<ReportedFindingNote_Bool_Exp>;
};


export type Subscription_RootReportedFinding_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ReportedFinding_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportedFinding_Order_By>>;
  where?: InputMaybe<ReportedFinding_Bool_Exp>;
};


export type Subscription_RootReportedFinding_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootReportedFinding_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ReportedFinding_Stream_Cursor_Input>>;
  where?: InputMaybe<ReportedFinding_Bool_Exp>;
};


export type Subscription_RootReporting_ObservationArgs = {
  distinct_on?: InputMaybe<Array<Reporting_Observation_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reporting_Observation_Order_By>>;
  where?: InputMaybe<Reporting_Observation_Bool_Exp>;
};


export type Subscription_RootReporting_Observation_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Reporting_Observation_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reporting_Observation_Order_By>>;
  where?: InputMaybe<Reporting_Observation_Bool_Exp>;
};


export type Subscription_RootReporting_Observation_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootReporting_Observation_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Reporting_Observation_Stream_Cursor_Input>>;
  where?: InputMaybe<Reporting_Observation_Bool_Exp>;
};


export type Subscription_RootReporting_ReportobservationlinkArgs = {
  distinct_on?: InputMaybe<Array<Reporting_Reportobservationlink_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reporting_Reportobservationlink_Order_By>>;
  where?: InputMaybe<Reporting_Reportobservationlink_Bool_Exp>;
};


export type Subscription_RootReporting_Reportobservationlink_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Reporting_Reportobservationlink_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reporting_Reportobservationlink_Order_By>>;
  where?: InputMaybe<Reporting_Reportobservationlink_Bool_Exp>;
};


export type Subscription_RootReporting_Reportobservationlink_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootReporting_Reportobservationlink_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Reporting_Reportobservationlink_Stream_Cursor_Input>>;
  where?: InputMaybe<Reporting_Reportobservationlink_Bool_Exp>;
};


export type Subscription_RootScopeArgs = {
  distinct_on?: InputMaybe<Array<Scope_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Scope_Order_By>>;
  where?: InputMaybe<Scope_Bool_Exp>;
};


export type Subscription_RootScope_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Scope_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Scope_Order_By>>;
  where?: InputMaybe<Scope_Bool_Exp>;
};


export type Subscription_RootScope_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootScope_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Scope_Stream_Cursor_Input>>;
  where?: InputMaybe<Scope_Bool_Exp>;
};


export type Subscription_RootServerCheckoutArgs = {
  distinct_on?: InputMaybe<Array<ServerCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerCheckout_Order_By>>;
  where?: InputMaybe<ServerCheckout_Bool_Exp>;
};


export type Subscription_RootServerCheckout_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerCheckout_Order_By>>;
  where?: InputMaybe<ServerCheckout_Bool_Exp>;
};


export type Subscription_RootServerCheckout_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootServerCheckout_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ServerCheckout_Stream_Cursor_Input>>;
  where?: InputMaybe<ServerCheckout_Bool_Exp>;
};


export type Subscription_RootServerNoteArgs = {
  distinct_on?: InputMaybe<Array<ServerNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerNote_Order_By>>;
  where?: InputMaybe<ServerNote_Bool_Exp>;
};


export type Subscription_RootServerNote_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerNote_Order_By>>;
  where?: InputMaybe<ServerNote_Bool_Exp>;
};


export type Subscription_RootServerNote_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootServerNote_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ServerNote_Stream_Cursor_Input>>;
  where?: InputMaybe<ServerNote_Bool_Exp>;
};


export type Subscription_RootServerProviderArgs = {
  distinct_on?: InputMaybe<Array<ServerProvider_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerProvider_Order_By>>;
  where?: InputMaybe<ServerProvider_Bool_Exp>;
};


export type Subscription_RootServerProvider_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerProvider_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerProvider_Order_By>>;
  where?: InputMaybe<ServerProvider_Bool_Exp>;
};


export type Subscription_RootServerProvider_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootServerProvider_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ServerProvider_Stream_Cursor_Input>>;
  where?: InputMaybe<ServerProvider_Bool_Exp>;
};


export type Subscription_RootServerRoleArgs = {
  distinct_on?: InputMaybe<Array<ServerRole_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerRole_Order_By>>;
  where?: InputMaybe<ServerRole_Bool_Exp>;
};


export type Subscription_RootServerRole_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerRole_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerRole_Order_By>>;
  where?: InputMaybe<ServerRole_Bool_Exp>;
};


export type Subscription_RootServerRole_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootServerRole_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ServerRole_Stream_Cursor_Input>>;
  where?: InputMaybe<ServerRole_Bool_Exp>;
};


export type Subscription_RootServerStatusArgs = {
  distinct_on?: InputMaybe<Array<ServerStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerStatus_Order_By>>;
  where?: InputMaybe<ServerStatus_Bool_Exp>;
};


export type Subscription_RootServerStatus_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerStatus_Order_By>>;
  where?: InputMaybe<ServerStatus_Bool_Exp>;
};


export type Subscription_RootServerStatus_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootServerStatus_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<ServerStatus_Stream_Cursor_Input>>;
  where?: InputMaybe<ServerStatus_Bool_Exp>;
};


export type Subscription_RootStaticServerArgs = {
  distinct_on?: InputMaybe<Array<StaticServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StaticServer_Order_By>>;
  where?: InputMaybe<StaticServer_Bool_Exp>;
};


export type Subscription_RootStaticServer_AggregateArgs = {
  distinct_on?: InputMaybe<Array<StaticServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StaticServer_Order_By>>;
  where?: InputMaybe<StaticServer_Bool_Exp>;
};


export type Subscription_RootStaticServer_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootStaticServer_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<StaticServer_Stream_Cursor_Input>>;
  where?: InputMaybe<StaticServer_Bool_Exp>;
};


export type Subscription_RootTagArgs = {
  distinct_on?: InputMaybe<Array<Tag_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tag_Order_By>>;
  where?: InputMaybe<Tag_Bool_Exp>;
};


export type Subscription_RootTag_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Tag_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Tag_Order_By>>;
  where?: InputMaybe<Tag_Bool_Exp>;
};


export type Subscription_RootTag_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootTag_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Tag_Stream_Cursor_Input>>;
  where?: InputMaybe<Tag_Bool_Exp>;
};


export type Subscription_RootTaggedItemArgs = {
  distinct_on?: InputMaybe<Array<TaggedItem_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TaggedItem_Order_By>>;
  where?: InputMaybe<TaggedItem_Bool_Exp>;
};


export type Subscription_RootTaggedItem_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TaggedItem_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TaggedItem_Order_By>>;
  where?: InputMaybe<TaggedItem_Bool_Exp>;
};


export type Subscription_RootTaggedItem_By_PkArgs = {
  id: Scalars['Int']['input'];
};


export type Subscription_RootTaggedItem_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<TaggedItem_Stream_Cursor_Input>>;
  where?: InputMaybe<TaggedItem_Bool_Exp>;
};


export type Subscription_RootTargetArgs = {
  distinct_on?: InputMaybe<Array<Target_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Target_Order_By>>;
  where?: InputMaybe<Target_Bool_Exp>;
};


export type Subscription_RootTarget_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Target_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Target_Order_By>>;
  where?: InputMaybe<Target_Bool_Exp>;
};


export type Subscription_RootTarget_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootTarget_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Target_Stream_Cursor_Input>>;
  where?: InputMaybe<Target_Bool_Exp>;
};


export type Subscription_RootTaskArgs = {
  distinct_on?: InputMaybe<Array<Task_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Task_Order_By>>;
  where?: InputMaybe<Task_Bool_Exp>;
};


export type Subscription_RootTask_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Task_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Task_Order_By>>;
  where?: InputMaybe<Task_Bool_Exp>;
};


export type Subscription_RootTask_By_PkArgs = {
  id: Scalars['String']['input'];
};


export type Subscription_RootTask_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Task_Stream_Cursor_Input>>;
  where?: InputMaybe<Task_Bool_Exp>;
};


export type Subscription_RootTemplateArgs = {
  distinct_on?: InputMaybe<Array<Template_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Template_Order_By>>;
  where?: InputMaybe<Template_Bool_Exp>;
};


export type Subscription_RootTemplate_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Template_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Template_Order_By>>;
  where?: InputMaybe<Template_Bool_Exp>;
};


export type Subscription_RootTemplate_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootTemplate_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Template_Stream_Cursor_Input>>;
  where?: InputMaybe<Template_Bool_Exp>;
};


export type Subscription_RootUserArgs = {
  distinct_on?: InputMaybe<Array<User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Order_By>>;
  where?: InputMaybe<User_Bool_Exp>;
};


export type Subscription_RootUserGroupArgs = {
  distinct_on?: InputMaybe<Array<UserGroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<UserGroup_Order_By>>;
  where?: InputMaybe<UserGroup_Bool_Exp>;
};


export type Subscription_RootUserGroup_AggregateArgs = {
  distinct_on?: InputMaybe<Array<UserGroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<UserGroup_Order_By>>;
  where?: InputMaybe<UserGroup_Bool_Exp>;
};


export type Subscription_RootUserGroup_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootUserGroup_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<UserGroup_Stream_Cursor_Input>>;
  where?: InputMaybe<UserGroup_Bool_Exp>;
};


export type Subscription_RootUserPermissionArgs = {
  distinct_on?: InputMaybe<Array<UserPermission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<UserPermission_Order_By>>;
  where?: InputMaybe<UserPermission_Bool_Exp>;
};


export type Subscription_RootUserPermission_AggregateArgs = {
  distinct_on?: InputMaybe<Array<UserPermission_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<UserPermission_Order_By>>;
  where?: InputMaybe<UserPermission_Bool_Exp>;
};


export type Subscription_RootUserPermission_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootUserPermission_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<UserPermission_Stream_Cursor_Input>>;
  where?: InputMaybe<UserPermission_Bool_Exp>;
};


export type Subscription_RootUserProfileArgs = {
  distinct_on?: InputMaybe<Array<UserProfile_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<UserProfile_Order_By>>;
  where?: InputMaybe<UserProfile_Bool_Exp>;
};


export type Subscription_RootUserProfile_AggregateArgs = {
  distinct_on?: InputMaybe<Array<UserProfile_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<UserProfile_Order_By>>;
  where?: InputMaybe<UserProfile_Bool_Exp>;
};


export type Subscription_RootUserProfile_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootUserProfile_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<UserProfile_Stream_Cursor_Input>>;
  where?: InputMaybe<UserProfile_Bool_Exp>;
};


export type Subscription_RootUser_AggregateArgs = {
  distinct_on?: InputMaybe<Array<User_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<User_Order_By>>;
  where?: InputMaybe<User_Bool_Exp>;
};


export type Subscription_RootUser_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootUser_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<User_Stream_Cursor_Input>>;
  where?: InputMaybe<User_Bool_Exp>;
};


export type Subscription_RootWhitecardArgs = {
  distinct_on?: InputMaybe<Array<Whitecard_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Whitecard_Order_By>>;
  where?: InputMaybe<Whitecard_Bool_Exp>;
};


export type Subscription_RootWhitecard_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Whitecard_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Whitecard_Order_By>>;
  where?: InputMaybe<Whitecard_Bool_Exp>;
};


export type Subscription_RootWhitecard_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootWhitecard_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<Whitecard_Stream_Cursor_Input>>;
  where?: InputMaybe<Whitecard_Bool_Exp>;
};


export type Subscription_RootWhoisStatusArgs = {
  distinct_on?: InputMaybe<Array<WhoisStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<WhoisStatus_Order_By>>;
  where?: InputMaybe<WhoisStatus_Bool_Exp>;
};


export type Subscription_RootWhoisStatus_AggregateArgs = {
  distinct_on?: InputMaybe<Array<WhoisStatus_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<WhoisStatus_Order_By>>;
  where?: InputMaybe<WhoisStatus_Bool_Exp>;
};


export type Subscription_RootWhoisStatus_By_PkArgs = {
  id: Scalars['bigint']['input'];
};


export type Subscription_RootWhoisStatus_StreamArgs = {
  batch_size: Scalars['Int']['input'];
  cursor: Array<InputMaybe<WhoisStatus_Stream_Cursor_Input>>;
  where?: InputMaybe<WhoisStatus_Bool_Exp>;
};

/** columns and relationships of "taggit_tag" */
export type Tag = {
  __typename?: 'tag';
  id: Scalars['Int']['output'];
  name: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  /** An array relationship */
  taggedItem: Array<TaggedItem>;
  /** An aggregate relationship */
  taggedItem_aggregate: TaggedItem_Aggregate;
};


/** columns and relationships of "taggit_tag" */
export type TagTaggedItemArgs = {
  distinct_on?: InputMaybe<Array<TaggedItem_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TaggedItem_Order_By>>;
  where?: InputMaybe<TaggedItem_Bool_Exp>;
};


/** columns and relationships of "taggit_tag" */
export type TagTaggedItem_AggregateArgs = {
  distinct_on?: InputMaybe<Array<TaggedItem_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<TaggedItem_Order_By>>;
  where?: InputMaybe<TaggedItem_Bool_Exp>;
};

/** aggregated selection of "taggit_tag" */
export type Tag_Aggregate = {
  __typename?: 'tag_aggregate';
  aggregate?: Maybe<Tag_Aggregate_Fields>;
  nodes: Array<Tag>;
};

/** aggregate fields of "taggit_tag" */
export type Tag_Aggregate_Fields = {
  __typename?: 'tag_aggregate_fields';
  avg?: Maybe<Tag_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Tag_Max_Fields>;
  min?: Maybe<Tag_Min_Fields>;
  stddev?: Maybe<Tag_Stddev_Fields>;
  stddev_pop?: Maybe<Tag_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Tag_Stddev_Samp_Fields>;
  sum?: Maybe<Tag_Sum_Fields>;
  var_pop?: Maybe<Tag_Var_Pop_Fields>;
  var_samp?: Maybe<Tag_Var_Samp_Fields>;
  variance?: Maybe<Tag_Variance_Fields>;
};


/** aggregate fields of "taggit_tag" */
export type Tag_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Tag_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Tag_Avg_Fields = {
  __typename?: 'tag_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "taggit_tag". All fields are combined with a logical 'AND'. */
export type Tag_Bool_Exp = {
  _and?: InputMaybe<Array<Tag_Bool_Exp>>;
  _not?: InputMaybe<Tag_Bool_Exp>;
  _or?: InputMaybe<Array<Tag_Bool_Exp>>;
  id?: InputMaybe<Int_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  slug?: InputMaybe<String_Comparison_Exp>;
  taggedItem?: InputMaybe<TaggedItem_Bool_Exp>;
  taggedItem_aggregate?: InputMaybe<TaggedItem_Aggregate_Bool_Exp>;
};

/** unique or primary key constraints on table "taggit_tag" */
export enum Tag_Constraint {
  /** unique or primary key constraint on columns "name" */
  TaggitTagNameKey = 'taggit_tag_name_key',
  /** unique or primary key constraint on columns "id" */
  TaggitTagPkey = 'taggit_tag_pkey',
  /** unique or primary key constraint on columns "slug" */
  TaggitTagSlugKey = 'taggit_tag_slug_key'
}

/** input type for incrementing numeric columns in table "taggit_tag" */
export type Tag_Inc_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "taggit_tag" */
export type Tag_Insert_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  taggedItem?: InputMaybe<TaggedItem_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Tag_Max_Fields = {
  __typename?: 'tag_max_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type Tag_Min_Fields = {
  __typename?: 'tag_min_fields';
  id?: Maybe<Scalars['Int']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  slug?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "taggit_tag" */
export type Tag_Mutation_Response = {
  __typename?: 'tag_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Tag>;
};

/** input type for inserting object relation for remote table "taggit_tag" */
export type Tag_Obj_Rel_Insert_Input = {
  data: Tag_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Tag_On_Conflict>;
};

/** on_conflict condition type for table "taggit_tag" */
export type Tag_On_Conflict = {
  constraint: Tag_Constraint;
  update_columns?: Array<Tag_Update_Column>;
  where?: InputMaybe<Tag_Bool_Exp>;
};

/** Ordering options when selecting data from "taggit_tag". */
export type Tag_Order_By = {
  id?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  slug?: InputMaybe<Order_By>;
  taggedItem_aggregate?: InputMaybe<TaggedItem_Aggregate_Order_By>;
};

/** primary key columns input for table: taggit_tag */
export type Tag_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "taggit_tag" */
export enum Tag_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Slug = 'slug'
}

/** input type for updating data in table "taggit_tag" */
export type Tag_Set_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Tag_Stddev_Fields = {
  __typename?: 'tag_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Tag_Stddev_Pop_Fields = {
  __typename?: 'tag_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Tag_Stddev_Samp_Fields = {
  __typename?: 'tag_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "tag" */
export type Tag_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Tag_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Tag_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['Int']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Tag_Sum_Fields = {
  __typename?: 'tag_sum_fields';
  id?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "taggit_tag" */
export enum Tag_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Slug = 'slug'
}

export type Tag_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Tag_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Tag_Set_Input>;
  /** filter the rows which have to be updated */
  where: Tag_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Tag_Var_Pop_Fields = {
  __typename?: 'tag_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Tag_Var_Samp_Fields = {
  __typename?: 'tag_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Tag_Variance_Fields = {
  __typename?: 'tag_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "taggit_taggeditem" */
export type TaggedItem = {
  __typename?: 'taggedItem';
  /** An object relationship */
  contentType?: Maybe<DjangoContentType>;
  content_type_id: Scalars['Int']['output'];
  id: Scalars['Int']['output'];
  object_id: Scalars['Int']['output'];
  /** An object relationship */
  tag: Tag;
  tag_id: Scalars['Int']['output'];
  /** An object relationship */
  taggedItem: DjangoContentType;
};

/** aggregated selection of "taggit_taggeditem" */
export type TaggedItem_Aggregate = {
  __typename?: 'taggedItem_aggregate';
  aggregate?: Maybe<TaggedItem_Aggregate_Fields>;
  nodes: Array<TaggedItem>;
};

export type TaggedItem_Aggregate_Bool_Exp = {
  count?: InputMaybe<TaggedItem_Aggregate_Bool_Exp_Count>;
};

export type TaggedItem_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<TaggedItem_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<TaggedItem_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "taggit_taggeditem" */
export type TaggedItem_Aggregate_Fields = {
  __typename?: 'taggedItem_aggregate_fields';
  avg?: Maybe<TaggedItem_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<TaggedItem_Max_Fields>;
  min?: Maybe<TaggedItem_Min_Fields>;
  stddev?: Maybe<TaggedItem_Stddev_Fields>;
  stddev_pop?: Maybe<TaggedItem_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<TaggedItem_Stddev_Samp_Fields>;
  sum?: Maybe<TaggedItem_Sum_Fields>;
  var_pop?: Maybe<TaggedItem_Var_Pop_Fields>;
  var_samp?: Maybe<TaggedItem_Var_Samp_Fields>;
  variance?: Maybe<TaggedItem_Variance_Fields>;
};


/** aggregate fields of "taggit_taggeditem" */
export type TaggedItem_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<TaggedItem_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "taggit_taggeditem" */
export type TaggedItem_Aggregate_Order_By = {
  avg?: InputMaybe<TaggedItem_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<TaggedItem_Max_Order_By>;
  min?: InputMaybe<TaggedItem_Min_Order_By>;
  stddev?: InputMaybe<TaggedItem_Stddev_Order_By>;
  stddev_pop?: InputMaybe<TaggedItem_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<TaggedItem_Stddev_Samp_Order_By>;
  sum?: InputMaybe<TaggedItem_Sum_Order_By>;
  var_pop?: InputMaybe<TaggedItem_Var_Pop_Order_By>;
  var_samp?: InputMaybe<TaggedItem_Var_Samp_Order_By>;
  variance?: InputMaybe<TaggedItem_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "taggit_taggeditem" */
export type TaggedItem_Arr_Rel_Insert_Input = {
  data: Array<TaggedItem_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<TaggedItem_On_Conflict>;
};

/** aggregate avg on columns */
export type TaggedItem_Avg_Fields = {
  __typename?: 'taggedItem_avg_fields';
  content_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  object_id?: Maybe<Scalars['Float']['output']>;
  tag_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "taggit_taggeditem" */
export type TaggedItem_Avg_Order_By = {
  content_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  object_id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "taggit_taggeditem". All fields are combined with a logical 'AND'. */
export type TaggedItem_Bool_Exp = {
  _and?: InputMaybe<Array<TaggedItem_Bool_Exp>>;
  _not?: InputMaybe<TaggedItem_Bool_Exp>;
  _or?: InputMaybe<Array<TaggedItem_Bool_Exp>>;
  contentType?: InputMaybe<DjangoContentType_Bool_Exp>;
  content_type_id?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Int_Comparison_Exp>;
  object_id?: InputMaybe<Int_Comparison_Exp>;
  tag?: InputMaybe<Tag_Bool_Exp>;
  tag_id?: InputMaybe<Int_Comparison_Exp>;
  taggedItem?: InputMaybe<DjangoContentType_Bool_Exp>;
};

/** unique or primary key constraints on table "taggit_taggeditem" */
export enum TaggedItem_Constraint {
  /** unique or primary key constraint on columns "object_id", "content_type_id", "tag_id" */
  TaggitTaggeditemContentTypeIdObjectIdTagId_4bb97a8eUni = 'taggit_taggeditem_content_type_id_object_id_tag_id_4bb97a8e_uni',
  /** unique or primary key constraint on columns "id" */
  TaggitTaggeditemPkey = 'taggit_taggeditem_pkey'
}

/** input type for incrementing numeric columns in table "taggit_taggeditem" */
export type TaggedItem_Inc_Input = {
  content_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  object_id?: InputMaybe<Scalars['Int']['input']>;
  tag_id?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "taggit_taggeditem" */
export type TaggedItem_Insert_Input = {
  contentType?: InputMaybe<DjangoContentType_Obj_Rel_Insert_Input>;
  content_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  object_id?: InputMaybe<Scalars['Int']['input']>;
  tag?: InputMaybe<Tag_Obj_Rel_Insert_Input>;
  tag_id?: InputMaybe<Scalars['Int']['input']>;
  taggedItem?: InputMaybe<DjangoContentType_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type TaggedItem_Max_Fields = {
  __typename?: 'taggedItem_max_fields';
  content_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  object_id?: Maybe<Scalars['Int']['output']>;
  tag_id?: Maybe<Scalars['Int']['output']>;
};

/** order by max() on columns of table "taggit_taggeditem" */
export type TaggedItem_Max_Order_By = {
  content_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  object_id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type TaggedItem_Min_Fields = {
  __typename?: 'taggedItem_min_fields';
  content_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  object_id?: Maybe<Scalars['Int']['output']>;
  tag_id?: Maybe<Scalars['Int']['output']>;
};

/** order by min() on columns of table "taggit_taggeditem" */
export type TaggedItem_Min_Order_By = {
  content_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  object_id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "taggit_taggeditem" */
export type TaggedItem_Mutation_Response = {
  __typename?: 'taggedItem_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<TaggedItem>;
};

/** on_conflict condition type for table "taggit_taggeditem" */
export type TaggedItem_On_Conflict = {
  constraint: TaggedItem_Constraint;
  update_columns?: Array<TaggedItem_Update_Column>;
  where?: InputMaybe<TaggedItem_Bool_Exp>;
};

/** Ordering options when selecting data from "taggit_taggeditem". */
export type TaggedItem_Order_By = {
  contentType?: InputMaybe<DjangoContentType_Order_By>;
  content_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  object_id?: InputMaybe<Order_By>;
  tag?: InputMaybe<Tag_Order_By>;
  tag_id?: InputMaybe<Order_By>;
  taggedItem?: InputMaybe<DjangoContentType_Order_By>;
};

/** primary key columns input for table: taggit_taggeditem */
export type TaggedItem_Pk_Columns_Input = {
  id: Scalars['Int']['input'];
};

/** select columns of table "taggit_taggeditem" */
export enum TaggedItem_Select_Column {
  /** column name */
  ContentTypeId = 'content_type_id',
  /** column name */
  Id = 'id',
  /** column name */
  ObjectId = 'object_id',
  /** column name */
  TagId = 'tag_id'
}

/** input type for updating data in table "taggit_taggeditem" */
export type TaggedItem_Set_Input = {
  content_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  object_id?: InputMaybe<Scalars['Int']['input']>;
  tag_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate stddev on columns */
export type TaggedItem_Stddev_Fields = {
  __typename?: 'taggedItem_stddev_fields';
  content_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  object_id?: Maybe<Scalars['Float']['output']>;
  tag_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "taggit_taggeditem" */
export type TaggedItem_Stddev_Order_By = {
  content_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  object_id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type TaggedItem_Stddev_Pop_Fields = {
  __typename?: 'taggedItem_stddev_pop_fields';
  content_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  object_id?: Maybe<Scalars['Float']['output']>;
  tag_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "taggit_taggeditem" */
export type TaggedItem_Stddev_Pop_Order_By = {
  content_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  object_id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type TaggedItem_Stddev_Samp_Fields = {
  __typename?: 'taggedItem_stddev_samp_fields';
  content_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  object_id?: Maybe<Scalars['Float']['output']>;
  tag_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "taggit_taggeditem" */
export type TaggedItem_Stddev_Samp_Order_By = {
  content_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  object_id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "taggedItem" */
export type TaggedItem_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: TaggedItem_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type TaggedItem_Stream_Cursor_Value_Input = {
  content_type_id?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['Int']['input']>;
  object_id?: InputMaybe<Scalars['Int']['input']>;
  tag_id?: InputMaybe<Scalars['Int']['input']>;
};

/** aggregate sum on columns */
export type TaggedItem_Sum_Fields = {
  __typename?: 'taggedItem_sum_fields';
  content_type_id?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['Int']['output']>;
  object_id?: Maybe<Scalars['Int']['output']>;
  tag_id?: Maybe<Scalars['Int']['output']>;
};

/** order by sum() on columns of table "taggit_taggeditem" */
export type TaggedItem_Sum_Order_By = {
  content_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  object_id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
};

/** update columns of table "taggit_taggeditem" */
export enum TaggedItem_Update_Column {
  /** column name */
  ContentTypeId = 'content_type_id',
  /** column name */
  Id = 'id',
  /** column name */
  ObjectId = 'object_id',
  /** column name */
  TagId = 'tag_id'
}

export type TaggedItem_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<TaggedItem_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<TaggedItem_Set_Input>;
  /** filter the rows which have to be updated */
  where: TaggedItem_Bool_Exp;
};

/** aggregate var_pop on columns */
export type TaggedItem_Var_Pop_Fields = {
  __typename?: 'taggedItem_var_pop_fields';
  content_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  object_id?: Maybe<Scalars['Float']['output']>;
  tag_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "taggit_taggeditem" */
export type TaggedItem_Var_Pop_Order_By = {
  content_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  object_id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type TaggedItem_Var_Samp_Fields = {
  __typename?: 'taggedItem_var_samp_fields';
  content_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  object_id?: Maybe<Scalars['Float']['output']>;
  tag_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "taggit_taggeditem" */
export type TaggedItem_Var_Samp_Order_By = {
  content_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  object_id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type TaggedItem_Variance_Fields = {
  __typename?: 'taggedItem_variance_fields';
  content_type_id?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  object_id?: Maybe<Scalars['Float']['output']>;
  tag_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "taggit_taggeditem" */
export type TaggedItem_Variance_Order_By = {
  content_type_id?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  object_id?: InputMaybe<Order_By>;
  tag_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "rolodex_projecttarget" */
export type Target = {
  __typename?: 'target';
  compromised: Scalars['Boolean']['output'];
  hostname: Scalars['String']['output'];
  id: Scalars['bigint']['output'];
  ipAddress: Scalars['String']['output'];
  note: Scalars['String']['output'];
  /** An object relationship */
  project: Project;
  projectId: Scalars['bigint']['output'];
};

/** aggregated selection of "rolodex_projecttarget" */
export type Target_Aggregate = {
  __typename?: 'target_aggregate';
  aggregate?: Maybe<Target_Aggregate_Fields>;
  nodes: Array<Target>;
};

export type Target_Aggregate_Bool_Exp = {
  bool_and?: InputMaybe<Target_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Target_Aggregate_Bool_Exp_Bool_Or>;
  count?: InputMaybe<Target_Aggregate_Bool_Exp_Count>;
};

export type Target_Aggregate_Bool_Exp_Bool_And = {
  arguments: Target_Select_Column_Target_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Target_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Target_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Target_Select_Column_Target_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Target_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Target_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Target_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Target_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "rolodex_projecttarget" */
export type Target_Aggregate_Fields = {
  __typename?: 'target_aggregate_fields';
  avg?: Maybe<Target_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Target_Max_Fields>;
  min?: Maybe<Target_Min_Fields>;
  stddev?: Maybe<Target_Stddev_Fields>;
  stddev_pop?: Maybe<Target_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Target_Stddev_Samp_Fields>;
  sum?: Maybe<Target_Sum_Fields>;
  var_pop?: Maybe<Target_Var_Pop_Fields>;
  var_samp?: Maybe<Target_Var_Samp_Fields>;
  variance?: Maybe<Target_Variance_Fields>;
};


/** aggregate fields of "rolodex_projecttarget" */
export type Target_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Target_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "rolodex_projecttarget" */
export type Target_Aggregate_Order_By = {
  avg?: InputMaybe<Target_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Target_Max_Order_By>;
  min?: InputMaybe<Target_Min_Order_By>;
  stddev?: InputMaybe<Target_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Target_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Target_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Target_Sum_Order_By>;
  var_pop?: InputMaybe<Target_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Target_Var_Samp_Order_By>;
  variance?: InputMaybe<Target_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "rolodex_projecttarget" */
export type Target_Arr_Rel_Insert_Input = {
  data: Array<Target_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Target_On_Conflict>;
};

/** aggregate avg on columns */
export type Target_Avg_Fields = {
  __typename?: 'target_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "rolodex_projecttarget" */
export type Target_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "rolodex_projecttarget". All fields are combined with a logical 'AND'. */
export type Target_Bool_Exp = {
  _and?: InputMaybe<Array<Target_Bool_Exp>>;
  _not?: InputMaybe<Target_Bool_Exp>;
  _or?: InputMaybe<Array<Target_Bool_Exp>>;
  compromised?: InputMaybe<Boolean_Comparison_Exp>;
  hostname?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  ipAddress?: InputMaybe<String_Comparison_Exp>;
  note?: InputMaybe<String_Comparison_Exp>;
  project?: InputMaybe<Project_Bool_Exp>;
  projectId?: InputMaybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "rolodex_projecttarget" */
export enum Target_Constraint {
  /** unique or primary key constraint on columns "id" */
  RolodexProjecttargetPkey = 'rolodex_projecttarget_pkey'
}

/** input type for incrementing numeric columns in table "rolodex_projecttarget" */
export type Target_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "rolodex_projecttarget" */
export type Target_Insert_Input = {
  compromised?: InputMaybe<Scalars['Boolean']['input']>;
  hostname?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  ipAddress?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  project?: InputMaybe<Project_Obj_Rel_Insert_Input>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate max on columns */
export type Target_Max_Fields = {
  __typename?: 'target_max_fields';
  hostname?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  ipAddress?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
};

/** order by max() on columns of table "rolodex_projecttarget" */
export type Target_Max_Order_By = {
  hostname?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ipAddress?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Target_Min_Fields = {
  __typename?: 'target_min_fields';
  hostname?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  ipAddress?: Maybe<Scalars['String']['output']>;
  note?: Maybe<Scalars['String']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
};

/** order by min() on columns of table "rolodex_projecttarget" */
export type Target_Min_Order_By = {
  hostname?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ipAddress?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "rolodex_projecttarget" */
export type Target_Mutation_Response = {
  __typename?: 'target_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Target>;
};

/** on_conflict condition type for table "rolodex_projecttarget" */
export type Target_On_Conflict = {
  constraint: Target_Constraint;
  update_columns?: Array<Target_Update_Column>;
  where?: InputMaybe<Target_Bool_Exp>;
};

/** Ordering options when selecting data from "rolodex_projecttarget". */
export type Target_Order_By = {
  compromised?: InputMaybe<Order_By>;
  hostname?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  ipAddress?: InputMaybe<Order_By>;
  note?: InputMaybe<Order_By>;
  project?: InputMaybe<Project_Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: rolodex_projecttarget */
export type Target_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "rolodex_projecttarget" */
export enum Target_Select_Column {
  /** column name */
  Compromised = 'compromised',
  /** column name */
  Hostname = 'hostname',
  /** column name */
  Id = 'id',
  /** column name */
  IpAddress = 'ipAddress',
  /** column name */
  Note = 'note',
  /** column name */
  ProjectId = 'projectId'
}

/** select "target_aggregate_bool_exp_bool_and_arguments_columns" columns of table "rolodex_projecttarget" */
export enum Target_Select_Column_Target_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Compromised = 'compromised'
}

/** select "target_aggregate_bool_exp_bool_or_arguments_columns" columns of table "rolodex_projecttarget" */
export enum Target_Select_Column_Target_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Compromised = 'compromised'
}

/** input type for updating data in table "rolodex_projecttarget" */
export type Target_Set_Input = {
  compromised?: InputMaybe<Scalars['Boolean']['input']>;
  hostname?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  ipAddress?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate stddev on columns */
export type Target_Stddev_Fields = {
  __typename?: 'target_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "rolodex_projecttarget" */
export type Target_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Target_Stddev_Pop_Fields = {
  __typename?: 'target_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "rolodex_projecttarget" */
export type Target_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Target_Stddev_Samp_Fields = {
  __typename?: 'target_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "rolodex_projecttarget" */
export type Target_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "target" */
export type Target_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Target_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Target_Stream_Cursor_Value_Input = {
  compromised?: InputMaybe<Scalars['Boolean']['input']>;
  hostname?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  ipAddress?: InputMaybe<Scalars['String']['input']>;
  note?: InputMaybe<Scalars['String']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type Target_Sum_Fields = {
  __typename?: 'target_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "rolodex_projecttarget" */
export type Target_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** update columns of table "rolodex_projecttarget" */
export enum Target_Update_Column {
  /** column name */
  Compromised = 'compromised',
  /** column name */
  Hostname = 'hostname',
  /** column name */
  Id = 'id',
  /** column name */
  IpAddress = 'ipAddress',
  /** column name */
  Note = 'note',
  /** column name */
  ProjectId = 'projectId'
}

export type Target_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Target_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Target_Set_Input>;
  /** filter the rows which have to be updated */
  where: Target_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Target_Var_Pop_Fields = {
  __typename?: 'target_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "rolodex_projecttarget" */
export type Target_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Target_Var_Samp_Fields = {
  __typename?: 'target_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "rolodex_projecttarget" */
export type Target_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Target_Variance_Fields = {
  __typename?: 'target_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "rolodex_projecttarget" */
export type Target_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** columns and relationships of "django_q_task" */
export type Task = {
  __typename?: 'task';
  args?: Maybe<Scalars['String']['output']>;
  attempt_count: Scalars['Int']['output'];
  cluster?: Maybe<Scalars['String']['output']>;
  func: Scalars['String']['output'];
  group?: Maybe<Scalars['String']['output']>;
  hook?: Maybe<Scalars['String']['output']>;
  id: Scalars['String']['output'];
  kwargs?: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  result?: Maybe<Scalars['String']['output']>;
  started: Scalars['timestamptz']['output'];
  stopped: Scalars['timestamptz']['output'];
  success: Scalars['Boolean']['output'];
};

/** aggregated selection of "django_q_task" */
export type Task_Aggregate = {
  __typename?: 'task_aggregate';
  aggregate?: Maybe<Task_Aggregate_Fields>;
  nodes: Array<Task>;
};

/** aggregate fields of "django_q_task" */
export type Task_Aggregate_Fields = {
  __typename?: 'task_aggregate_fields';
  avg?: Maybe<Task_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Task_Max_Fields>;
  min?: Maybe<Task_Min_Fields>;
  stddev?: Maybe<Task_Stddev_Fields>;
  stddev_pop?: Maybe<Task_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Task_Stddev_Samp_Fields>;
  sum?: Maybe<Task_Sum_Fields>;
  var_pop?: Maybe<Task_Var_Pop_Fields>;
  var_samp?: Maybe<Task_Var_Samp_Fields>;
  variance?: Maybe<Task_Variance_Fields>;
};


/** aggregate fields of "django_q_task" */
export type Task_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Task_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type Task_Avg_Fields = {
  __typename?: 'task_avg_fields';
  attempt_count?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "django_q_task". All fields are combined with a logical 'AND'. */
export type Task_Bool_Exp = {
  _and?: InputMaybe<Array<Task_Bool_Exp>>;
  _not?: InputMaybe<Task_Bool_Exp>;
  _or?: InputMaybe<Array<Task_Bool_Exp>>;
  args?: InputMaybe<String_Comparison_Exp>;
  attempt_count?: InputMaybe<Int_Comparison_Exp>;
  cluster?: InputMaybe<String_Comparison_Exp>;
  func?: InputMaybe<String_Comparison_Exp>;
  group?: InputMaybe<String_Comparison_Exp>;
  hook?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<String_Comparison_Exp>;
  kwargs?: InputMaybe<String_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  result?: InputMaybe<String_Comparison_Exp>;
  started?: InputMaybe<Timestamptz_Comparison_Exp>;
  stopped?: InputMaybe<Timestamptz_Comparison_Exp>;
  success?: InputMaybe<Boolean_Comparison_Exp>;
};

/** unique or primary key constraints on table "django_q_task" */
export enum Task_Constraint {
  /** unique or primary key constraint on columns "id" */
  DjangoQTaskPkey = 'django_q_task_pkey'
}

/** input type for incrementing numeric columns in table "django_q_task" */
export type Task_Inc_Input = {
  attempt_count?: InputMaybe<Scalars['Int']['input']>;
};

/** input type for inserting data into table "django_q_task" */
export type Task_Insert_Input = {
  args?: InputMaybe<Scalars['String']['input']>;
  attempt_count?: InputMaybe<Scalars['Int']['input']>;
  cluster?: InputMaybe<Scalars['String']['input']>;
  func?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['String']['input']>;
  hook?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  kwargs?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<Scalars['String']['input']>;
  started?: InputMaybe<Scalars['timestamptz']['input']>;
  stopped?: InputMaybe<Scalars['timestamptz']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate max on columns */
export type Task_Max_Fields = {
  __typename?: 'task_max_fields';
  args?: Maybe<Scalars['String']['output']>;
  attempt_count?: Maybe<Scalars['Int']['output']>;
  cluster?: Maybe<Scalars['String']['output']>;
  func?: Maybe<Scalars['String']['output']>;
  group?: Maybe<Scalars['String']['output']>;
  hook?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  kwargs?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  result?: Maybe<Scalars['String']['output']>;
  started?: Maybe<Scalars['timestamptz']['output']>;
  stopped?: Maybe<Scalars['timestamptz']['output']>;
};

/** aggregate min on columns */
export type Task_Min_Fields = {
  __typename?: 'task_min_fields';
  args?: Maybe<Scalars['String']['output']>;
  attempt_count?: Maybe<Scalars['Int']['output']>;
  cluster?: Maybe<Scalars['String']['output']>;
  func?: Maybe<Scalars['String']['output']>;
  group?: Maybe<Scalars['String']['output']>;
  hook?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['String']['output']>;
  kwargs?: Maybe<Scalars['String']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  result?: Maybe<Scalars['String']['output']>;
  started?: Maybe<Scalars['timestamptz']['output']>;
  stopped?: Maybe<Scalars['timestamptz']['output']>;
};

/** response of any mutation on the table "django_q_task" */
export type Task_Mutation_Response = {
  __typename?: 'task_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Task>;
};

/** on_conflict condition type for table "django_q_task" */
export type Task_On_Conflict = {
  constraint: Task_Constraint;
  update_columns?: Array<Task_Update_Column>;
  where?: InputMaybe<Task_Bool_Exp>;
};

/** Ordering options when selecting data from "django_q_task". */
export type Task_Order_By = {
  args?: InputMaybe<Order_By>;
  attempt_count?: InputMaybe<Order_By>;
  cluster?: InputMaybe<Order_By>;
  func?: InputMaybe<Order_By>;
  group?: InputMaybe<Order_By>;
  hook?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  kwargs?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  result?: InputMaybe<Order_By>;
  started?: InputMaybe<Order_By>;
  stopped?: InputMaybe<Order_By>;
  success?: InputMaybe<Order_By>;
};

/** primary key columns input for table: django_q_task */
export type Task_Pk_Columns_Input = {
  id: Scalars['String']['input'];
};

/** select columns of table "django_q_task" */
export enum Task_Select_Column {
  /** column name */
  Args = 'args',
  /** column name */
  AttemptCount = 'attempt_count',
  /** column name */
  Cluster = 'cluster',
  /** column name */
  Func = 'func',
  /** column name */
  Group = 'group',
  /** column name */
  Hook = 'hook',
  /** column name */
  Id = 'id',
  /** column name */
  Kwargs = 'kwargs',
  /** column name */
  Name = 'name',
  /** column name */
  Result = 'result',
  /** column name */
  Started = 'started',
  /** column name */
  Stopped = 'stopped',
  /** column name */
  Success = 'success'
}

/** input type for updating data in table "django_q_task" */
export type Task_Set_Input = {
  args?: InputMaybe<Scalars['String']['input']>;
  attempt_count?: InputMaybe<Scalars['Int']['input']>;
  cluster?: InputMaybe<Scalars['String']['input']>;
  func?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['String']['input']>;
  hook?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  kwargs?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<Scalars['String']['input']>;
  started?: InputMaybe<Scalars['timestamptz']['input']>;
  stopped?: InputMaybe<Scalars['timestamptz']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate stddev on columns */
export type Task_Stddev_Fields = {
  __typename?: 'task_stddev_fields';
  attempt_count?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type Task_Stddev_Pop_Fields = {
  __typename?: 'task_stddev_pop_fields';
  attempt_count?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type Task_Stddev_Samp_Fields = {
  __typename?: 'task_stddev_samp_fields';
  attempt_count?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "task" */
export type Task_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Task_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Task_Stream_Cursor_Value_Input = {
  args?: InputMaybe<Scalars['String']['input']>;
  attempt_count?: InputMaybe<Scalars['Int']['input']>;
  cluster?: InputMaybe<Scalars['String']['input']>;
  func?: InputMaybe<Scalars['String']['input']>;
  group?: InputMaybe<Scalars['String']['input']>;
  hook?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['String']['input']>;
  kwargs?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  result?: InputMaybe<Scalars['String']['input']>;
  started?: InputMaybe<Scalars['timestamptz']['input']>;
  stopped?: InputMaybe<Scalars['timestamptz']['input']>;
  success?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate sum on columns */
export type Task_Sum_Fields = {
  __typename?: 'task_sum_fields';
  attempt_count?: Maybe<Scalars['Int']['output']>;
};

/** update columns of table "django_q_task" */
export enum Task_Update_Column {
  /** column name */
  Args = 'args',
  /** column name */
  AttemptCount = 'attempt_count',
  /** column name */
  Cluster = 'cluster',
  /** column name */
  Func = 'func',
  /** column name */
  Group = 'group',
  /** column name */
  Hook = 'hook',
  /** column name */
  Id = 'id',
  /** column name */
  Kwargs = 'kwargs',
  /** column name */
  Name = 'name',
  /** column name */
  Result = 'result',
  /** column name */
  Started = 'started',
  /** column name */
  Stopped = 'stopped',
  /** column name */
  Success = 'success'
}

export type Task_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Task_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Task_Set_Input>;
  /** filter the rows which have to be updated */
  where: Task_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Task_Var_Pop_Fields = {
  __typename?: 'task_var_pop_fields';
  attempt_count?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type Task_Var_Samp_Fields = {
  __typename?: 'task_var_samp_fields';
  attempt_count?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type Task_Variance_Fields = {
  __typename?: 'task_variance_fields';
  attempt_count?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "reporting_reporttemplate" */
export type Template = {
  __typename?: 'template';
  changelog: Scalars['String']['output'];
  /** An object relationship */
  client?: Maybe<Client>;
  clientId?: Maybe<Scalars['bigint']['output']>;
  /** An array relationship */
  commandcenterReportconfigurationsByDefaultPptxTemplateId: Array<ReportConfiguration>;
  /** An aggregate relationship */
  commandcenterReportconfigurationsByDefaultPptxTemplateId_aggregate: ReportConfiguration_Aggregate;
  /** An array relationship */
  commandcenter_reportconfigurations: Array<ReportConfiguration>;
  /** An aggregate relationship */
  commandcenter_reportconfigurations_aggregate: ReportConfiguration_Aggregate;
  description: Scalars['String']['output'];
  docTypeId?: Maybe<Scalars['bigint']['output']>;
  document: Scalars['String']['output'];
  /** An array relationship */
  docxTemplates: Array<Report>;
  /** An aggregate relationship */
  docxTemplates_aggregate: Report_Aggregate;
  evidence_image_width: Scalars['float8']['output'];
  filename_override: Scalars['String']['output'];
  id: Scalars['bigint']['output'];
  landscape: Scalars['Boolean']['output'];
  lastUpdate: Scalars['date']['output'];
  lintResult?: Maybe<Scalars['jsonb']['output']>;
  name: Scalars['String']['output'];
  p_style: Scalars['String']['output'];
  /** An array relationship */
  pptxTemplates: Array<Report>;
  /** An aggregate relationship */
  pptxTemplates_aggregate: Report_Aggregate;
  protected: Scalars['Boolean']['output'];
  /** An object relationship */
  reporting_doctype?: Maybe<DocType>;
  uploadDate: Scalars['date']['output'];
  uploadedById?: Maybe<Scalars['bigint']['output']>;
  /** An object relationship */
  user?: Maybe<User>;
};


/** columns and relationships of "reporting_reporttemplate" */
export type TemplateCommandcenterReportconfigurationsByDefaultPptxTemplateIdArgs = {
  distinct_on?: InputMaybe<Array<ReportConfiguration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportConfiguration_Order_By>>;
  where?: InputMaybe<ReportConfiguration_Bool_Exp>;
};


/** columns and relationships of "reporting_reporttemplate" */
export type TemplateCommandcenterReportconfigurationsByDefaultPptxTemplateId_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ReportConfiguration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportConfiguration_Order_By>>;
  where?: InputMaybe<ReportConfiguration_Bool_Exp>;
};


/** columns and relationships of "reporting_reporttemplate" */
export type TemplateCommandcenter_ReportconfigurationsArgs = {
  distinct_on?: InputMaybe<Array<ReportConfiguration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportConfiguration_Order_By>>;
  where?: InputMaybe<ReportConfiguration_Bool_Exp>;
};


/** columns and relationships of "reporting_reporttemplate" */
export type TemplateCommandcenter_Reportconfigurations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ReportConfiguration_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportConfiguration_Order_By>>;
  where?: InputMaybe<ReportConfiguration_Bool_Exp>;
};


/** columns and relationships of "reporting_reporttemplate" */
export type TemplateDocxTemplatesArgs = {
  distinct_on?: InputMaybe<Array<Report_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Report_Order_By>>;
  where?: InputMaybe<Report_Bool_Exp>;
};


/** columns and relationships of "reporting_reporttemplate" */
export type TemplateDocxTemplates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Report_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Report_Order_By>>;
  where?: InputMaybe<Report_Bool_Exp>;
};


/** columns and relationships of "reporting_reporttemplate" */
export type TemplateLintResultArgs = {
  path?: InputMaybe<Scalars['String']['input']>;
};


/** columns and relationships of "reporting_reporttemplate" */
export type TemplatePptxTemplatesArgs = {
  distinct_on?: InputMaybe<Array<Report_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Report_Order_By>>;
  where?: InputMaybe<Report_Bool_Exp>;
};


/** columns and relationships of "reporting_reporttemplate" */
export type TemplatePptxTemplates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Report_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Report_Order_By>>;
  where?: InputMaybe<Report_Bool_Exp>;
};

/** aggregated selection of "reporting_reporttemplate" */
export type Template_Aggregate = {
  __typename?: 'template_aggregate';
  aggregate?: Maybe<Template_Aggregate_Fields>;
  nodes: Array<Template>;
};

export type Template_Aggregate_Bool_Exp = {
  avg?: InputMaybe<Template_Aggregate_Bool_Exp_Avg>;
  bool_and?: InputMaybe<Template_Aggregate_Bool_Exp_Bool_And>;
  bool_or?: InputMaybe<Template_Aggregate_Bool_Exp_Bool_Or>;
  corr?: InputMaybe<Template_Aggregate_Bool_Exp_Corr>;
  count?: InputMaybe<Template_Aggregate_Bool_Exp_Count>;
  covar_samp?: InputMaybe<Template_Aggregate_Bool_Exp_Covar_Samp>;
  max?: InputMaybe<Template_Aggregate_Bool_Exp_Max>;
  min?: InputMaybe<Template_Aggregate_Bool_Exp_Min>;
  stddev_samp?: InputMaybe<Template_Aggregate_Bool_Exp_Stddev_Samp>;
  sum?: InputMaybe<Template_Aggregate_Bool_Exp_Sum>;
  var_samp?: InputMaybe<Template_Aggregate_Bool_Exp_Var_Samp>;
};

export type Template_Aggregate_Bool_Exp_Avg = {
  arguments: Template_Select_Column_Template_Aggregate_Bool_Exp_Avg_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Template_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Template_Aggregate_Bool_Exp_Bool_And = {
  arguments: Template_Select_Column_Template_Aggregate_Bool_Exp_Bool_And_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Template_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Template_Aggregate_Bool_Exp_Bool_Or = {
  arguments: Template_Select_Column_Template_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Template_Bool_Exp>;
  predicate: Boolean_Comparison_Exp;
};

export type Template_Aggregate_Bool_Exp_Corr = {
  arguments: Template_Aggregate_Bool_Exp_Corr_Arguments;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Template_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Template_Aggregate_Bool_Exp_Corr_Arguments = {
  X: Template_Select_Column_Template_Aggregate_Bool_Exp_Corr_Arguments_Columns;
  Y: Template_Select_Column_Template_Aggregate_Bool_Exp_Corr_Arguments_Columns;
};

export type Template_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Template_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Template_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

export type Template_Aggregate_Bool_Exp_Covar_Samp = {
  arguments: Template_Aggregate_Bool_Exp_Covar_Samp_Arguments;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Template_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Template_Aggregate_Bool_Exp_Covar_Samp_Arguments = {
  X: Template_Select_Column_Template_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns;
  Y: Template_Select_Column_Template_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns;
};

export type Template_Aggregate_Bool_Exp_Max = {
  arguments: Template_Select_Column_Template_Aggregate_Bool_Exp_Max_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Template_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Template_Aggregate_Bool_Exp_Min = {
  arguments: Template_Select_Column_Template_Aggregate_Bool_Exp_Min_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Template_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Template_Aggregate_Bool_Exp_Stddev_Samp = {
  arguments: Template_Select_Column_Template_Aggregate_Bool_Exp_Stddev_Samp_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Template_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Template_Aggregate_Bool_Exp_Sum = {
  arguments: Template_Select_Column_Template_Aggregate_Bool_Exp_Sum_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Template_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

export type Template_Aggregate_Bool_Exp_Var_Samp = {
  arguments: Template_Select_Column_Template_Aggregate_Bool_Exp_Var_Samp_Arguments_Columns;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Template_Bool_Exp>;
  predicate: Float8_Comparison_Exp;
};

/** aggregate fields of "reporting_reporttemplate" */
export type Template_Aggregate_Fields = {
  __typename?: 'template_aggregate_fields';
  avg?: Maybe<Template_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Template_Max_Fields>;
  min?: Maybe<Template_Min_Fields>;
  stddev?: Maybe<Template_Stddev_Fields>;
  stddev_pop?: Maybe<Template_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Template_Stddev_Samp_Fields>;
  sum?: Maybe<Template_Sum_Fields>;
  var_pop?: Maybe<Template_Var_Pop_Fields>;
  var_samp?: Maybe<Template_Var_Samp_Fields>;
  variance?: Maybe<Template_Variance_Fields>;
};


/** aggregate fields of "reporting_reporttemplate" */
export type Template_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Template_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "reporting_reporttemplate" */
export type Template_Aggregate_Order_By = {
  avg?: InputMaybe<Template_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Template_Max_Order_By>;
  min?: InputMaybe<Template_Min_Order_By>;
  stddev?: InputMaybe<Template_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Template_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Template_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Template_Sum_Order_By>;
  var_pop?: InputMaybe<Template_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Template_Var_Samp_Order_By>;
  variance?: InputMaybe<Template_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Template_Append_Input = {
  lintResult?: InputMaybe<Scalars['jsonb']['input']>;
};

/** input type for inserting array relation for remote table "reporting_reporttemplate" */
export type Template_Arr_Rel_Insert_Input = {
  data: Array<Template_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Template_On_Conflict>;
};

/** aggregate avg on columns */
export type Template_Avg_Fields = {
  __typename?: 'template_avg_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  docTypeId?: Maybe<Scalars['Float']['output']>;
  evidence_image_width?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  uploadedById?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "reporting_reporttemplate" */
export type Template_Avg_Order_By = {
  clientId?: InputMaybe<Order_By>;
  docTypeId?: InputMaybe<Order_By>;
  evidence_image_width?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  uploadedById?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "reporting_reporttemplate". All fields are combined with a logical 'AND'. */
export type Template_Bool_Exp = {
  _and?: InputMaybe<Array<Template_Bool_Exp>>;
  _not?: InputMaybe<Template_Bool_Exp>;
  _or?: InputMaybe<Array<Template_Bool_Exp>>;
  changelog?: InputMaybe<String_Comparison_Exp>;
  client?: InputMaybe<Client_Bool_Exp>;
  clientId?: InputMaybe<Bigint_Comparison_Exp>;
  commandcenterReportconfigurationsByDefaultPptxTemplateId?: InputMaybe<ReportConfiguration_Bool_Exp>;
  commandcenterReportconfigurationsByDefaultPptxTemplateId_aggregate?: InputMaybe<ReportConfiguration_Aggregate_Bool_Exp>;
  commandcenter_reportconfigurations?: InputMaybe<ReportConfiguration_Bool_Exp>;
  commandcenter_reportconfigurations_aggregate?: InputMaybe<ReportConfiguration_Aggregate_Bool_Exp>;
  description?: InputMaybe<String_Comparison_Exp>;
  docTypeId?: InputMaybe<Bigint_Comparison_Exp>;
  document?: InputMaybe<String_Comparison_Exp>;
  docxTemplates?: InputMaybe<Report_Bool_Exp>;
  docxTemplates_aggregate?: InputMaybe<Report_Aggregate_Bool_Exp>;
  evidence_image_width?: InputMaybe<Float8_Comparison_Exp>;
  filename_override?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  landscape?: InputMaybe<Boolean_Comparison_Exp>;
  lastUpdate?: InputMaybe<Date_Comparison_Exp>;
  lintResult?: InputMaybe<Jsonb_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  p_style?: InputMaybe<String_Comparison_Exp>;
  pptxTemplates?: InputMaybe<Report_Bool_Exp>;
  pptxTemplates_aggregate?: InputMaybe<Report_Aggregate_Bool_Exp>;
  protected?: InputMaybe<Boolean_Comparison_Exp>;
  reporting_doctype?: InputMaybe<DocType_Bool_Exp>;
  uploadDate?: InputMaybe<Date_Comparison_Exp>;
  uploadedById?: InputMaybe<Bigint_Comparison_Exp>;
  user?: InputMaybe<User_Bool_Exp>;
};

/** unique or primary key constraints on table "reporting_reporttemplate" */
export enum Template_Constraint {
  /** unique or primary key constraint on columns "id" */
  ReportingReporttemplatePkey = 'reporting_reporttemplate_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Template_Delete_At_Path_Input = {
  lintResult?: InputMaybe<Array<Scalars['String']['input']>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Template_Delete_Elem_Input = {
  lintResult?: InputMaybe<Scalars['Int']['input']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Template_Delete_Key_Input = {
  lintResult?: InputMaybe<Scalars['String']['input']>;
};

/** input type for incrementing numeric columns in table "reporting_reporttemplate" */
export type Template_Inc_Input = {
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  docTypeId?: InputMaybe<Scalars['bigint']['input']>;
  evidence_image_width?: InputMaybe<Scalars['float8']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  uploadedById?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "reporting_reporttemplate" */
export type Template_Insert_Input = {
  changelog?: InputMaybe<Scalars['String']['input']>;
  client?: InputMaybe<Client_Obj_Rel_Insert_Input>;
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  commandcenterReportconfigurationsByDefaultPptxTemplateId?: InputMaybe<ReportConfiguration_Arr_Rel_Insert_Input>;
  commandcenter_reportconfigurations?: InputMaybe<ReportConfiguration_Arr_Rel_Insert_Input>;
  description?: InputMaybe<Scalars['String']['input']>;
  docTypeId?: InputMaybe<Scalars['bigint']['input']>;
  document?: InputMaybe<Scalars['String']['input']>;
  docxTemplates?: InputMaybe<Report_Arr_Rel_Insert_Input>;
  evidence_image_width?: InputMaybe<Scalars['float8']['input']>;
  filename_override?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  landscape?: InputMaybe<Scalars['Boolean']['input']>;
  lastUpdate?: InputMaybe<Scalars['date']['input']>;
  lintResult?: InputMaybe<Scalars['jsonb']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  p_style?: InputMaybe<Scalars['String']['input']>;
  pptxTemplates?: InputMaybe<Report_Arr_Rel_Insert_Input>;
  protected?: InputMaybe<Scalars['Boolean']['input']>;
  reporting_doctype?: InputMaybe<DocType_Obj_Rel_Insert_Input>;
  uploadDate?: InputMaybe<Scalars['date']['input']>;
  uploadedById?: InputMaybe<Scalars['bigint']['input']>;
  user?: InputMaybe<User_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Template_Max_Fields = {
  __typename?: 'template_max_fields';
  changelog?: Maybe<Scalars['String']['output']>;
  clientId?: Maybe<Scalars['bigint']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  docTypeId?: Maybe<Scalars['bigint']['output']>;
  document?: Maybe<Scalars['String']['output']>;
  evidence_image_width?: Maybe<Scalars['float8']['output']>;
  filename_override?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  lastUpdate?: Maybe<Scalars['date']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  p_style?: Maybe<Scalars['String']['output']>;
  uploadDate?: Maybe<Scalars['date']['output']>;
  uploadedById?: Maybe<Scalars['bigint']['output']>;
};

/** order by max() on columns of table "reporting_reporttemplate" */
export type Template_Max_Order_By = {
  changelog?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  docTypeId?: InputMaybe<Order_By>;
  document?: InputMaybe<Order_By>;
  evidence_image_width?: InputMaybe<Order_By>;
  filename_override?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastUpdate?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  p_style?: InputMaybe<Order_By>;
  uploadDate?: InputMaybe<Order_By>;
  uploadedById?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Template_Min_Fields = {
  __typename?: 'template_min_fields';
  changelog?: Maybe<Scalars['String']['output']>;
  clientId?: Maybe<Scalars['bigint']['output']>;
  description?: Maybe<Scalars['String']['output']>;
  docTypeId?: Maybe<Scalars['bigint']['output']>;
  document?: Maybe<Scalars['String']['output']>;
  evidence_image_width?: Maybe<Scalars['float8']['output']>;
  filename_override?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  lastUpdate?: Maybe<Scalars['date']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  p_style?: Maybe<Scalars['String']['output']>;
  uploadDate?: Maybe<Scalars['date']['output']>;
  uploadedById?: Maybe<Scalars['bigint']['output']>;
};

/** order by min() on columns of table "reporting_reporttemplate" */
export type Template_Min_Order_By = {
  changelog?: InputMaybe<Order_By>;
  clientId?: InputMaybe<Order_By>;
  description?: InputMaybe<Order_By>;
  docTypeId?: InputMaybe<Order_By>;
  document?: InputMaybe<Order_By>;
  evidence_image_width?: InputMaybe<Order_By>;
  filename_override?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  lastUpdate?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  p_style?: InputMaybe<Order_By>;
  uploadDate?: InputMaybe<Order_By>;
  uploadedById?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "reporting_reporttemplate" */
export type Template_Mutation_Response = {
  __typename?: 'template_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Template>;
};

/** input type for inserting object relation for remote table "reporting_reporttemplate" */
export type Template_Obj_Rel_Insert_Input = {
  data: Template_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<Template_On_Conflict>;
};

/** on_conflict condition type for table "reporting_reporttemplate" */
export type Template_On_Conflict = {
  constraint: Template_Constraint;
  update_columns?: Array<Template_Update_Column>;
  where?: InputMaybe<Template_Bool_Exp>;
};

/** Ordering options when selecting data from "reporting_reporttemplate". */
export type Template_Order_By = {
  changelog?: InputMaybe<Order_By>;
  client?: InputMaybe<Client_Order_By>;
  clientId?: InputMaybe<Order_By>;
  commandcenterReportconfigurationsByDefaultPptxTemplateId_aggregate?: InputMaybe<ReportConfiguration_Aggregate_Order_By>;
  commandcenter_reportconfigurations_aggregate?: InputMaybe<ReportConfiguration_Aggregate_Order_By>;
  description?: InputMaybe<Order_By>;
  docTypeId?: InputMaybe<Order_By>;
  document?: InputMaybe<Order_By>;
  docxTemplates_aggregate?: InputMaybe<Report_Aggregate_Order_By>;
  evidence_image_width?: InputMaybe<Order_By>;
  filename_override?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  landscape?: InputMaybe<Order_By>;
  lastUpdate?: InputMaybe<Order_By>;
  lintResult?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  p_style?: InputMaybe<Order_By>;
  pptxTemplates_aggregate?: InputMaybe<Report_Aggregate_Order_By>;
  protected?: InputMaybe<Order_By>;
  reporting_doctype?: InputMaybe<DocType_Order_By>;
  uploadDate?: InputMaybe<Order_By>;
  uploadedById?: InputMaybe<Order_By>;
  user?: InputMaybe<User_Order_By>;
};

/** primary key columns input for table: reporting_reporttemplate */
export type Template_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Template_Prepend_Input = {
  lintResult?: InputMaybe<Scalars['jsonb']['input']>;
};

/** select columns of table "reporting_reporttemplate" */
export enum Template_Select_Column {
  /** column name */
  Changelog = 'changelog',
  /** column name */
  ClientId = 'clientId',
  /** column name */
  Description = 'description',
  /** column name */
  DocTypeId = 'docTypeId',
  /** column name */
  Document = 'document',
  /** column name */
  EvidenceImageWidth = 'evidence_image_width',
  /** column name */
  FilenameOverride = 'filename_override',
  /** column name */
  Id = 'id',
  /** column name */
  Landscape = 'landscape',
  /** column name */
  LastUpdate = 'lastUpdate',
  /** column name */
  LintResult = 'lintResult',
  /** column name */
  Name = 'name',
  /** column name */
  PStyle = 'p_style',
  /** column name */
  Protected = 'protected',
  /** column name */
  UploadDate = 'uploadDate',
  /** column name */
  UploadedById = 'uploadedById'
}

/** select "template_aggregate_bool_exp_avg_arguments_columns" columns of table "reporting_reporttemplate" */
export enum Template_Select_Column_Template_Aggregate_Bool_Exp_Avg_Arguments_Columns {
  /** column name */
  EvidenceImageWidth = 'evidence_image_width'
}

/** select "template_aggregate_bool_exp_bool_and_arguments_columns" columns of table "reporting_reporttemplate" */
export enum Template_Select_Column_Template_Aggregate_Bool_Exp_Bool_And_Arguments_Columns {
  /** column name */
  Landscape = 'landscape',
  /** column name */
  Protected = 'protected'
}

/** select "template_aggregate_bool_exp_bool_or_arguments_columns" columns of table "reporting_reporttemplate" */
export enum Template_Select_Column_Template_Aggregate_Bool_Exp_Bool_Or_Arguments_Columns {
  /** column name */
  Landscape = 'landscape',
  /** column name */
  Protected = 'protected'
}

/** select "template_aggregate_bool_exp_corr_arguments_columns" columns of table "reporting_reporttemplate" */
export enum Template_Select_Column_Template_Aggregate_Bool_Exp_Corr_Arguments_Columns {
  /** column name */
  EvidenceImageWidth = 'evidence_image_width'
}

/** select "template_aggregate_bool_exp_covar_samp_arguments_columns" columns of table "reporting_reporttemplate" */
export enum Template_Select_Column_Template_Aggregate_Bool_Exp_Covar_Samp_Arguments_Columns {
  /** column name */
  EvidenceImageWidth = 'evidence_image_width'
}

/** select "template_aggregate_bool_exp_max_arguments_columns" columns of table "reporting_reporttemplate" */
export enum Template_Select_Column_Template_Aggregate_Bool_Exp_Max_Arguments_Columns {
  /** column name */
  EvidenceImageWidth = 'evidence_image_width'
}

/** select "template_aggregate_bool_exp_min_arguments_columns" columns of table "reporting_reporttemplate" */
export enum Template_Select_Column_Template_Aggregate_Bool_Exp_Min_Arguments_Columns {
  /** column name */
  EvidenceImageWidth = 'evidence_image_width'
}

/** select "template_aggregate_bool_exp_stddev_samp_arguments_columns" columns of table "reporting_reporttemplate" */
export enum Template_Select_Column_Template_Aggregate_Bool_Exp_Stddev_Samp_Arguments_Columns {
  /** column name */
  EvidenceImageWidth = 'evidence_image_width'
}

/** select "template_aggregate_bool_exp_sum_arguments_columns" columns of table "reporting_reporttemplate" */
export enum Template_Select_Column_Template_Aggregate_Bool_Exp_Sum_Arguments_Columns {
  /** column name */
  EvidenceImageWidth = 'evidence_image_width'
}

/** select "template_aggregate_bool_exp_var_samp_arguments_columns" columns of table "reporting_reporttemplate" */
export enum Template_Select_Column_Template_Aggregate_Bool_Exp_Var_Samp_Arguments_Columns {
  /** column name */
  EvidenceImageWidth = 'evidence_image_width'
}

/** input type for updating data in table "reporting_reporttemplate" */
export type Template_Set_Input = {
  changelog?: InputMaybe<Scalars['String']['input']>;
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  docTypeId?: InputMaybe<Scalars['bigint']['input']>;
  document?: InputMaybe<Scalars['String']['input']>;
  evidence_image_width?: InputMaybe<Scalars['float8']['input']>;
  filename_override?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  landscape?: InputMaybe<Scalars['Boolean']['input']>;
  lastUpdate?: InputMaybe<Scalars['date']['input']>;
  lintResult?: InputMaybe<Scalars['jsonb']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  p_style?: InputMaybe<Scalars['String']['input']>;
  protected?: InputMaybe<Scalars['Boolean']['input']>;
  uploadDate?: InputMaybe<Scalars['date']['input']>;
  uploadedById?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate stddev on columns */
export type Template_Stddev_Fields = {
  __typename?: 'template_stddev_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  docTypeId?: Maybe<Scalars['Float']['output']>;
  evidence_image_width?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  uploadedById?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "reporting_reporttemplate" */
export type Template_Stddev_Order_By = {
  clientId?: InputMaybe<Order_By>;
  docTypeId?: InputMaybe<Order_By>;
  evidence_image_width?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  uploadedById?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Template_Stddev_Pop_Fields = {
  __typename?: 'template_stddev_pop_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  docTypeId?: Maybe<Scalars['Float']['output']>;
  evidence_image_width?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  uploadedById?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "reporting_reporttemplate" */
export type Template_Stddev_Pop_Order_By = {
  clientId?: InputMaybe<Order_By>;
  docTypeId?: InputMaybe<Order_By>;
  evidence_image_width?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  uploadedById?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Template_Stddev_Samp_Fields = {
  __typename?: 'template_stddev_samp_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  docTypeId?: Maybe<Scalars['Float']['output']>;
  evidence_image_width?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  uploadedById?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "reporting_reporttemplate" */
export type Template_Stddev_Samp_Order_By = {
  clientId?: InputMaybe<Order_By>;
  docTypeId?: InputMaybe<Order_By>;
  evidence_image_width?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  uploadedById?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "template" */
export type Template_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Template_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Template_Stream_Cursor_Value_Input = {
  changelog?: InputMaybe<Scalars['String']['input']>;
  clientId?: InputMaybe<Scalars['bigint']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  docTypeId?: InputMaybe<Scalars['bigint']['input']>;
  document?: InputMaybe<Scalars['String']['input']>;
  evidence_image_width?: InputMaybe<Scalars['float8']['input']>;
  filename_override?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  landscape?: InputMaybe<Scalars['Boolean']['input']>;
  lastUpdate?: InputMaybe<Scalars['date']['input']>;
  lintResult?: InputMaybe<Scalars['jsonb']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  p_style?: InputMaybe<Scalars['String']['input']>;
  protected?: InputMaybe<Scalars['Boolean']['input']>;
  uploadDate?: InputMaybe<Scalars['date']['input']>;
  uploadedById?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type Template_Sum_Fields = {
  __typename?: 'template_sum_fields';
  clientId?: Maybe<Scalars['bigint']['output']>;
  docTypeId?: Maybe<Scalars['bigint']['output']>;
  evidence_image_width?: Maybe<Scalars['float8']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  uploadedById?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "reporting_reporttemplate" */
export type Template_Sum_Order_By = {
  clientId?: InputMaybe<Order_By>;
  docTypeId?: InputMaybe<Order_By>;
  evidence_image_width?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  uploadedById?: InputMaybe<Order_By>;
};

/** update columns of table "reporting_reporttemplate" */
export enum Template_Update_Column {
  /** column name */
  Changelog = 'changelog',
  /** column name */
  ClientId = 'clientId',
  /** column name */
  Description = 'description',
  /** column name */
  DocTypeId = 'docTypeId',
  /** column name */
  Document = 'document',
  /** column name */
  EvidenceImageWidth = 'evidence_image_width',
  /** column name */
  FilenameOverride = 'filename_override',
  /** column name */
  Id = 'id',
  /** column name */
  Landscape = 'landscape',
  /** column name */
  LastUpdate = 'lastUpdate',
  /** column name */
  LintResult = 'lintResult',
  /** column name */
  Name = 'name',
  /** column name */
  PStyle = 'p_style',
  /** column name */
  Protected = 'protected',
  /** column name */
  UploadDate = 'uploadDate',
  /** column name */
  UploadedById = 'uploadedById'
}

export type Template_Updates = {
  /** append existing jsonb value of filtered columns with new jsonb value */
  _append?: InputMaybe<Template_Append_Input>;
  /** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
  _delete_at_path?: InputMaybe<Template_Delete_At_Path_Input>;
  /** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
  _delete_elem?: InputMaybe<Template_Delete_Elem_Input>;
  /** delete key/value pair or string element. key/value pairs are matched based on their key value */
  _delete_key?: InputMaybe<Template_Delete_Key_Input>;
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Template_Inc_Input>;
  /** prepend existing jsonb value of filtered columns with new jsonb value */
  _prepend?: InputMaybe<Template_Prepend_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Template_Set_Input>;
  /** filter the rows which have to be updated */
  where: Template_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Template_Var_Pop_Fields = {
  __typename?: 'template_var_pop_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  docTypeId?: Maybe<Scalars['Float']['output']>;
  evidence_image_width?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  uploadedById?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "reporting_reporttemplate" */
export type Template_Var_Pop_Order_By = {
  clientId?: InputMaybe<Order_By>;
  docTypeId?: InputMaybe<Order_By>;
  evidence_image_width?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  uploadedById?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Template_Var_Samp_Fields = {
  __typename?: 'template_var_samp_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  docTypeId?: Maybe<Scalars['Float']['output']>;
  evidence_image_width?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  uploadedById?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "reporting_reporttemplate" */
export type Template_Var_Samp_Order_By = {
  clientId?: InputMaybe<Order_By>;
  docTypeId?: InputMaybe<Order_By>;
  evidence_image_width?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  uploadedById?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Template_Variance_Fields = {
  __typename?: 'template_variance_fields';
  clientId?: Maybe<Scalars['Float']['output']>;
  docTypeId?: Maybe<Scalars['Float']['output']>;
  evidence_image_width?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  uploadedById?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "reporting_reporttemplate" */
export type Template_Variance_Order_By = {
  clientId?: InputMaybe<Order_By>;
  docTypeId?: InputMaybe<Order_By>;
  evidence_image_width?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  uploadedById?: InputMaybe<Order_By>;
};

/** Boolean expression to compare columns of type "time". All fields are combined with logical 'AND'. */
export type Time_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['time']['input']>;
  _gt?: InputMaybe<Scalars['time']['input']>;
  _gte?: InputMaybe<Scalars['time']['input']>;
  _in?: InputMaybe<Array<Scalars['time']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['time']['input']>;
  _lte?: InputMaybe<Scalars['time']['input']>;
  _neq?: InputMaybe<Scalars['time']['input']>;
  _nin?: InputMaybe<Array<Scalars['time']['input']>>;
};

/** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
export type Timestamptz_Comparison_Exp = {
  _eq?: InputMaybe<Scalars['timestamptz']['input']>;
  _gt?: InputMaybe<Scalars['timestamptz']['input']>;
  _gte?: InputMaybe<Scalars['timestamptz']['input']>;
  _in?: InputMaybe<Array<Scalars['timestamptz']['input']>>;
  _is_null?: InputMaybe<Scalars['Boolean']['input']>;
  _lt?: InputMaybe<Scalars['timestamptz']['input']>;
  _lte?: InputMaybe<Scalars['timestamptz']['input']>;
  _neq?: InputMaybe<Scalars['timestamptz']['input']>;
  _nin?: InputMaybe<Array<Scalars['timestamptz']['input']>>;
};

/** columns and relationships of "users_user" */
export type User = {
  __typename?: 'user';
  /** An array relationship */
  assignments: Array<ProjectAssignment>;
  /** An aggregate relationship */
  assignments_aggregate: ProjectAssignment_Aggregate;
  /** An array relationship */
  clientInvites: Array<ClientInvite>;
  /** An aggregate relationship */
  clientInvites_aggregate: ClientInvite_Aggregate;
  /** An array relationship */
  clientNotes: Array<ClientNote>;
  /** An aggregate relationship */
  clientNotes_aggregate: ClientNote_Aggregate;
  /** An array relationship */
  cloudServers: Array<CloudServer>;
  /** An aggregate relationship */
  cloudServers_aggregate: CloudServer_Aggregate;
  dateJoined: Scalars['timestamptz']['output'];
  /** An array relationship */
  domainCheckouts: Array<DomainCheckout>;
  /** An aggregate relationship */
  domainCheckouts_aggregate: DomainCheckout_Aggregate;
  /** An array relationship */
  domainNotes: Array<DomainNote>;
  /** An aggregate relationship */
  domainNotes_aggregate: DomainNote_Aggregate;
  /** An array relationship */
  domains: Array<Domain>;
  /** An aggregate relationship */
  domains_aggregate: Domain_Aggregate;
  email: Scalars['String']['output'];
  enable_finding_create: Scalars['Boolean']['output'];
  enable_finding_delete: Scalars['Boolean']['output'];
  enable_finding_edit: Scalars['Boolean']['output'];
  enable_observation_create: Scalars['Boolean']['output'];
  enable_observation_delete: Scalars['Boolean']['output'];
  enable_observation_edit: Scalars['Boolean']['output'];
  /** An array relationship */
  evidences: Array<Evidence>;
  /** An aggregate relationship */
  evidences_aggregate: Evidence_Aggregate;
  /** An array relationship */
  findingNotes: Array<FindingNote>;
  /** An aggregate relationship */
  findingNotes_aggregate: FindingNote_Aggregate;
  /** An array relationship */
  groups: Array<UserGroup>;
  /** An aggregate relationship */
  groups_aggregate: UserGroup_Aggregate;
  id: Scalars['bigint']['output'];
  isActive: Scalars['Boolean']['output'];
  isStaff: Scalars['Boolean']['output'];
  isSuperuser: Scalars['Boolean']['output'];
  lastLogin?: Maybe<Scalars['timestamptz']['output']>;
  name: Scalars['String']['output'];
  password: Scalars['String']['output'];
  phone?: Maybe<Scalars['String']['output']>;
  /** An object relationship */
  profile?: Maybe<UserProfile>;
  /** An array relationship */
  projectInvites: Array<ProjectInvite>;
  /** An aggregate relationship */
  projectInvites_aggregate: ProjectInvite_Aggregate;
  /** An array relationship */
  projectNotes: Array<ProjectNote>;
  /** An aggregate relationship */
  projectNotes_aggregate: ProjectNote_Aggregate;
  /** An array relationship */
  projects: Array<Project>;
  /** An aggregate relationship */
  projects_aggregate: Project_Aggregate;
  /** An array relationship */
  reportTemplates: Array<Template>;
  /** An aggregate relationship */
  reportTemplates_aggregate: Template_Aggregate;
  /** An array relationship */
  reportedFindingNotes: Array<ReportedFindingNote>;
  /** An aggregate relationship */
  reportedFindingNotes_aggregate: ReportedFindingNote_Aggregate;
  /** An array relationship */
  reportedFindings: Array<ReportedFinding>;
  /** An aggregate relationship */
  reportedFindings_aggregate: ReportedFinding_Aggregate;
  /** An array relationship */
  reportedObservations: Array<Reporting_Reportobservationlink>;
  /** An aggregate relationship */
  reportedObservations_aggregate: Reporting_Reportobservationlink_Aggregate;
  /** An array relationship */
  reports: Array<Report>;
  /** An aggregate relationship */
  reports_aggregate: Report_Aggregate;
  require_2fa: Scalars['Boolean']['output'];
  role: Scalars['String']['output'];
  /** An array relationship */
  serverCheckouts: Array<ServerCheckout>;
  /** An aggregate relationship */
  serverCheckouts_aggregate: ServerCheckout_Aggregate;
  /** An array relationship */
  serverNotes: Array<ServerNote>;
  /** An aggregate relationship */
  serverNotes_aggregate: ServerNote_Aggregate;
  /** An array relationship */
  servers: Array<StaticServer>;
  /** An aggregate relationship */
  servers_aggregate: StaticServer_Aggregate;
  timezone: Scalars['String']['output'];
  username: Scalars['String']['output'];
};


/** columns and relationships of "users_user" */
export type UserAssignmentsArgs = {
  distinct_on?: InputMaybe<Array<ProjectAssignment_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectAssignment_Order_By>>;
  where?: InputMaybe<ProjectAssignment_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserAssignments_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ProjectAssignment_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectAssignment_Order_By>>;
  where?: InputMaybe<ProjectAssignment_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserClientInvitesArgs = {
  distinct_on?: InputMaybe<Array<ClientInvite_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientInvite_Order_By>>;
  where?: InputMaybe<ClientInvite_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserClientInvites_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ClientInvite_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientInvite_Order_By>>;
  where?: InputMaybe<ClientInvite_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserClientNotesArgs = {
  distinct_on?: InputMaybe<Array<ClientNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientNote_Order_By>>;
  where?: InputMaybe<ClientNote_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserClientNotes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ClientNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ClientNote_Order_By>>;
  where?: InputMaybe<ClientNote_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserCloudServersArgs = {
  distinct_on?: InputMaybe<Array<CloudServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CloudServer_Order_By>>;
  where?: InputMaybe<CloudServer_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserCloudServers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<CloudServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<CloudServer_Order_By>>;
  where?: InputMaybe<CloudServer_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserDomainCheckoutsArgs = {
  distinct_on?: InputMaybe<Array<DomainCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainCheckout_Order_By>>;
  where?: InputMaybe<DomainCheckout_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserDomainCheckouts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DomainCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainCheckout_Order_By>>;
  where?: InputMaybe<DomainCheckout_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserDomainNotesArgs = {
  distinct_on?: InputMaybe<Array<DomainNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainNote_Order_By>>;
  where?: InputMaybe<DomainNote_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserDomainNotes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<DomainNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<DomainNote_Order_By>>;
  where?: InputMaybe<DomainNote_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserDomainsArgs = {
  distinct_on?: InputMaybe<Array<Domain_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Domain_Order_By>>;
  where?: InputMaybe<Domain_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserDomains_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Domain_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Domain_Order_By>>;
  where?: InputMaybe<Domain_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserEvidencesArgs = {
  distinct_on?: InputMaybe<Array<Evidence_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evidence_Order_By>>;
  where?: InputMaybe<Evidence_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserEvidences_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Evidence_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Evidence_Order_By>>;
  where?: InputMaybe<Evidence_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserFindingNotesArgs = {
  distinct_on?: InputMaybe<Array<FindingNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<FindingNote_Order_By>>;
  where?: InputMaybe<FindingNote_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserFindingNotes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<FindingNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<FindingNote_Order_By>>;
  where?: InputMaybe<FindingNote_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserGroupsArgs = {
  distinct_on?: InputMaybe<Array<UserGroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<UserGroup_Order_By>>;
  where?: InputMaybe<UserGroup_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserGroups_AggregateArgs = {
  distinct_on?: InputMaybe<Array<UserGroup_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<UserGroup_Order_By>>;
  where?: InputMaybe<UserGroup_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserProjectInvitesArgs = {
  distinct_on?: InputMaybe<Array<ProjectInvite_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectInvite_Order_By>>;
  where?: InputMaybe<ProjectInvite_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserProjectInvites_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ProjectInvite_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectInvite_Order_By>>;
  where?: InputMaybe<ProjectInvite_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserProjectNotesArgs = {
  distinct_on?: InputMaybe<Array<ProjectNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectNote_Order_By>>;
  where?: InputMaybe<ProjectNote_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserProjectNotes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ProjectNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ProjectNote_Order_By>>;
  where?: InputMaybe<ProjectNote_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserProjectsArgs = {
  distinct_on?: InputMaybe<Array<Project_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Order_By>>;
  where?: InputMaybe<Project_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserProjects_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Project_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Project_Order_By>>;
  where?: InputMaybe<Project_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserReportTemplatesArgs = {
  distinct_on?: InputMaybe<Array<Template_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Template_Order_By>>;
  where?: InputMaybe<Template_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserReportTemplates_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Template_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Template_Order_By>>;
  where?: InputMaybe<Template_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserReportedFindingNotesArgs = {
  distinct_on?: InputMaybe<Array<ReportedFindingNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportedFindingNote_Order_By>>;
  where?: InputMaybe<ReportedFindingNote_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserReportedFindingNotes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ReportedFindingNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportedFindingNote_Order_By>>;
  where?: InputMaybe<ReportedFindingNote_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserReportedFindingsArgs = {
  distinct_on?: InputMaybe<Array<ReportedFinding_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportedFinding_Order_By>>;
  where?: InputMaybe<ReportedFinding_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserReportedFindings_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ReportedFinding_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ReportedFinding_Order_By>>;
  where?: InputMaybe<ReportedFinding_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserReportedObservationsArgs = {
  distinct_on?: InputMaybe<Array<Reporting_Reportobservationlink_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reporting_Reportobservationlink_Order_By>>;
  where?: InputMaybe<Reporting_Reportobservationlink_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserReportedObservations_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Reporting_Reportobservationlink_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Reporting_Reportobservationlink_Order_By>>;
  where?: InputMaybe<Reporting_Reportobservationlink_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserReportsArgs = {
  distinct_on?: InputMaybe<Array<Report_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Report_Order_By>>;
  where?: InputMaybe<Report_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserReports_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Report_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Report_Order_By>>;
  where?: InputMaybe<Report_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserServerCheckoutsArgs = {
  distinct_on?: InputMaybe<Array<ServerCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerCheckout_Order_By>>;
  where?: InputMaybe<ServerCheckout_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserServerCheckouts_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerCheckout_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerCheckout_Order_By>>;
  where?: InputMaybe<ServerCheckout_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserServerNotesArgs = {
  distinct_on?: InputMaybe<Array<ServerNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerNote_Order_By>>;
  where?: InputMaybe<ServerNote_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserServerNotes_AggregateArgs = {
  distinct_on?: InputMaybe<Array<ServerNote_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<ServerNote_Order_By>>;
  where?: InputMaybe<ServerNote_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserServersArgs = {
  distinct_on?: InputMaybe<Array<StaticServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StaticServer_Order_By>>;
  where?: InputMaybe<StaticServer_Bool_Exp>;
};


/** columns and relationships of "users_user" */
export type UserServers_AggregateArgs = {
  distinct_on?: InputMaybe<Array<StaticServer_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<StaticServer_Order_By>>;
  where?: InputMaybe<StaticServer_Bool_Exp>;
};

/** columns and relationships of "users_user_groups" */
export type UserGroup = {
  __typename?: 'userGroup';
  /** An object relationship */
  authGroup: Group;
  groupId: Scalars['Int']['output'];
  id: Scalars['bigint']['output'];
  userId: Scalars['bigint']['output'];
};

/** aggregated selection of "users_user_groups" */
export type UserGroup_Aggregate = {
  __typename?: 'userGroup_aggregate';
  aggregate?: Maybe<UserGroup_Aggregate_Fields>;
  nodes: Array<UserGroup>;
};

export type UserGroup_Aggregate_Bool_Exp = {
  count?: InputMaybe<UserGroup_Aggregate_Bool_Exp_Count>;
};

export type UserGroup_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<UserGroup_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<UserGroup_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "users_user_groups" */
export type UserGroup_Aggregate_Fields = {
  __typename?: 'userGroup_aggregate_fields';
  avg?: Maybe<UserGroup_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<UserGroup_Max_Fields>;
  min?: Maybe<UserGroup_Min_Fields>;
  stddev?: Maybe<UserGroup_Stddev_Fields>;
  stddev_pop?: Maybe<UserGroup_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<UserGroup_Stddev_Samp_Fields>;
  sum?: Maybe<UserGroup_Sum_Fields>;
  var_pop?: Maybe<UserGroup_Var_Pop_Fields>;
  var_samp?: Maybe<UserGroup_Var_Samp_Fields>;
  variance?: Maybe<UserGroup_Variance_Fields>;
};


/** aggregate fields of "users_user_groups" */
export type UserGroup_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<UserGroup_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "users_user_groups" */
export type UserGroup_Aggregate_Order_By = {
  avg?: InputMaybe<UserGroup_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<UserGroup_Max_Order_By>;
  min?: InputMaybe<UserGroup_Min_Order_By>;
  stddev?: InputMaybe<UserGroup_Stddev_Order_By>;
  stddev_pop?: InputMaybe<UserGroup_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<UserGroup_Stddev_Samp_Order_By>;
  sum?: InputMaybe<UserGroup_Sum_Order_By>;
  var_pop?: InputMaybe<UserGroup_Var_Pop_Order_By>;
  var_samp?: InputMaybe<UserGroup_Var_Samp_Order_By>;
  variance?: InputMaybe<UserGroup_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "users_user_groups" */
export type UserGroup_Arr_Rel_Insert_Input = {
  data: Array<UserGroup_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<UserGroup_On_Conflict>;
};

/** aggregate avg on columns */
export type UserGroup_Avg_Fields = {
  __typename?: 'userGroup_avg_fields';
  groupId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "users_user_groups" */
export type UserGroup_Avg_Order_By = {
  groupId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "users_user_groups". All fields are combined with a logical 'AND'. */
export type UserGroup_Bool_Exp = {
  _and?: InputMaybe<Array<UserGroup_Bool_Exp>>;
  _not?: InputMaybe<UserGroup_Bool_Exp>;
  _or?: InputMaybe<Array<UserGroup_Bool_Exp>>;
  authGroup?: InputMaybe<Group_Bool_Exp>;
  groupId?: InputMaybe<Int_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  userId?: InputMaybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "users_user_groups" */
export enum UserGroup_Constraint {
  /** unique or primary key constraint on columns "id" */
  UsersUserGroupsPkey = 'users_user_groups_pkey',
  /** unique or primary key constraint on columns "user_id", "group_id" */
  UsersUserGroupsUserIdGroupIdB88eab82Uniq = 'users_user_groups_user_id_group_id_b88eab82_uniq'
}

/** input type for incrementing numeric columns in table "users_user_groups" */
export type UserGroup_Inc_Input = {
  groupId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "users_user_groups" */
export type UserGroup_Insert_Input = {
  authGroup?: InputMaybe<Group_Obj_Rel_Insert_Input>;
  groupId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate max on columns */
export type UserGroup_Max_Fields = {
  __typename?: 'userGroup_max_fields';
  groupId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

/** order by max() on columns of table "users_user_groups" */
export type UserGroup_Max_Order_By = {
  groupId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type UserGroup_Min_Fields = {
  __typename?: 'userGroup_min_fields';
  groupId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

/** order by min() on columns of table "users_user_groups" */
export type UserGroup_Min_Order_By = {
  groupId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "users_user_groups" */
export type UserGroup_Mutation_Response = {
  __typename?: 'userGroup_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<UserGroup>;
};

/** on_conflict condition type for table "users_user_groups" */
export type UserGroup_On_Conflict = {
  constraint: UserGroup_Constraint;
  update_columns?: Array<UserGroup_Update_Column>;
  where?: InputMaybe<UserGroup_Bool_Exp>;
};

/** Ordering options when selecting data from "users_user_groups". */
export type UserGroup_Order_By = {
  authGroup?: InputMaybe<Group_Order_By>;
  groupId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: users_user_groups */
export type UserGroup_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "users_user_groups" */
export enum UserGroup_Select_Column {
  /** column name */
  GroupId = 'groupId',
  /** column name */
  Id = 'id',
  /** column name */
  UserId = 'userId'
}

/** input type for updating data in table "users_user_groups" */
export type UserGroup_Set_Input = {
  groupId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate stddev on columns */
export type UserGroup_Stddev_Fields = {
  __typename?: 'userGroup_stddev_fields';
  groupId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "users_user_groups" */
export type UserGroup_Stddev_Order_By = {
  groupId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type UserGroup_Stddev_Pop_Fields = {
  __typename?: 'userGroup_stddev_pop_fields';
  groupId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "users_user_groups" */
export type UserGroup_Stddev_Pop_Order_By = {
  groupId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type UserGroup_Stddev_Samp_Fields = {
  __typename?: 'userGroup_stddev_samp_fields';
  groupId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "users_user_groups" */
export type UserGroup_Stddev_Samp_Order_By = {
  groupId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "userGroup" */
export type UserGroup_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: UserGroup_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type UserGroup_Stream_Cursor_Value_Input = {
  groupId?: InputMaybe<Scalars['Int']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type UserGroup_Sum_Fields = {
  __typename?: 'userGroup_sum_fields';
  groupId?: Maybe<Scalars['Int']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "users_user_groups" */
export type UserGroup_Sum_Order_By = {
  groupId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** update columns of table "users_user_groups" */
export enum UserGroup_Update_Column {
  /** column name */
  GroupId = 'groupId',
  /** column name */
  Id = 'id',
  /** column name */
  UserId = 'userId'
}

export type UserGroup_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<UserGroup_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<UserGroup_Set_Input>;
  /** filter the rows which have to be updated */
  where: UserGroup_Bool_Exp;
};

/** aggregate var_pop on columns */
export type UserGroup_Var_Pop_Fields = {
  __typename?: 'userGroup_var_pop_fields';
  groupId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "users_user_groups" */
export type UserGroup_Var_Pop_Order_By = {
  groupId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type UserGroup_Var_Samp_Fields = {
  __typename?: 'userGroup_var_samp_fields';
  groupId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "users_user_groups" */
export type UserGroup_Var_Samp_Order_By = {
  groupId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type UserGroup_Variance_Fields = {
  __typename?: 'userGroup_variance_fields';
  groupId?: Maybe<Scalars['Float']['output']>;
  id?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "users_user_groups" */
export type UserGroup_Variance_Order_By = {
  groupId?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** columns and relationships of "users_user_user_permissions" */
export type UserPermission = {
  __typename?: 'userPermission';
  /** An object relationship */
  authPermission: AuthPermission;
  id: Scalars['bigint']['output'];
  permissionId: Scalars['Int']['output'];
  user_id: Scalars['bigint']['output'];
};

/** aggregated selection of "users_user_user_permissions" */
export type UserPermission_Aggregate = {
  __typename?: 'userPermission_aggregate';
  aggregate?: Maybe<UserPermission_Aggregate_Fields>;
  nodes: Array<UserPermission>;
};

export type UserPermission_Aggregate_Bool_Exp = {
  count?: InputMaybe<UserPermission_Aggregate_Bool_Exp_Count>;
};

export type UserPermission_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<UserPermission_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<UserPermission_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "users_user_user_permissions" */
export type UserPermission_Aggregate_Fields = {
  __typename?: 'userPermission_aggregate_fields';
  avg?: Maybe<UserPermission_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<UserPermission_Max_Fields>;
  min?: Maybe<UserPermission_Min_Fields>;
  stddev?: Maybe<UserPermission_Stddev_Fields>;
  stddev_pop?: Maybe<UserPermission_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<UserPermission_Stddev_Samp_Fields>;
  sum?: Maybe<UserPermission_Sum_Fields>;
  var_pop?: Maybe<UserPermission_Var_Pop_Fields>;
  var_samp?: Maybe<UserPermission_Var_Samp_Fields>;
  variance?: Maybe<UserPermission_Variance_Fields>;
};


/** aggregate fields of "users_user_user_permissions" */
export type UserPermission_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<UserPermission_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "users_user_user_permissions" */
export type UserPermission_Aggregate_Order_By = {
  avg?: InputMaybe<UserPermission_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<UserPermission_Max_Order_By>;
  min?: InputMaybe<UserPermission_Min_Order_By>;
  stddev?: InputMaybe<UserPermission_Stddev_Order_By>;
  stddev_pop?: InputMaybe<UserPermission_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<UserPermission_Stddev_Samp_Order_By>;
  sum?: InputMaybe<UserPermission_Sum_Order_By>;
  var_pop?: InputMaybe<UserPermission_Var_Pop_Order_By>;
  var_samp?: InputMaybe<UserPermission_Var_Samp_Order_By>;
  variance?: InputMaybe<UserPermission_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "users_user_user_permissions" */
export type UserPermission_Arr_Rel_Insert_Input = {
  data: Array<UserPermission_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<UserPermission_On_Conflict>;
};

/** aggregate avg on columns */
export type UserPermission_Avg_Fields = {
  __typename?: 'userPermission_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  permissionId?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "users_user_user_permissions" */
export type UserPermission_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  permissionId?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "users_user_user_permissions". All fields are combined with a logical 'AND'. */
export type UserPermission_Bool_Exp = {
  _and?: InputMaybe<Array<UserPermission_Bool_Exp>>;
  _not?: InputMaybe<UserPermission_Bool_Exp>;
  _or?: InputMaybe<Array<UserPermission_Bool_Exp>>;
  authPermission?: InputMaybe<AuthPermission_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  permissionId?: InputMaybe<Int_Comparison_Exp>;
  user_id?: InputMaybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "users_user_user_permissions" */
export enum UserPermission_Constraint {
  /** unique or primary key constraint on columns "id" */
  UsersUserUserPermissionsPkey = 'users_user_user_permissions_pkey',
  /** unique or primary key constraint on columns "permission_id", "user_id" */
  UsersUserUserPermissionsUserIdPermissionId_43338c45Uniq = 'users_user_user_permissions_user_id_permission_id_43338c45_uniq'
}

/** input type for incrementing numeric columns in table "users_user_user_permissions" */
export type UserPermission_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  permissionId?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "users_user_user_permissions" */
export type UserPermission_Insert_Input = {
  authPermission?: InputMaybe<AuthPermission_Obj_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  permissionId?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate max on columns */
export type UserPermission_Max_Fields = {
  __typename?: 'userPermission_max_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  permissionId?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['bigint']['output']>;
};

/** order by max() on columns of table "users_user_user_permissions" */
export type UserPermission_Max_Order_By = {
  id?: InputMaybe<Order_By>;
  permissionId?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type UserPermission_Min_Fields = {
  __typename?: 'userPermission_min_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  permissionId?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['bigint']['output']>;
};

/** order by min() on columns of table "users_user_user_permissions" */
export type UserPermission_Min_Order_By = {
  id?: InputMaybe<Order_By>;
  permissionId?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "users_user_user_permissions" */
export type UserPermission_Mutation_Response = {
  __typename?: 'userPermission_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<UserPermission>;
};

/** on_conflict condition type for table "users_user_user_permissions" */
export type UserPermission_On_Conflict = {
  constraint: UserPermission_Constraint;
  update_columns?: Array<UserPermission_Update_Column>;
  where?: InputMaybe<UserPermission_Bool_Exp>;
};

/** Ordering options when selecting data from "users_user_user_permissions". */
export type UserPermission_Order_By = {
  authPermission?: InputMaybe<AuthPermission_Order_By>;
  id?: InputMaybe<Order_By>;
  permissionId?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** primary key columns input for table: users_user_user_permissions */
export type UserPermission_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "users_user_user_permissions" */
export enum UserPermission_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  PermissionId = 'permissionId',
  /** column name */
  UserId = 'user_id'
}

/** input type for updating data in table "users_user_user_permissions" */
export type UserPermission_Set_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  permissionId?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate stddev on columns */
export type UserPermission_Stddev_Fields = {
  __typename?: 'userPermission_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  permissionId?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "users_user_user_permissions" */
export type UserPermission_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  permissionId?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type UserPermission_Stddev_Pop_Fields = {
  __typename?: 'userPermission_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  permissionId?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "users_user_user_permissions" */
export type UserPermission_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  permissionId?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type UserPermission_Stddev_Samp_Fields = {
  __typename?: 'userPermission_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  permissionId?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "users_user_user_permissions" */
export type UserPermission_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  permissionId?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "userPermission" */
export type UserPermission_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: UserPermission_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type UserPermission_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  permissionId?: InputMaybe<Scalars['Int']['input']>;
  user_id?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type UserPermission_Sum_Fields = {
  __typename?: 'userPermission_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  permissionId?: Maybe<Scalars['Int']['output']>;
  user_id?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "users_user_user_permissions" */
export type UserPermission_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  permissionId?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** update columns of table "users_user_user_permissions" */
export enum UserPermission_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  PermissionId = 'permissionId',
  /** column name */
  UserId = 'user_id'
}

export type UserPermission_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<UserPermission_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<UserPermission_Set_Input>;
  /** filter the rows which have to be updated */
  where: UserPermission_Bool_Exp;
};

/** aggregate var_pop on columns */
export type UserPermission_Var_Pop_Fields = {
  __typename?: 'userPermission_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  permissionId?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "users_user_user_permissions" */
export type UserPermission_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  permissionId?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type UserPermission_Var_Samp_Fields = {
  __typename?: 'userPermission_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  permissionId?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "users_user_user_permissions" */
export type UserPermission_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  permissionId?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type UserPermission_Variance_Fields = {
  __typename?: 'userPermission_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  permissionId?: Maybe<Scalars['Float']['output']>;
  user_id?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "users_user_user_permissions" */
export type UserPermission_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  permissionId?: InputMaybe<Order_By>;
  user_id?: InputMaybe<Order_By>;
};

/** columns and relationships of "home_userprofile" */
export type UserProfile = {
  __typename?: 'userProfile';
  avatar: Scalars['String']['output'];
  hide_quickstart: Scalars['Boolean']['output'];
  id: Scalars['bigint']['output'];
  /** An object relationship */
  user: User;
  userId: Scalars['bigint']['output'];
};

/** aggregated selection of "home_userprofile" */
export type UserProfile_Aggregate = {
  __typename?: 'userProfile_aggregate';
  aggregate?: Maybe<UserProfile_Aggregate_Fields>;
  nodes: Array<UserProfile>;
};

/** aggregate fields of "home_userprofile" */
export type UserProfile_Aggregate_Fields = {
  __typename?: 'userProfile_aggregate_fields';
  avg?: Maybe<UserProfile_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<UserProfile_Max_Fields>;
  min?: Maybe<UserProfile_Min_Fields>;
  stddev?: Maybe<UserProfile_Stddev_Fields>;
  stddev_pop?: Maybe<UserProfile_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<UserProfile_Stddev_Samp_Fields>;
  sum?: Maybe<UserProfile_Sum_Fields>;
  var_pop?: Maybe<UserProfile_Var_Pop_Fields>;
  var_samp?: Maybe<UserProfile_Var_Samp_Fields>;
  variance?: Maybe<UserProfile_Variance_Fields>;
};


/** aggregate fields of "home_userprofile" */
export type UserProfile_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<UserProfile_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type UserProfile_Avg_Fields = {
  __typename?: 'userProfile_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "home_userprofile". All fields are combined with a logical 'AND'. */
export type UserProfile_Bool_Exp = {
  _and?: InputMaybe<Array<UserProfile_Bool_Exp>>;
  _not?: InputMaybe<UserProfile_Bool_Exp>;
  _or?: InputMaybe<Array<UserProfile_Bool_Exp>>;
  avatar?: InputMaybe<String_Comparison_Exp>;
  hide_quickstart?: InputMaybe<Boolean_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  user?: InputMaybe<User_Bool_Exp>;
  userId?: InputMaybe<Bigint_Comparison_Exp>;
};

/** unique or primary key constraints on table "home_userprofile" */
export enum UserProfile_Constraint {
  /** unique or primary key constraint on columns "id" */
  HomeUserprofilePkey = 'home_userprofile_pkey',
  /** unique or primary key constraint on columns "user_id" */
  HomeUserprofileUserIdKey = 'home_userprofile_user_id_key'
}

/** input type for incrementing numeric columns in table "home_userprofile" */
export type UserProfile_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "home_userprofile" */
export type UserProfile_Insert_Input = {
  avatar?: InputMaybe<Scalars['String']['input']>;
  hide_quickstart?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  user?: InputMaybe<User_Obj_Rel_Insert_Input>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate max on columns */
export type UserProfile_Max_Fields = {
  __typename?: 'userProfile_max_fields';
  avatar?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

/** aggregate min on columns */
export type UserProfile_Min_Fields = {
  __typename?: 'userProfile_min_fields';
  avatar?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

/** response of any mutation on the table "home_userprofile" */
export type UserProfile_Mutation_Response = {
  __typename?: 'userProfile_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<UserProfile>;
};

/** input type for inserting object relation for remote table "home_userprofile" */
export type UserProfile_Obj_Rel_Insert_Input = {
  data: UserProfile_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<UserProfile_On_Conflict>;
};

/** on_conflict condition type for table "home_userprofile" */
export type UserProfile_On_Conflict = {
  constraint: UserProfile_Constraint;
  update_columns?: Array<UserProfile_Update_Column>;
  where?: InputMaybe<UserProfile_Bool_Exp>;
};

/** Ordering options when selecting data from "home_userprofile". */
export type UserProfile_Order_By = {
  avatar?: InputMaybe<Order_By>;
  hide_quickstart?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  user?: InputMaybe<User_Order_By>;
  userId?: InputMaybe<Order_By>;
};

/** primary key columns input for table: home_userprofile */
export type UserProfile_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "home_userprofile" */
export enum UserProfile_Select_Column {
  /** column name */
  Avatar = 'avatar',
  /** column name */
  HideQuickstart = 'hide_quickstart',
  /** column name */
  Id = 'id',
  /** column name */
  UserId = 'userId'
}

/** input type for updating data in table "home_userprofile" */
export type UserProfile_Set_Input = {
  avatar?: InputMaybe<Scalars['String']['input']>;
  hide_quickstart?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate stddev on columns */
export type UserProfile_Stddev_Fields = {
  __typename?: 'userProfile_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type UserProfile_Stddev_Pop_Fields = {
  __typename?: 'userProfile_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type UserProfile_Stddev_Samp_Fields = {
  __typename?: 'userProfile_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "userProfile" */
export type UserProfile_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: UserProfile_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type UserProfile_Stream_Cursor_Value_Input = {
  avatar?: InputMaybe<Scalars['String']['input']>;
  hide_quickstart?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  userId?: InputMaybe<Scalars['bigint']['input']>;
};

/** aggregate sum on columns */
export type UserProfile_Sum_Fields = {
  __typename?: 'userProfile_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  userId?: Maybe<Scalars['bigint']['output']>;
};

/** update columns of table "home_userprofile" */
export enum UserProfile_Update_Column {
  /** column name */
  Avatar = 'avatar',
  /** column name */
  HideQuickstart = 'hide_quickstart',
  /** column name */
  Id = 'id',
  /** column name */
  UserId = 'userId'
}

export type UserProfile_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<UserProfile_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<UserProfile_Set_Input>;
  /** filter the rows which have to be updated */
  where: UserProfile_Bool_Exp;
};

/** aggregate var_pop on columns */
export type UserProfile_Var_Pop_Fields = {
  __typename?: 'userProfile_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type UserProfile_Var_Samp_Fields = {
  __typename?: 'userProfile_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type UserProfile_Variance_Fields = {
  __typename?: 'userProfile_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  userId?: Maybe<Scalars['Float']['output']>;
};

/** aggregated selection of "users_user" */
export type User_Aggregate = {
  __typename?: 'user_aggregate';
  aggregate?: Maybe<User_Aggregate_Fields>;
  nodes: Array<User>;
};

/** aggregate fields of "users_user" */
export type User_Aggregate_Fields = {
  __typename?: 'user_aggregate_fields';
  avg?: Maybe<User_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<User_Max_Fields>;
  min?: Maybe<User_Min_Fields>;
  stddev?: Maybe<User_Stddev_Fields>;
  stddev_pop?: Maybe<User_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<User_Stddev_Samp_Fields>;
  sum?: Maybe<User_Sum_Fields>;
  var_pop?: Maybe<User_Var_Pop_Fields>;
  var_samp?: Maybe<User_Var_Samp_Fields>;
  variance?: Maybe<User_Variance_Fields>;
};


/** aggregate fields of "users_user" */
export type User_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<User_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type User_Avg_Fields = {
  __typename?: 'user_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "users_user". All fields are combined with a logical 'AND'. */
export type User_Bool_Exp = {
  _and?: InputMaybe<Array<User_Bool_Exp>>;
  _not?: InputMaybe<User_Bool_Exp>;
  _or?: InputMaybe<Array<User_Bool_Exp>>;
  assignments?: InputMaybe<ProjectAssignment_Bool_Exp>;
  assignments_aggregate?: InputMaybe<ProjectAssignment_Aggregate_Bool_Exp>;
  clientInvites?: InputMaybe<ClientInvite_Bool_Exp>;
  clientInvites_aggregate?: InputMaybe<ClientInvite_Aggregate_Bool_Exp>;
  clientNotes?: InputMaybe<ClientNote_Bool_Exp>;
  clientNotes_aggregate?: InputMaybe<ClientNote_Aggregate_Bool_Exp>;
  cloudServers?: InputMaybe<CloudServer_Bool_Exp>;
  cloudServers_aggregate?: InputMaybe<CloudServer_Aggregate_Bool_Exp>;
  dateJoined?: InputMaybe<Timestamptz_Comparison_Exp>;
  domainCheckouts?: InputMaybe<DomainCheckout_Bool_Exp>;
  domainCheckouts_aggregate?: InputMaybe<DomainCheckout_Aggregate_Bool_Exp>;
  domainNotes?: InputMaybe<DomainNote_Bool_Exp>;
  domainNotes_aggregate?: InputMaybe<DomainNote_Aggregate_Bool_Exp>;
  domains?: InputMaybe<Domain_Bool_Exp>;
  domains_aggregate?: InputMaybe<Domain_Aggregate_Bool_Exp>;
  email?: InputMaybe<String_Comparison_Exp>;
  enable_finding_create?: InputMaybe<Boolean_Comparison_Exp>;
  enable_finding_delete?: InputMaybe<Boolean_Comparison_Exp>;
  enable_finding_edit?: InputMaybe<Boolean_Comparison_Exp>;
  enable_observation_create?: InputMaybe<Boolean_Comparison_Exp>;
  enable_observation_delete?: InputMaybe<Boolean_Comparison_Exp>;
  enable_observation_edit?: InputMaybe<Boolean_Comparison_Exp>;
  evidences?: InputMaybe<Evidence_Bool_Exp>;
  evidences_aggregate?: InputMaybe<Evidence_Aggregate_Bool_Exp>;
  findingNotes?: InputMaybe<FindingNote_Bool_Exp>;
  findingNotes_aggregate?: InputMaybe<FindingNote_Aggregate_Bool_Exp>;
  groups?: InputMaybe<UserGroup_Bool_Exp>;
  groups_aggregate?: InputMaybe<UserGroup_Aggregate_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  isActive?: InputMaybe<Boolean_Comparison_Exp>;
  isStaff?: InputMaybe<Boolean_Comparison_Exp>;
  isSuperuser?: InputMaybe<Boolean_Comparison_Exp>;
  lastLogin?: InputMaybe<Timestamptz_Comparison_Exp>;
  name?: InputMaybe<String_Comparison_Exp>;
  password?: InputMaybe<String_Comparison_Exp>;
  phone?: InputMaybe<String_Comparison_Exp>;
  profile?: InputMaybe<UserProfile_Bool_Exp>;
  projectInvites?: InputMaybe<ProjectInvite_Bool_Exp>;
  projectInvites_aggregate?: InputMaybe<ProjectInvite_Aggregate_Bool_Exp>;
  projectNotes?: InputMaybe<ProjectNote_Bool_Exp>;
  projectNotes_aggregate?: InputMaybe<ProjectNote_Aggregate_Bool_Exp>;
  projects?: InputMaybe<Project_Bool_Exp>;
  projects_aggregate?: InputMaybe<Project_Aggregate_Bool_Exp>;
  reportTemplates?: InputMaybe<Template_Bool_Exp>;
  reportTemplates_aggregate?: InputMaybe<Template_Aggregate_Bool_Exp>;
  reportedFindingNotes?: InputMaybe<ReportedFindingNote_Bool_Exp>;
  reportedFindingNotes_aggregate?: InputMaybe<ReportedFindingNote_Aggregate_Bool_Exp>;
  reportedFindings?: InputMaybe<ReportedFinding_Bool_Exp>;
  reportedFindings_aggregate?: InputMaybe<ReportedFinding_Aggregate_Bool_Exp>;
  reportedObservations?: InputMaybe<Reporting_Reportobservationlink_Bool_Exp>;
  reportedObservations_aggregate?: InputMaybe<Reporting_Reportobservationlink_Aggregate_Bool_Exp>;
  reports?: InputMaybe<Report_Bool_Exp>;
  reports_aggregate?: InputMaybe<Report_Aggregate_Bool_Exp>;
  require_2fa?: InputMaybe<Boolean_Comparison_Exp>;
  role?: InputMaybe<String_Comparison_Exp>;
  serverCheckouts?: InputMaybe<ServerCheckout_Bool_Exp>;
  serverCheckouts_aggregate?: InputMaybe<ServerCheckout_Aggregate_Bool_Exp>;
  serverNotes?: InputMaybe<ServerNote_Bool_Exp>;
  serverNotes_aggregate?: InputMaybe<ServerNote_Aggregate_Bool_Exp>;
  servers?: InputMaybe<StaticServer_Bool_Exp>;
  servers_aggregate?: InputMaybe<StaticServer_Aggregate_Bool_Exp>;
  timezone?: InputMaybe<String_Comparison_Exp>;
  username?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "users_user" */
export enum User_Constraint {
  /** unique or primary key constraint on columns "id" */
  UsersUserPkey = 'users_user_pkey',
  /** unique or primary key constraint on columns "username" */
  UsersUserUsernameKey = 'users_user_username_key'
}

/** input type for incrementing numeric columns in table "users_user" */
export type User_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "users_user" */
export type User_Insert_Input = {
  assignments?: InputMaybe<ProjectAssignment_Arr_Rel_Insert_Input>;
  clientInvites?: InputMaybe<ClientInvite_Arr_Rel_Insert_Input>;
  clientNotes?: InputMaybe<ClientNote_Arr_Rel_Insert_Input>;
  cloudServers?: InputMaybe<CloudServer_Arr_Rel_Insert_Input>;
  dateJoined?: InputMaybe<Scalars['timestamptz']['input']>;
  domainCheckouts?: InputMaybe<DomainCheckout_Arr_Rel_Insert_Input>;
  domainNotes?: InputMaybe<DomainNote_Arr_Rel_Insert_Input>;
  domains?: InputMaybe<Domain_Arr_Rel_Insert_Input>;
  email?: InputMaybe<Scalars['String']['input']>;
  enable_finding_create?: InputMaybe<Scalars['Boolean']['input']>;
  enable_finding_delete?: InputMaybe<Scalars['Boolean']['input']>;
  enable_finding_edit?: InputMaybe<Scalars['Boolean']['input']>;
  enable_observation_create?: InputMaybe<Scalars['Boolean']['input']>;
  enable_observation_delete?: InputMaybe<Scalars['Boolean']['input']>;
  enable_observation_edit?: InputMaybe<Scalars['Boolean']['input']>;
  evidences?: InputMaybe<Evidence_Arr_Rel_Insert_Input>;
  findingNotes?: InputMaybe<FindingNote_Arr_Rel_Insert_Input>;
  groups?: InputMaybe<UserGroup_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  isStaff?: InputMaybe<Scalars['Boolean']['input']>;
  isSuperuser?: InputMaybe<Scalars['Boolean']['input']>;
  lastLogin?: InputMaybe<Scalars['timestamptz']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  profile?: InputMaybe<UserProfile_Obj_Rel_Insert_Input>;
  projectInvites?: InputMaybe<ProjectInvite_Arr_Rel_Insert_Input>;
  projectNotes?: InputMaybe<ProjectNote_Arr_Rel_Insert_Input>;
  projects?: InputMaybe<Project_Arr_Rel_Insert_Input>;
  reportTemplates?: InputMaybe<Template_Arr_Rel_Insert_Input>;
  reportedFindingNotes?: InputMaybe<ReportedFindingNote_Arr_Rel_Insert_Input>;
  reportedFindings?: InputMaybe<ReportedFinding_Arr_Rel_Insert_Input>;
  reportedObservations?: InputMaybe<Reporting_Reportobservationlink_Arr_Rel_Insert_Input>;
  reports?: InputMaybe<Report_Arr_Rel_Insert_Input>;
  require_2fa?: InputMaybe<Scalars['Boolean']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
  serverCheckouts?: InputMaybe<ServerCheckout_Arr_Rel_Insert_Input>;
  serverNotes?: InputMaybe<ServerNote_Arr_Rel_Insert_Input>;
  servers?: InputMaybe<StaticServer_Arr_Rel_Insert_Input>;
  timezone?: InputMaybe<Scalars['String']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type User_Max_Fields = {
  __typename?: 'user_max_fields';
  dateJoined?: Maybe<Scalars['timestamptz']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  lastLogin?: Maybe<Scalars['timestamptz']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  password?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  role?: Maybe<Scalars['String']['output']>;
  timezone?: Maybe<Scalars['String']['output']>;
  username?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type User_Min_Fields = {
  __typename?: 'user_min_fields';
  dateJoined?: Maybe<Scalars['timestamptz']['output']>;
  email?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  lastLogin?: Maybe<Scalars['timestamptz']['output']>;
  name?: Maybe<Scalars['String']['output']>;
  password?: Maybe<Scalars['String']['output']>;
  phone?: Maybe<Scalars['String']['output']>;
  role?: Maybe<Scalars['String']['output']>;
  timezone?: Maybe<Scalars['String']['output']>;
  username?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "users_user" */
export type User_Mutation_Response = {
  __typename?: 'user_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<User>;
};

/** input type for inserting object relation for remote table "users_user" */
export type User_Obj_Rel_Insert_Input = {
  data: User_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<User_On_Conflict>;
};

/** on_conflict condition type for table "users_user" */
export type User_On_Conflict = {
  constraint: User_Constraint;
  update_columns?: Array<User_Update_Column>;
  where?: InputMaybe<User_Bool_Exp>;
};

/** Ordering options when selecting data from "users_user". */
export type User_Order_By = {
  assignments_aggregate?: InputMaybe<ProjectAssignment_Aggregate_Order_By>;
  clientInvites_aggregate?: InputMaybe<ClientInvite_Aggregate_Order_By>;
  clientNotes_aggregate?: InputMaybe<ClientNote_Aggregate_Order_By>;
  cloudServers_aggregate?: InputMaybe<CloudServer_Aggregate_Order_By>;
  dateJoined?: InputMaybe<Order_By>;
  domainCheckouts_aggregate?: InputMaybe<DomainCheckout_Aggregate_Order_By>;
  domainNotes_aggregate?: InputMaybe<DomainNote_Aggregate_Order_By>;
  domains_aggregate?: InputMaybe<Domain_Aggregate_Order_By>;
  email?: InputMaybe<Order_By>;
  enable_finding_create?: InputMaybe<Order_By>;
  enable_finding_delete?: InputMaybe<Order_By>;
  enable_finding_edit?: InputMaybe<Order_By>;
  enable_observation_create?: InputMaybe<Order_By>;
  enable_observation_delete?: InputMaybe<Order_By>;
  enable_observation_edit?: InputMaybe<Order_By>;
  evidences_aggregate?: InputMaybe<Evidence_Aggregate_Order_By>;
  findingNotes_aggregate?: InputMaybe<FindingNote_Aggregate_Order_By>;
  groups_aggregate?: InputMaybe<UserGroup_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  isActive?: InputMaybe<Order_By>;
  isStaff?: InputMaybe<Order_By>;
  isSuperuser?: InputMaybe<Order_By>;
  lastLogin?: InputMaybe<Order_By>;
  name?: InputMaybe<Order_By>;
  password?: InputMaybe<Order_By>;
  phone?: InputMaybe<Order_By>;
  profile?: InputMaybe<UserProfile_Order_By>;
  projectInvites_aggregate?: InputMaybe<ProjectInvite_Aggregate_Order_By>;
  projectNotes_aggregate?: InputMaybe<ProjectNote_Aggregate_Order_By>;
  projects_aggregate?: InputMaybe<Project_Aggregate_Order_By>;
  reportTemplates_aggregate?: InputMaybe<Template_Aggregate_Order_By>;
  reportedFindingNotes_aggregate?: InputMaybe<ReportedFindingNote_Aggregate_Order_By>;
  reportedFindings_aggregate?: InputMaybe<ReportedFinding_Aggregate_Order_By>;
  reportedObservations_aggregate?: InputMaybe<Reporting_Reportobservationlink_Aggregate_Order_By>;
  reports_aggregate?: InputMaybe<Report_Aggregate_Order_By>;
  require_2fa?: InputMaybe<Order_By>;
  role?: InputMaybe<Order_By>;
  serverCheckouts_aggregate?: InputMaybe<ServerCheckout_Aggregate_Order_By>;
  serverNotes_aggregate?: InputMaybe<ServerNote_Aggregate_Order_By>;
  servers_aggregate?: InputMaybe<StaticServer_Aggregate_Order_By>;
  timezone?: InputMaybe<Order_By>;
  username?: InputMaybe<Order_By>;
};

/** primary key columns input for table: users_user */
export type User_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "users_user" */
export enum User_Select_Column {
  /** column name */
  DateJoined = 'dateJoined',
  /** column name */
  Email = 'email',
  /** column name */
  EnableFindingCreate = 'enable_finding_create',
  /** column name */
  EnableFindingDelete = 'enable_finding_delete',
  /** column name */
  EnableFindingEdit = 'enable_finding_edit',
  /** column name */
  EnableObservationCreate = 'enable_observation_create',
  /** column name */
  EnableObservationDelete = 'enable_observation_delete',
  /** column name */
  EnableObservationEdit = 'enable_observation_edit',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'isActive',
  /** column name */
  IsStaff = 'isStaff',
  /** column name */
  IsSuperuser = 'isSuperuser',
  /** column name */
  LastLogin = 'lastLogin',
  /** column name */
  Name = 'name',
  /** column name */
  Password = 'password',
  /** column name */
  Phone = 'phone',
  /** column name */
  Require_2fa = 'require_2fa',
  /** column name */
  Role = 'role',
  /** column name */
  Timezone = 'timezone',
  /** column name */
  Username = 'username'
}

/** input type for updating data in table "users_user" */
export type User_Set_Input = {
  dateJoined?: InputMaybe<Scalars['timestamptz']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  enable_finding_create?: InputMaybe<Scalars['Boolean']['input']>;
  enable_finding_delete?: InputMaybe<Scalars['Boolean']['input']>;
  enable_finding_edit?: InputMaybe<Scalars['Boolean']['input']>;
  enable_observation_create?: InputMaybe<Scalars['Boolean']['input']>;
  enable_observation_delete?: InputMaybe<Scalars['Boolean']['input']>;
  enable_observation_edit?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  isStaff?: InputMaybe<Scalars['Boolean']['input']>;
  isSuperuser?: InputMaybe<Scalars['Boolean']['input']>;
  lastLogin?: InputMaybe<Scalars['timestamptz']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  require_2fa?: InputMaybe<Scalars['Boolean']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
  timezone?: InputMaybe<Scalars['String']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type User_Stddev_Fields = {
  __typename?: 'user_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type User_Stddev_Pop_Fields = {
  __typename?: 'user_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type User_Stddev_Samp_Fields = {
  __typename?: 'user_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "user" */
export type User_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: User_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type User_Stream_Cursor_Value_Input = {
  dateJoined?: InputMaybe<Scalars['timestamptz']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  enable_finding_create?: InputMaybe<Scalars['Boolean']['input']>;
  enable_finding_delete?: InputMaybe<Scalars['Boolean']['input']>;
  enable_finding_edit?: InputMaybe<Scalars['Boolean']['input']>;
  enable_observation_create?: InputMaybe<Scalars['Boolean']['input']>;
  enable_observation_delete?: InputMaybe<Scalars['Boolean']['input']>;
  enable_observation_edit?: InputMaybe<Scalars['Boolean']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  isActive?: InputMaybe<Scalars['Boolean']['input']>;
  isStaff?: InputMaybe<Scalars['Boolean']['input']>;
  isSuperuser?: InputMaybe<Scalars['Boolean']['input']>;
  lastLogin?: InputMaybe<Scalars['timestamptz']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
  phone?: InputMaybe<Scalars['String']['input']>;
  require_2fa?: InputMaybe<Scalars['Boolean']['input']>;
  role?: InputMaybe<Scalars['String']['input']>;
  timezone?: InputMaybe<Scalars['String']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type User_Sum_Fields = {
  __typename?: 'user_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
};

/** update columns of table "users_user" */
export enum User_Update_Column {
  /** column name */
  DateJoined = 'dateJoined',
  /** column name */
  Email = 'email',
  /** column name */
  EnableFindingCreate = 'enable_finding_create',
  /** column name */
  EnableFindingDelete = 'enable_finding_delete',
  /** column name */
  EnableFindingEdit = 'enable_finding_edit',
  /** column name */
  EnableObservationCreate = 'enable_observation_create',
  /** column name */
  EnableObservationDelete = 'enable_observation_delete',
  /** column name */
  EnableObservationEdit = 'enable_observation_edit',
  /** column name */
  Id = 'id',
  /** column name */
  IsActive = 'isActive',
  /** column name */
  IsStaff = 'isStaff',
  /** column name */
  IsSuperuser = 'isSuperuser',
  /** column name */
  LastLogin = 'lastLogin',
  /** column name */
  Name = 'name',
  /** column name */
  Password = 'password',
  /** column name */
  Phone = 'phone',
  /** column name */
  Require_2fa = 'require_2fa',
  /** column name */
  Role = 'role',
  /** column name */
  Timezone = 'timezone',
  /** column name */
  Username = 'username'
}

export type User_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<User_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<User_Set_Input>;
  /** filter the rows which have to be updated */
  where: User_Bool_Exp;
};

/** aggregate var_pop on columns */
export type User_Var_Pop_Fields = {
  __typename?: 'user_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type User_Var_Samp_Fields = {
  __typename?: 'user_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type User_Variance_Fields = {
  __typename?: 'user_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** columns and relationships of "rolodex_whitecard" */
export type Whitecard = {
  __typename?: 'whitecard';
  description: Scalars['String']['output'];
  id: Scalars['bigint']['output'];
  issued?: Maybe<Scalars['timestamptz']['output']>;
  /** An object relationship */
  project: Project;
  projectId: Scalars['bigint']['output'];
  title: Scalars['String']['output'];
};

/** aggregated selection of "rolodex_whitecard" */
export type Whitecard_Aggregate = {
  __typename?: 'whitecard_aggregate';
  aggregate?: Maybe<Whitecard_Aggregate_Fields>;
  nodes: Array<Whitecard>;
};

export type Whitecard_Aggregate_Bool_Exp = {
  count?: InputMaybe<Whitecard_Aggregate_Bool_Exp_Count>;
};

export type Whitecard_Aggregate_Bool_Exp_Count = {
  arguments?: InputMaybe<Array<Whitecard_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Whitecard_Bool_Exp>;
  predicate: Int_Comparison_Exp;
};

/** aggregate fields of "rolodex_whitecard" */
export type Whitecard_Aggregate_Fields = {
  __typename?: 'whitecard_aggregate_fields';
  avg?: Maybe<Whitecard_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<Whitecard_Max_Fields>;
  min?: Maybe<Whitecard_Min_Fields>;
  stddev?: Maybe<Whitecard_Stddev_Fields>;
  stddev_pop?: Maybe<Whitecard_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Whitecard_Stddev_Samp_Fields>;
  sum?: Maybe<Whitecard_Sum_Fields>;
  var_pop?: Maybe<Whitecard_Var_Pop_Fields>;
  var_samp?: Maybe<Whitecard_Var_Samp_Fields>;
  variance?: Maybe<Whitecard_Variance_Fields>;
};


/** aggregate fields of "rolodex_whitecard" */
export type Whitecard_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<Whitecard_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** order by aggregate values of table "rolodex_whitecard" */
export type Whitecard_Aggregate_Order_By = {
  avg?: InputMaybe<Whitecard_Avg_Order_By>;
  count?: InputMaybe<Order_By>;
  max?: InputMaybe<Whitecard_Max_Order_By>;
  min?: InputMaybe<Whitecard_Min_Order_By>;
  stddev?: InputMaybe<Whitecard_Stddev_Order_By>;
  stddev_pop?: InputMaybe<Whitecard_Stddev_Pop_Order_By>;
  stddev_samp?: InputMaybe<Whitecard_Stddev_Samp_Order_By>;
  sum?: InputMaybe<Whitecard_Sum_Order_By>;
  var_pop?: InputMaybe<Whitecard_Var_Pop_Order_By>;
  var_samp?: InputMaybe<Whitecard_Var_Samp_Order_By>;
  variance?: InputMaybe<Whitecard_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "rolodex_whitecard" */
export type Whitecard_Arr_Rel_Insert_Input = {
  data: Array<Whitecard_Insert_Input>;
  /** upsert condition */
  on_conflict?: InputMaybe<Whitecard_On_Conflict>;
};

/** aggregate avg on columns */
export type Whitecard_Avg_Fields = {
  __typename?: 'whitecard_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by avg() on columns of table "rolodex_whitecard" */
export type Whitecard_Avg_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** Boolean expression to filter rows from the table "rolodex_whitecard". All fields are combined with a logical 'AND'. */
export type Whitecard_Bool_Exp = {
  _and?: InputMaybe<Array<Whitecard_Bool_Exp>>;
  _not?: InputMaybe<Whitecard_Bool_Exp>;
  _or?: InputMaybe<Array<Whitecard_Bool_Exp>>;
  description?: InputMaybe<String_Comparison_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  issued?: InputMaybe<Timestamptz_Comparison_Exp>;
  project?: InputMaybe<Project_Bool_Exp>;
  projectId?: InputMaybe<Bigint_Comparison_Exp>;
  title?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "rolodex_whitecard" */
export enum Whitecard_Constraint {
  /** unique or primary key constraint on columns "id" */
  RolodexWhitecardPkey = 'rolodex_whitecard_pkey'
}

/** input type for incrementing numeric columns in table "rolodex_whitecard" */
export type Whitecard_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "rolodex_whitecard" */
export type Whitecard_Insert_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  issued?: InputMaybe<Scalars['timestamptz']['input']>;
  project?: InputMaybe<Project_Obj_Rel_Insert_Input>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type Whitecard_Max_Fields = {
  __typename?: 'whitecard_max_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  issued?: Maybe<Scalars['timestamptz']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

/** order by max() on columns of table "rolodex_whitecard" */
export type Whitecard_Max_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  issued?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** aggregate min on columns */
export type Whitecard_Min_Fields = {
  __typename?: 'whitecard_min_fields';
  description?: Maybe<Scalars['String']['output']>;
  id?: Maybe<Scalars['bigint']['output']>;
  issued?: Maybe<Scalars['timestamptz']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
  title?: Maybe<Scalars['String']['output']>;
};

/** order by min() on columns of table "rolodex_whitecard" */
export type Whitecard_Min_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  issued?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** response of any mutation on the table "rolodex_whitecard" */
export type Whitecard_Mutation_Response = {
  __typename?: 'whitecard_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<Whitecard>;
};

/** on_conflict condition type for table "rolodex_whitecard" */
export type Whitecard_On_Conflict = {
  constraint: Whitecard_Constraint;
  update_columns?: Array<Whitecard_Update_Column>;
  where?: InputMaybe<Whitecard_Bool_Exp>;
};

/** Ordering options when selecting data from "rolodex_whitecard". */
export type Whitecard_Order_By = {
  description?: InputMaybe<Order_By>;
  id?: InputMaybe<Order_By>;
  issued?: InputMaybe<Order_By>;
  project?: InputMaybe<Project_Order_By>;
  projectId?: InputMaybe<Order_By>;
  title?: InputMaybe<Order_By>;
};

/** primary key columns input for table: rolodex_whitecard */
export type Whitecard_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "rolodex_whitecard" */
export enum Whitecard_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  Issued = 'issued',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  Title = 'title'
}

/** input type for updating data in table "rolodex_whitecard" */
export type Whitecard_Set_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  issued?: InputMaybe<Scalars['timestamptz']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type Whitecard_Stddev_Fields = {
  __typename?: 'whitecard_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev() on columns of table "rolodex_whitecard" */
export type Whitecard_Stddev_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Whitecard_Stddev_Pop_Fields = {
  __typename?: 'whitecard_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_pop() on columns of table "rolodex_whitecard" */
export type Whitecard_Stddev_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Whitecard_Stddev_Samp_Fields = {
  __typename?: 'whitecard_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by stddev_samp() on columns of table "rolodex_whitecard" */
export type Whitecard_Stddev_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** Streaming cursor of the table "whitecard" */
export type Whitecard_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: Whitecard_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type Whitecard_Stream_Cursor_Value_Input = {
  description?: InputMaybe<Scalars['String']['input']>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  issued?: InputMaybe<Scalars['timestamptz']['input']>;
  projectId?: InputMaybe<Scalars['bigint']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type Whitecard_Sum_Fields = {
  __typename?: 'whitecard_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  projectId?: Maybe<Scalars['bigint']['output']>;
};

/** order by sum() on columns of table "rolodex_whitecard" */
export type Whitecard_Sum_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** update columns of table "rolodex_whitecard" */
export enum Whitecard_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Id = 'id',
  /** column name */
  Issued = 'issued',
  /** column name */
  ProjectId = 'projectId',
  /** column name */
  Title = 'title'
}

export type Whitecard_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<Whitecard_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<Whitecard_Set_Input>;
  /** filter the rows which have to be updated */
  where: Whitecard_Bool_Exp;
};

/** aggregate var_pop on columns */
export type Whitecard_Var_Pop_Fields = {
  __typename?: 'whitecard_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_pop() on columns of table "rolodex_whitecard" */
export type Whitecard_Var_Pop_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Whitecard_Var_Samp_Fields = {
  __typename?: 'whitecard_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by var_samp() on columns of table "rolodex_whitecard" */
export type Whitecard_Var_Samp_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** aggregate variance on columns */
export type Whitecard_Variance_Fields = {
  __typename?: 'whitecard_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
  projectId?: Maybe<Scalars['Float']['output']>;
};

/** order by variance() on columns of table "rolodex_whitecard" */
export type Whitecard_Variance_Order_By = {
  id?: InputMaybe<Order_By>;
  projectId?: InputMaybe<Order_By>;
};

/** columns and relationships of "shepherd_whoisstatus" */
export type WhoisStatus = {
  __typename?: 'whoisStatus';
  /** An array relationship */
  domains: Array<Domain>;
  /** An aggregate relationship */
  domains_aggregate: Domain_Aggregate;
  id: Scalars['bigint']['output'];
  whoisStatus: Scalars['String']['output'];
};


/** columns and relationships of "shepherd_whoisstatus" */
export type WhoisStatusDomainsArgs = {
  distinct_on?: InputMaybe<Array<Domain_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Domain_Order_By>>;
  where?: InputMaybe<Domain_Bool_Exp>;
};


/** columns and relationships of "shepherd_whoisstatus" */
export type WhoisStatusDomains_AggregateArgs = {
  distinct_on?: InputMaybe<Array<Domain_Select_Column>>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  order_by?: InputMaybe<Array<Domain_Order_By>>;
  where?: InputMaybe<Domain_Bool_Exp>;
};

/** aggregated selection of "shepherd_whoisstatus" */
export type WhoisStatus_Aggregate = {
  __typename?: 'whoisStatus_aggregate';
  aggregate?: Maybe<WhoisStatus_Aggregate_Fields>;
  nodes: Array<WhoisStatus>;
};

/** aggregate fields of "shepherd_whoisstatus" */
export type WhoisStatus_Aggregate_Fields = {
  __typename?: 'whoisStatus_aggregate_fields';
  avg?: Maybe<WhoisStatus_Avg_Fields>;
  count: Scalars['Int']['output'];
  max?: Maybe<WhoisStatus_Max_Fields>;
  min?: Maybe<WhoisStatus_Min_Fields>;
  stddev?: Maybe<WhoisStatus_Stddev_Fields>;
  stddev_pop?: Maybe<WhoisStatus_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<WhoisStatus_Stddev_Samp_Fields>;
  sum?: Maybe<WhoisStatus_Sum_Fields>;
  var_pop?: Maybe<WhoisStatus_Var_Pop_Fields>;
  var_samp?: Maybe<WhoisStatus_Var_Samp_Fields>;
  variance?: Maybe<WhoisStatus_Variance_Fields>;
};


/** aggregate fields of "shepherd_whoisstatus" */
export type WhoisStatus_Aggregate_FieldsCountArgs = {
  columns?: InputMaybe<Array<WhoisStatus_Select_Column>>;
  distinct?: InputMaybe<Scalars['Boolean']['input']>;
};

/** aggregate avg on columns */
export type WhoisStatus_Avg_Fields = {
  __typename?: 'whoisStatus_avg_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Boolean expression to filter rows from the table "shepherd_whoisstatus". All fields are combined with a logical 'AND'. */
export type WhoisStatus_Bool_Exp = {
  _and?: InputMaybe<Array<WhoisStatus_Bool_Exp>>;
  _not?: InputMaybe<WhoisStatus_Bool_Exp>;
  _or?: InputMaybe<Array<WhoisStatus_Bool_Exp>>;
  domains?: InputMaybe<Domain_Bool_Exp>;
  domains_aggregate?: InputMaybe<Domain_Aggregate_Bool_Exp>;
  id?: InputMaybe<Bigint_Comparison_Exp>;
  whoisStatus?: InputMaybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "shepherd_whoisstatus" */
export enum WhoisStatus_Constraint {
  /** unique or primary key constraint on columns "id" */
  ShepherdWhoisstatusPkey = 'shepherd_whoisstatus_pkey',
  /** unique or primary key constraint on columns "whois_status" */
  ShepherdWhoisstatusWhoisStatusKey = 'shepherd_whoisstatus_whois_status_key'
}

/** input type for incrementing numeric columns in table "shepherd_whoisstatus" */
export type WhoisStatus_Inc_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
};

/** input type for inserting data into table "shepherd_whoisstatus" */
export type WhoisStatus_Insert_Input = {
  domains?: InputMaybe<Domain_Arr_Rel_Insert_Input>;
  id?: InputMaybe<Scalars['bigint']['input']>;
  whoisStatus?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate max on columns */
export type WhoisStatus_Max_Fields = {
  __typename?: 'whoisStatus_max_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  whoisStatus?: Maybe<Scalars['String']['output']>;
};

/** aggregate min on columns */
export type WhoisStatus_Min_Fields = {
  __typename?: 'whoisStatus_min_fields';
  id?: Maybe<Scalars['bigint']['output']>;
  whoisStatus?: Maybe<Scalars['String']['output']>;
};

/** response of any mutation on the table "shepherd_whoisstatus" */
export type WhoisStatus_Mutation_Response = {
  __typename?: 'whoisStatus_mutation_response';
  /** number of rows affected by the mutation */
  affected_rows: Scalars['Int']['output'];
  /** data from the rows affected by the mutation */
  returning: Array<WhoisStatus>;
};

/** input type for inserting object relation for remote table "shepherd_whoisstatus" */
export type WhoisStatus_Obj_Rel_Insert_Input = {
  data: WhoisStatus_Insert_Input;
  /** upsert condition */
  on_conflict?: InputMaybe<WhoisStatus_On_Conflict>;
};

/** on_conflict condition type for table "shepherd_whoisstatus" */
export type WhoisStatus_On_Conflict = {
  constraint: WhoisStatus_Constraint;
  update_columns?: Array<WhoisStatus_Update_Column>;
  where?: InputMaybe<WhoisStatus_Bool_Exp>;
};

/** Ordering options when selecting data from "shepherd_whoisstatus". */
export type WhoisStatus_Order_By = {
  domains_aggregate?: InputMaybe<Domain_Aggregate_Order_By>;
  id?: InputMaybe<Order_By>;
  whoisStatus?: InputMaybe<Order_By>;
};

/** primary key columns input for table: shepherd_whoisstatus */
export type WhoisStatus_Pk_Columns_Input = {
  id: Scalars['bigint']['input'];
};

/** select columns of table "shepherd_whoisstatus" */
export enum WhoisStatus_Select_Column {
  /** column name */
  Id = 'id',
  /** column name */
  WhoisStatus = 'whoisStatus'
}

/** input type for updating data in table "shepherd_whoisstatus" */
export type WhoisStatus_Set_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  whoisStatus?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate stddev on columns */
export type WhoisStatus_Stddev_Fields = {
  __typename?: 'whoisStatus_stddev_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_pop on columns */
export type WhoisStatus_Stddev_Pop_Fields = {
  __typename?: 'whoisStatus_stddev_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate stddev_samp on columns */
export type WhoisStatus_Stddev_Samp_Fields = {
  __typename?: 'whoisStatus_stddev_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** Streaming cursor of the table "whoisStatus" */
export type WhoisStatus_Stream_Cursor_Input = {
  /** Stream column input with initial value */
  initial_value: WhoisStatus_Stream_Cursor_Value_Input;
  /** cursor ordering */
  ordering?: InputMaybe<Cursor_Ordering>;
};

/** Initial value of the column from where the streaming should start */
export type WhoisStatus_Stream_Cursor_Value_Input = {
  id?: InputMaybe<Scalars['bigint']['input']>;
  whoisStatus?: InputMaybe<Scalars['String']['input']>;
};

/** aggregate sum on columns */
export type WhoisStatus_Sum_Fields = {
  __typename?: 'whoisStatus_sum_fields';
  id?: Maybe<Scalars['bigint']['output']>;
};

/** update columns of table "shepherd_whoisstatus" */
export enum WhoisStatus_Update_Column {
  /** column name */
  Id = 'id',
  /** column name */
  WhoisStatus = 'whoisStatus'
}

export type WhoisStatus_Updates = {
  /** increments the numeric columns with given value of the filtered values */
  _inc?: InputMaybe<WhoisStatus_Inc_Input>;
  /** sets the columns of the filtered rows to the given values */
  _set?: InputMaybe<WhoisStatus_Set_Input>;
  /** filter the rows which have to be updated */
  where: WhoisStatus_Bool_Exp;
};

/** aggregate var_pop on columns */
export type WhoisStatus_Var_Pop_Fields = {
  __typename?: 'whoisStatus_var_pop_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate var_samp on columns */
export type WhoisStatus_Var_Samp_Fields = {
  __typename?: 'whoisStatus_var_samp_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

/** aggregate variance on columns */
export type WhoisStatus_Variance_Fields = {
  __typename?: 'whoisStatus_variance_fields';
  id?: Maybe<Scalars['Float']['output']>;
};

export type Get_FindingQueryVariables = Exact<{
  id: Scalars['bigint']['input'];
}>;


export type Get_FindingQuery = { __typename?: 'query_root', finding_by_pk?: { __typename?: 'finding', title: string, description: string, impact: string, mitigation: string, replication_steps: string, hostDetectionTechniques: string, networkDetectionTechniques: string, references: string, findingGuidance: string, cvssScore?: any | null, cvssVector: string, findingTypeId: any, extraFields: any, severity: { __typename?: 'findingSeverity', id: any } } | null, tags: { __typename?: 'TagsResult', tags: Array<string> }, extraFieldSpec: Array<{ __typename?: 'extraFieldSpec', internalName: string, type: string }> };

export type Set_FindingMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  set: Finding_Set_Input;
  tags: Array<Scalars['String']['input']> | Scalars['String']['input'];
}>;


export type Set_FindingMutation = { __typename?: 'mutation_root', update_finding_by_pk?: { __typename?: 'finding', id: any } | null, setTags: { __typename?: 'TagsResult', tags: Array<string> } };

export type Get_ObservationQueryVariables = Exact<{
  id: Scalars['bigint']['input'];
}>;


export type Get_ObservationQuery = { __typename?: 'query_root', reporting_observation_by_pk?: { __typename?: 'reporting_observation', title: string, description: string, extraFields: any } | null, tags: { __typename?: 'TagsResult', tags: Array<string> }, extraFieldSpec: Array<{ __typename?: 'extraFieldSpec', internalName: string, type: string }> };

export type Set_ObservationMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  title: Scalars['String']['input'];
  description: Scalars['String']['input'];
  tags: Array<Scalars['String']['input']> | Scalars['String']['input'];
  extraFields: Scalars['jsonb']['input'];
}>;


export type Set_ObservationMutation = { __typename?: 'mutation_root', update_reporting_observation_by_pk?: { __typename?: 'reporting_observation', id: any } | null, setTags: { __typename?: 'TagsResult', tags: Array<string> } };

export type Get_ProjectQueryVariables = Exact<{
  id: Scalars['bigint']['input'];
}>;


export type Get_ProjectQuery = { __typename?: 'query_root', project_by_pk?: { __typename?: 'project', collab_note: string } | null };

export type Set_ProjectMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  collabNote: Scalars['String']['input'];
}>;


export type Set_ProjectMutation = { __typename?: 'mutation_root', update_project_by_pk?: { __typename?: 'project', id: any } | null };

export type Get_ReportQueryVariables = Exact<{
  id: Scalars['bigint']['input'];
}>;


export type Get_ReportQuery = { __typename?: 'query_root', report_by_pk?: { __typename?: 'report', extraFields: any } | null, extraFieldSpec: Array<{ __typename?: 'extraFieldSpec', internalName: string, type: string }> };

export type EviMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  extraFields: Scalars['jsonb']['input'];
}>;


export type EviMutation = { __typename?: 'mutation_root', update_report_by_pk?: { __typename?: 'report', id: any } | null };

export type Get_Report_Finding_LinkQueryVariables = Exact<{
  id: Scalars['bigint']['input'];
}>;


export type Get_Report_Finding_LinkQuery = { __typename?: 'query_root', reportedFinding_by_pk?: { __typename?: 'reportedFinding', title: string, description: string, impact: string, mitigation: string, replication_steps: string, hostDetectionTechniques: string, networkDetectionTechniques: string, references: string, findingGuidance: string, cvssScore?: any | null, cvssVector: string, findingTypeId: any, affectedEntities: string, extraFields: any, severity: { __typename?: 'findingSeverity', id: any } } | null, tags: { __typename?: 'TagsResult', tags: Array<string> }, extraFieldSpec: Array<{ __typename?: 'extraFieldSpec', internalName: string, type: string }> };

export type Set_Report_Finding_LinkMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  set: ReportedFinding_Set_Input;
  tags: Array<Scalars['String']['input']> | Scalars['String']['input'];
}>;


export type Set_Report_Finding_LinkMutation = { __typename?: 'mutation_root', update_reportedFinding_by_pk?: { __typename?: 'reportedFinding', id: any } | null, setTags: { __typename?: 'TagsResult', tags: Array<string> } };

export type Get_Report_Observation_LinkQueryVariables = Exact<{
  id: Scalars['bigint']['input'];
}>;


export type Get_Report_Observation_LinkQuery = { __typename?: 'query_root', reporting_reportobservationlink_by_pk?: { __typename?: 'reporting_reportobservationlink', title: string, description: string, extraFields: any } | null, tags: { __typename?: 'TagsResult', tags: Array<string> }, extraFieldSpec: Array<{ __typename?: 'extraFieldSpec', internalName: string, type: string }> };

export type Set_Report_Observation_LinkMutationVariables = Exact<{
  id: Scalars['bigint']['input'];
  title: Scalars['String']['input'];
  description: Scalars['String']['input'];
  tags: Array<Scalars['String']['input']> | Scalars['String']['input'];
  extraFields: Scalars['jsonb']['input'];
}>;


export type Set_Report_Observation_LinkMutation = { __typename?: 'mutation_root', update_reporting_reportobservationlink_by_pk?: { __typename?: 'reporting_reportobservationlink', id: any } | null, setTags: { __typename?: 'TagsResult', tags: Array<string> } };

export type Get_Finding_TypesQueryVariables = Exact<{ [key: string]: never; }>;


export type Get_Finding_TypesQuery = { __typename?: 'query_root', findingType: Array<{ __typename?: 'findingType', id: any, findingType: string }> };

export type Get_SeveritiesQueryVariables = Exact<{ [key: string]: never; }>;


export type Get_SeveritiesQuery = { __typename?: 'query_root', findingSeverity: Array<{ __typename?: 'findingSeverity', id: any, severity: string }> };

export type Query_EvidenceQueryVariables = Exact<{
  where: Evidence_Bool_Exp;
}>;


export type Query_EvidenceQuery = { __typename?: 'query_root', evidence: Array<{ __typename?: 'evidence', id: any, caption: string, description: string, friendlyName: string, document: string }> };


export const Get_FindingDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_FINDING"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"finding_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"impact"}},{"kind":"Field","name":{"kind":"Name","value":"mitigation"}},{"kind":"Field","name":{"kind":"Name","value":"replication_steps"}},{"kind":"Field","name":{"kind":"Name","value":"hostDetectionTechniques"}},{"kind":"Field","name":{"kind":"Name","value":"networkDetectionTechniques"}},{"kind":"Field","name":{"kind":"Name","value":"references"}},{"kind":"Field","name":{"kind":"Name","value":"findingGuidance"}},{"kind":"Field","name":{"kind":"Name","value":"cvssScore"}},{"kind":"Field","name":{"kind":"Name","value":"cvssVector"}},{"kind":"Field","name":{"kind":"Name","value":"severity"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"findingTypeId"}},{"kind":"Field","name":{"kind":"Name","value":"extraFields"}}]}},{"kind":"Field","name":{"kind":"Name","value":"tags"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"model"},"value":{"kind":"StringValue","value":"finding","block":false}},{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"tags"}}]}},{"kind":"Field","name":{"kind":"Name","value":"extraFieldSpec"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"targetModel"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"StringValue","value":"reporting.Finding","block":false}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"internalName"}},{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}}]} as unknown as DocumentNode<Get_FindingQuery, Get_FindingQueryVariables>;
export const Set_FindingDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SET_FINDING"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"set"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"finding_set_input"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"tags"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"update_finding_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"set"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"setTags"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"model"},"value":{"kind":"StringValue","value":"finding","block":false}},{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"tags"},"value":{"kind":"Variable","name":{"kind":"Name","value":"tags"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"tags"}}]}}]}}]} as unknown as DocumentNode<Set_FindingMutation, Set_FindingMutationVariables>;
export const Get_ObservationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_OBSERVATION"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"reporting_observation_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"extraFields"}}]}},{"kind":"Field","name":{"kind":"Name","value":"tags"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"model"},"value":{"kind":"StringValue","value":"observation","block":false}},{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"tags"}}]}},{"kind":"Field","name":{"kind":"Name","value":"extraFieldSpec"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"targetModel"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"StringValue","value":"reporting.Observation","block":false}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"internalName"}},{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}}]} as unknown as DocumentNode<Get_ObservationQuery, Get_ObservationQueryVariables>;
export const Set_ObservationDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SET_OBSERVATION"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"title"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"description"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"tags"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"extraFields"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"jsonb"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"update_reporting_observation_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"title"},"value":{"kind":"Variable","name":{"kind":"Name","value":"title"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"description"},"value":{"kind":"Variable","name":{"kind":"Name","value":"description"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"extraFields"},"value":{"kind":"Variable","name":{"kind":"Name","value":"extraFields"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"setTags"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"model"},"value":{"kind":"StringValue","value":"observation","block":false}},{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"tags"},"value":{"kind":"Variable","name":{"kind":"Name","value":"tags"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"tags"}}]}}]}}]} as unknown as DocumentNode<Set_ObservationMutation, Set_ObservationMutationVariables>;
export const Get_ProjectDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_PROJECT"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"project_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"collab_note"}}]}}]}}]} as unknown as DocumentNode<Get_ProjectQuery, Get_ProjectQueryVariables>;
export const Set_ProjectDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SET_PROJECT"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"collabNote"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"update_project_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"collab_note"},"value":{"kind":"Variable","name":{"kind":"Name","value":"collabNote"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<Set_ProjectMutation, Set_ProjectMutationVariables>;
export const Get_ReportDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_REPORT"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"report_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"extraFields"}}]}},{"kind":"Field","name":{"kind":"Name","value":"extraFieldSpec"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"targetModel"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"StringValue","value":"reporting.Report","block":false}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"internalName"}},{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}}]} as unknown as DocumentNode<Get_ReportQuery, Get_ReportQueryVariables>;
export const EviDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"evi"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"extraFields"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"jsonb"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"update_report_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"extraFields"},"value":{"kind":"Variable","name":{"kind":"Name","value":"extraFields"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]} as unknown as DocumentNode<EviMutation, EviMutationVariables>;
export const Get_Report_Finding_LinkDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_REPORT_FINDING_LINK"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"reportedFinding_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"impact"}},{"kind":"Field","name":{"kind":"Name","value":"mitigation"}},{"kind":"Field","name":{"kind":"Name","value":"replication_steps"}},{"kind":"Field","name":{"kind":"Name","value":"hostDetectionTechniques"}},{"kind":"Field","name":{"kind":"Name","value":"networkDetectionTechniques"}},{"kind":"Field","name":{"kind":"Name","value":"references"}},{"kind":"Field","name":{"kind":"Name","value":"findingGuidance"}},{"kind":"Field","name":{"kind":"Name","value":"cvssScore"}},{"kind":"Field","name":{"kind":"Name","value":"cvssVector"}},{"kind":"Field","name":{"kind":"Name","value":"severity"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"findingTypeId"}},{"kind":"Field","name":{"kind":"Name","value":"affectedEntities"}},{"kind":"Field","name":{"kind":"Name","value":"extraFields"}}]}},{"kind":"Field","name":{"kind":"Name","value":"tags"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"model"},"value":{"kind":"StringValue","value":"report_finding_link","block":false}},{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"tags"}}]}},{"kind":"Field","name":{"kind":"Name","value":"extraFieldSpec"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"targetModel"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"StringValue","value":"reporting.Finding","block":false}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"internalName"}},{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}}]} as unknown as DocumentNode<Get_Report_Finding_LinkQuery, Get_Report_Finding_LinkQueryVariables>;
export const Set_Report_Finding_LinkDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SET_REPORT_FINDING_LINK"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"set"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"reportedFinding_set_input"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"tags"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"update_reportedFinding_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"set"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"setTags"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"model"},"value":{"kind":"StringValue","value":"report_finding_link","block":false}},{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"tags"},"value":{"kind":"Variable","name":{"kind":"Name","value":"tags"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"tags"}}]}}]}}]} as unknown as DocumentNode<Set_Report_Finding_LinkMutation, Set_Report_Finding_LinkMutationVariables>;
export const Get_Report_Observation_LinkDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_REPORT_OBSERVATION_LINK"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"reporting_reportobservationlink_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"extraFields"}}]}},{"kind":"Field","name":{"kind":"Name","value":"tags"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"model"},"value":{"kind":"StringValue","value":"report_observation_link","block":false}},{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"tags"}}]}},{"kind":"Field","name":{"kind":"Name","value":"extraFieldSpec"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"targetModel"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"StringValue","value":"reporting.Observation","block":false}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"internalName"}},{"kind":"Field","name":{"kind":"Name","value":"type"}}]}}]}}]} as unknown as DocumentNode<Get_Report_Observation_LinkQuery, Get_Report_Observation_LinkQueryVariables>;
export const Set_Report_Observation_LinkDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SET_REPORT_OBSERVATION_LINK"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"id"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"bigint"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"title"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"description"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"tags"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"extraFields"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"jsonb"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"update_reporting_reportobservationlink_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"pk_columns"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"title"},"value":{"kind":"Variable","name":{"kind":"Name","value":"title"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"description"},"value":{"kind":"Variable","name":{"kind":"Name","value":"description"}}},{"kind":"ObjectField","name":{"kind":"Name","value":"extraFields"},"value":{"kind":"Variable","name":{"kind":"Name","value":"extraFields"}}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}},{"kind":"Field","name":{"kind":"Name","value":"setTags"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"model"},"value":{"kind":"StringValue","value":"report_observation_link","block":false}},{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"id"}}},{"kind":"Argument","name":{"kind":"Name","value":"tags"},"value":{"kind":"Variable","name":{"kind":"Name","value":"tags"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"tags"}}]}}]}}]} as unknown as DocumentNode<Set_Report_Observation_LinkMutation, Set_Report_Observation_LinkMutationVariables>;
export const Get_Finding_TypesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_FINDING_TYPES"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"findingType"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"EnumValue","value":"asc"}}]}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"findingType"}}]}}]}}]} as unknown as DocumentNode<Get_Finding_TypesQuery, Get_Finding_TypesQueryVariables>;
export const Get_SeveritiesDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"GET_SEVERITIES"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"findingSeverity"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"order_by"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"id"},"value":{"kind":"EnumValue","value":"asc"}}]}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"severity"}}]}}]}}]} as unknown as DocumentNode<Get_SeveritiesQuery, Get_SeveritiesQueryVariables>;
export const Query_EvidenceDocument = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"QUERY_EVIDENCE"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"where"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"evidence_bool_exp"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"evidence"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"Variable","name":{"kind":"Name","value":"where"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"caption"}},{"kind":"Field","name":{"kind":"Name","value":"description"}},{"kind":"Field","name":{"kind":"Name","value":"friendlyName"}},{"kind":"Field","name":{"kind":"Name","value":"document"}}]}}]}}]} as unknown as DocumentNode<Query_EvidenceQuery, Query_EvidenceQueryVariables>;