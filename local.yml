version: "3"

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile
      args:
        STAGE: local
    image: ghostwriter_local_django
    depends_on:
      - postgres
    volumes:
      - .:/app
    labels:
      name: ghostwriter_django
    environment:
      - USE_DOCKER=${USE_DOCKER:-yes}
      - IPYTHONDIR=${IPYTHONDIR:-/app/.ipython}
      - DJANGO_ACCOUNT_ALLOW_REGISTRATION=${DJANGO_ACCOUNT_ALLOW_REGISTRATION:-false}
      - DJANGO_ACCOUNT_EMAIL_VERIFICATION=${DJANGO_ACCOUNT_EMAIL_VERIFICATION:-none}
      - DJANGO_ADMIN_URL=${DJANGO_ADMIN_URL:-admin/}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS:-}
      - DJANGO_DATE_FORMAT=${DJANGO_DATE_FORMAT:-d M Y}
      - DJANGO_JWT_SECRET_KEY=${DJANGO_JWT_SECRET_KEY:-}
      - DJANGO_QCLUSTER_NAME=${DJANGO_QCLUSTER_NAME:-}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_SECURE_SSL_REDIRECT=${DJANGO_SECURE_SSL_REDIRECT:-false}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-config.settings.local}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL:-admin@ghostwriter.local}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME:-admin}
      - HASURA_ACTION_SECRET=${HASURA_GRAPHQL_ACTION_SECRET}
      - POSTGRES_DB=${POSTGRES_DB:-ghostwriter}
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - REDIS_URL=redis://${REDIS_HOST:-redis}:${REDIS_PORT:-6379}/0
      - WEB_CONCURRENCY=${DJANGO_WEB_CONCURRENCY:-4}
    ports:
      - "8000:8000"
    command: /start dev

  postgres:
    build:
      context: .
      dockerfile: ./compose/postgres/Dockerfile
    image: ghostwriter_production_postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    labels:
      name: ghostwriter_postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-ghostwriter}
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"

  redis:
    image: redis:6-alpine
    labels:
      name: ghostwriter_redis

  queue:
    <<: *django
    image: ghostwriter_local_queue
    depends_on:
      - redis
      - postgres
    labels:
      name: ghostwriter_queue
    ports: []
    command: /start queue

  graphql_engine:
    image: hasura/graphql-engine:v2.7.0.cli-migrations-v3
    depends_on:
      - postgres
      - django
    restart: always
    ports:
      - "${HASURA_GRAPHQL_SERVER_PORT:-8080}:8080"
      - "9691:9691"
    volumes:
      - ./hasura-docker/metadata:/metadata
    logging:
      driver: "json-file"
      options:
        max-file: "1"
        max-size: "10m"
    labels:
      name: ghostwriter_graphql
    environment:
      - ACTIONS_URL_BASE=http://${DJANGO_HOST:-django}:${DJANGO_PORT:-8000}/api
      - HASURA_ACTION_SECRET=${HASURA_GRAPHQL_ACTION_SECRET}
      - HASURA_GRAPHQL_ADMIN_SECRET=${HASURA_GRAPHQL_ADMIN_SECRET}
      - HASURA_GRAPHQL_AUTH_HOOK=http://${DJANGO_HOST:-django}:${DJANGO_PORT:-8000}/api/webhook
      - HASURA_GRAPHQL_DATABASE_URL=postgres://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@${POSTGRES_HOST:-postgres}:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-ghostwriter}
      - HASURA_GRAPHQL_DEV_MODE=${HASURA_GRAPHQL_DEV_MODE:-true}
      - HASURA_GRAPHQL_ENABLE_CONSOLE=${HASURA_GRAPHQL_ENABLE_CONSOLE:-true}
      - HASURA_GRAPHQL_ENABLED_LOG_TYPES=${HASURA_GRAPHQL_ENABLED_LOG_TYPES:-startup, http-log, webhook-log, websocket-log, query-log}
      - HASURA_GRAPHQL_ENABLE_TELEMETRY=${HASURA_GRAPHQL_ENABLE_TELEMETRY:-false}
      - HASURA_GRAPHQL_INSECURE_SKIP_TLS_VERIFY=${HASURA_GRAPHQL_INSECURE_SKIP_TLS_VERIFY:-true}
      - HASURA_GRAPHQL_LOG_LEVEL=${HASURA_GRAPHQL_LOG_LEVEL:-warn}
      - HASURA_GRAPHQL_METADATA_DIR=${HASURA_GRAPHQL_METADATA_DIR:-/metadata}
      - HASURA_GRAPHQL_MIGRATIONS_DIR=${HASURA_GRAPHQL_MIGRATIONS_DIR:-/migrations}
      - HASURA_GRAPHQL_SERVER_PORT=${HASURA_GRAPHQL_SERVER_PORT:-8080}
